version: "2.1"
services:
  postgres:
    image: postgres:16.2
    restart: always
    environment:
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=asdf
      - POSTGRES_DB=surveystream
    volumes:
      - ../tests/unit/data/launch_local_db/data:/docker-entrypoint-initdb.d/data
    ports:
      - "5433:5433"
    command: -p 5433
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -p 5433"]
      interval: 5s
      timeout: 5s
      retries: 5
  api:
    image: ${BACKEND_NAME}:${VERSION}
    environment:
      CONFIG_TYPE: app.config.UnitTestConfig
      PYTHONUNBUFFERED: "1"
      AWS_REGION: ap-south-1
      ADMIN_ACCOUNT: ${ADMIN_ACCOUNT}
      USE_DB_MIGRATIONS: ${USE_DB_MIGRATIONS}
      TEST_PATHS: "${TEST_PATHS}"
    volumes:
      - /tmp/coverage:/usr/src/${BACKEND_NAME}/tests/output
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        . /bootstrap.sh
        echo "Container TEST_PATHS raw: '${TEST_PATHS}'"
        if [ -z "${TEST_PATHS}" ]; then
          TARGETS="tests"
        else
          TARGETS="${TEST_PATHS}"
        fi
        echo "Running pytest on: ${TARGETS}"
        coverage run -m pytest ${TARGETS} -vv
        coverage lcov --include="/usr/src/${BACKEND_NAME}/app/*" -o /usr/src/${BACKEND_NAME}/tests/output/coverage.lcov