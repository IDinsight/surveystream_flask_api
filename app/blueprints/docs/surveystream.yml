openapi: 3.0.2
info:
  title: SurveyStream API
  description: >
    Internal endpoints for the SurveyStream web application

    ### Context

    SurveyStream is a survey management software application developed under
    IDinsight’s DataDelta initiative.  SurveyStream is the centralized hub for
    managing DataDelta’s survey operations in real time enabling fast,  cheap,
    high quality data collection.
    SurveyStream is a survey management software application developed under
    IDinsight’s DataDelta initiative.  SurveyStream is the centralized hub for
    managing DataDelta’s survey operations in real time enabling fast,  cheap,
    high quality data collection.


    The SurveyStream web application enables survey supervisors to view survey
    targets, view and manage enumerator information, and make assignments
    between targets and enumerators.
  version: "1.0"
servers:
  - url: "https://surveystream.idinsight.io/api"
    description: Production server
  - url: "https://stg.surveystream.idinsight.io/api"
    description: Staging server
components:
  securitySchemes:
    cookieAuth:
      description: >
        ### Basic Setup

        - Cookie-based auth is used for protected endpoints

        - Upon successful login a session cookie is saved on the user's device
        and is used to authenticate subsequent requests

        - The user will be automatically logged out after 7 days


        ### CSRF Token

        - To prevent CSRF attacks, a CSRF token must be included in the
        `X-CSRF-TOKEN` header for all POST, PUT, PATCH and DELETE requests

        - The token can be obtained from the CSRF-TOKEN cookie set by the `GET
        /get-csrf` action
      type: apiKey
      in: cookie
      name: session
security:
  - ApiKeyAuth: []
tags:
  - name: User Authentication
    description: Endpoints related to authenticating users
  - name: Password Management
    description: Endpoints related to managing users' passwords
  - name: User Registration
    description: Endpoints related to creating new users
  - name: Profile
    description: Endpoints related to the user's profile
  - name: Surveys
    description: Endpoints related to the user's surveys
  - name: Forms
    description: Endpoints related to the user's forms
  - name: Enumerators
    description: Endpoints related to the user's enumerators
  - name: Surveyor Stats
    description: Endpoints related to the surveyor stats
  - name: Target Status Mapping
    description: Endpoints related to the target status mapping
  - name: Targets
    description: Endpoints related to the user's targets
  - name: Assignments
    description: Endpoints related to the user's assignments
  - name: Assignments Table Configuration
    description: Endpoints related to the configuration of tables for the assignments module
  - name: Misc
    description: Endpoints related to miscellaneous functionalities
  - name: Module Questionnaire
    description: Endpoints related to module questionnaire
  - name: Roles
    description: Endpoints related to user roles
  - name: Locations
    description: Endpoints related to locations
  - name: Permissions
    description: Endpoints related to permissions
  - name: User Hierarchy
    description: Endpoints related to user hierarchy
  - name: Emails
    description: Endpoints related to emails configuration

x-tagGroups:
  - name: User Management
    tags:
      - User Authentication
      - Password Management
      - User Registration
      - User Invite
      - User Management
  - name: Profile
    tags:
      - Profile
  - name: Surveys & Forms
    tags:
      - Surveys
      - Forms
  - name: Module Selection
    tags:
      - Module Selection
  - name: Enumerators
    tags:
      - Enumerators
  - name: Surveyor Stats
    tags:
      - Surveyor Stats
  - name: Target Status Mapping
    tags:
      - Target Status Mapping
  - name: Targets
    tags:
      - Targets
  - name: Assignments
    tags:
      - Assignments
  - name: Assignments Table Configuration
    tags:
      - Assignments Table Configuration
  - name: Misc
    tags:
      - Misc
  - name: Module Questionnaire
    tags:
      - Module Questionnaire
  - name: Roles
    tags:
      - Roles
      - Permissions
      - User Hierarchy
  - name: Locations
    tags:
      - Locations
  - name: Emails
    tags:
      - Emails

paths:
  /healthcheck:
    get:
      summary: Test database connection
      description: Check if api is running and connected
      security: []
      tags:
        - Misc
      responses:
        "200":
          description: Healthy
        "500":
          description: Failed DB connection
  /get-csrf:
    get:
      summary: Set CSRF-TOKEN cookie
      description: >-
        The value of the CSRF-TOKEN cookie must be included in the X-CSRF-Token
        header for all POST, PUT, and PATCH requests
      security: []
      tags:
        - User Authentication
      responses:
        "200":
          description: Success
  /login:
    post:
      summary: Log a user in
      description: Authenticate a user to access protected endpoints
      security: []
      tags:
        - User Authentication
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: "Success: logged in"
        "400":
          description: User must not be already logged in
        "401":
          description: Unauthorized
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
  /logout:
    get:
      summary: Log a user out
      description: Log a user out so they can no longer access protected endpoints
      tags:
        - User Authentication
      responses:
        "200":
          description: "Success: logged out"
  /register:
    post:
      summary: Create new user
      description: Allow a logged in admin user to create a new user
      tags:
        - User Registration
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: "Success: registered"
        "401":
          description: Unauthorized
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors | User already exists
  /change-password:
    post:
      summary: Update password for logged in user
      description: Allow a logged in user to update their password
      tags:
        - Password Management
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cur_password:
                  type: string
                  description: Current password
                new_password:
                  type: string
                  description: New password
                confirm:
                  type: string
                  description: Confirm new password
              required:
                - cur_password
                - new_password
                - confirm
      responses:
        "200":
          description: "Success: password changed"
        "403":
          description: Wrong password | X-CSRF-Token required in header
        "422":
          description: Form errors
  /forgot-password:
    post:
      summary: Trigger password reset email
      description: send a password reset email to a user
      security: []
      tags:
        - Password Management
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        "200":
          description: Request processed
        "400":
          description: Already logged in - use /change-password
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
  /welcome-user:
    post:
      summary: Trigger welcome email
      description: >-
        Allows a logged in admin user to trigger a welcome email to a user with
        a reset password link
      tags:
        - User Registration
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        "200":
          description: Request processed
        "400":
          description: Already logged in - use /change-password
        "401":
          description: Unauthorized
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Record not found
        "422":
          description: Form errors
  /reset-password:
    post:
      summary: Reset password
      description: Reset the user's password using the reset password email link
      security: []
      tags:
        - Password Management
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rpt_id:
                  type: string
                  description: Reset password ID from the reset password email link
                rpt_token:
                  type: string
                  description: Reset password token from the reset password email link
                new_password:
                  type: string
                  description: New password
                confirm:
                  type: string
                  description: Confirm new password
              required:
                - rpt_id
                - rpt_token
                - new_password
                - confirm
      responses:
        "200":
          description: "Success: password reset"
        "400":
          description: Already logged in - use /change-password
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Invalid link
        "422":
          description: Form errors
  /profile:
    get:
      summary: Get user profile
      description: Return the logged in user's profile information
      tags:
        - Profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_uid:
                    type: integer
                    description: The unique ID of the user
                  first_name:
                    type: string
                    description: The first name of the user
                  middle_name:
                    type: string
                    description: The middle name of the user
                  last_name:
                    type: string
                    description: The last name of the user
                  email:
                    type: string
                    description: The email address of the user
                  phone_primary:
                    type: string
                    description: The primary phone number of the user
                  home_state_name:
                    type: string
                    description: The home state of the user
                  home_district_name:
                    type: string
                    description: The home district of the user
                  is_super_admin:
                    type: boolean
                    description: Super admin status for the user
  /profile/avatar:
    get:
      summary: Get avatar URL
      description: Return a URL for the profile avatar image of the logged in user
      tags:
        - Profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_url:
                    description: >-
                      A presigned url that will give access to the user's
                      profile avatar image for 60 seconds
                    type: string
    put:
      summary: Update avatar
      description: Update the profile avatar image of the logged in user
      tags:
        - Profile
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          image/png:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
  /profile/avatar/remove:
    post:
      summary: Delete avatar
      description: Delete the user's profile avatar image
      tags:
        - Profile
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
  /users/check-email-availability:
    post:
      tags:
        - User Management
      summary: Endpoint to check a user by email
      description: Requires JSON body with email.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        "200":
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
        "403":
          description: X-CSRF-Token required in header
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  "/users":
    post:
      tags:
        - User Management
      summary: Endpoint to invite a user by email
      description: >-
        Requires JSON body with email, first name, last name, role, and
        is_super_admin.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                role:
                  type: string
                is_super_admin:
                  type: boolean
                can_create_survey:
                  type: boolean
                is_survey_admin:
                  type: boolean
                survey_uid:
                  type: string
              required:
                - email
                - first_name
                - last_name
                - role
                - is_super_admin
      responses:
        "200":
          description: user invited
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                  invite:
                    type: object
        "403":
          description: X-CSRF-Token required in header
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "422":
          description: User already exists with email
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    get:
      tags:
        - User Management
      summary: Endpoint to get information for all users
      description: Get all users for a super admin, use survey_uid for non admins to get users per survey
      parameters:
        - in: query
          name: survey_uid
          schema:
            type: integer
          required: false
          description: survey_uid to filter users
      responses:
        "200":
          description: User information for all users retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    email:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                    roles:
                      type: string
                    user_survey_names:
                      type: string
                    user_role_names:
                      type: string
                    is_super_admin:
                      type: boolean
                    status:
                      type: string
        "400":
          description: Survey ID is required for non-super-admin users
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  "/users/complete-registration":
    post:
      tags:
        - User Management
      summary: Endpoint to complete user registration using an invite code
      description: "Requires JSON body with invite_code, new_password, and confirm_password."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                new_password:
                  type: string
                confirm_password:
                  type: string
              required:
                - invite_code
                - new_password
                - confirm_password
      responses:
        "200":
          description: registration completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: X-CSRF-Token required in header
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Invalid or expired invite code
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  "/users/{user_uid}":
    get:
      tags:
        - User Management
      summary: Endpoint to get information for a single user
      description: get user details for a single user
      parameters:
        - in: path
          name: user_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the user
      responses:
        "200":
          description: User information retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_uid:
                    type: integer
                  email:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  roles:
                    type: array
                  is_super_admin:
                    type: boolean
                  active:
                    type: boolean
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    put:
      tags:
        - User Management
      summary: Endpoint to edit a user's information
      description: >-
        Requires JSON body with email, first name, last name, roles, active and
        is_super_admin.
      parameters:
        - in: path
          name: user_uid
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                roles:
                  type: array
                is_super_admin:
                  type: boolean
                can_create_survey:
                  type: boolean
                is_survey_admin:
                  type: boolean
                survey_uid:
                  type: string
                active:
                  type: boolean
              required:
                - email
                - first_name
                - last_name
                - roles
                - is_super_admin
                - active
      responses:
        "200":
          description: User updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user_data:
                    type: object
        "403":
          description: X-CSRF-Token required in header
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      tags:
        - User Management
      summary: Endpoint to delete a user
      description: delete a single user
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: path
          name: user_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the user

      responses:
        "200":
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /surveys:
    get:
      summary: Get surveys
      description: Returns information about surveys associated with the logged in user.
      tags:
        - Surveys
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: An array of surveys associated with the logged in user.
                    items:
                      type: object
                      properties:
                        survey_uid:
                          type: integer
                          description: The unique ID of the survey.
                        survey_id:
                          type: string
                          description: The ID of the survey.
                        survey_name:
                          type: string
                          description: The name of the survey.
                        project_name:
                          type: string
                          description: The name of the project that the survey belongs to.
                        survey_description:
                          type: string
                          description: A description of the survey.
                        surveying_method:
                          type: string
                          description: >-
                            The method of surveying, e.g. in-person, phone,
                            mixed-mode.
                        irb_approval:
                          type: string
                          description: >-
                            The status of the IRB approval, e.g. Yes, No,
                            Pending.
                        planned_start_date:
                          type: string
                          description: >-
                            The planned start date of the survey in ISO 8601
                            format.
                        planned_end_date:
                          type: string
                          description: >-
                            The planned end date of the survey in ISO 8601
                            format.
                        state:
                          type: string
                          description: "The state of the survey, e.g. Draft, Active, Past."
                        last_updated_at:
                          type: string
                          description: >-
                            The date and time that the survey was last updated
                            in ISO 8601 format.
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
        "404":
          description: No surveys found for the specified user or all users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating that no surveys were found.
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
    post:
      summary: Create a new survey
      tags:
        - Surveys
      description: >-
        Create a new survey with the basic information details. The survey_id
        must be unique.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_id:
                  type: string
                  example: AgriFieldneet
                  description: The unique identifier for the survey
                survey_name:
                  type: string
                  example: Agrifieldneet Main Survey Form
                  description: The name of the survey
                project_name:
                  type: string
                  example: AgriFieldneet Survey
                  description: The name of the project the survey belongs to
                survey_description:
                  type: string
                  example: "AgriFieldnet survey starting on 1st Jan, 2023"
                  description: A description of the survey
                surveying_method:
                  type: string
                  example: in-person
                  description: The method used to survey respondents
                  enum:
                    - phone
                    - in-person
                    - mixed-mode
                irb_approval:
                  type: string
                  example: Pending
                  description: The status of the Institutional Review Board (IRB) approval
                  enum:
                    - "Yes"
                    - "No"
                    - Pending
                planned_start_date:
                  type: string
                  example: "2023-01-01T00:00:00.000Z"
                  format: date
                  description: The planned start date for the survey
                planned_end_date:
                  type: string
                  example: "2023-06-30T00:00:00.000Z"
                  format: date
                  description: The planned end date for the survey
                config_status:
                  type: string
                  example: In Progress - Configuration
                  description: The status of the survey's configuration
                  enum:
                    - In Progress - Configuration
                    - In Progress - Backend Setup
                    - Done
                state:
                  type: string
                  example: Draft
                  description: The current state of the survey
                  enum:
                    - Draft
                    - Active
                    - Past
              required:
                - survey_id
                - survey_name
                - project_name
                - surveying_method
                - irb_approval
                - planned_start_date
                - planned_end_date
                - config_status
                - state
      responses:
        "201":
          description: The survey was created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: success
                      survey:
                        type: object
                        properties:
                          survey_uid:
                            type: integer
                            example: 19
                            description: >-
                              The database-assigned unique identifier for the
                              survey
                          survey_id:
                            type: string
                            example: AgriFieldnet
                            description: The unique identifier for the survey
                          survey_name:
                            type: string
                            example: Agrifieldnet Main Survey Form
                            description: The name of the survey
                          project_name:
                            type: string
                            example: AgriFieldnet Survey
                            description: The name of the project the survey belongs to
                          survey_description:
                            type: string
                            example: "AgriFieldnet survey starting on 1st Jan, 2023"
                            description: A description
                          surveying_method:
                            type: string
                            enum:
                              - phone
                              - in-person
                              - mixed-mode
                            example: in-person
                          irb_approval:
                            type: string
                            enum:
                              - "Yes"
                              - "No"
                              - Pending
                            example: Pending
                          planned_start_date:
                            type: string
                            format: date
                            example: "2023-01-01T00:00:00.000Z"
                          planned_end_date:
                            type: string
                            format: date
                            example: "2023-06-30T00:00:00.000Z"
                          config_status:
                            type: string
                            enum:
                              - In Progress - Configuration
                              - In Progress - Backend Setup
                              - Done
                            example: In Progress - Configuration
                          state:
                            type: string
                            enum:
                              - Draft
                              - Active
                              - Past
                            example: Draft
                          last_updated_at:
                            type: string
                            format: date-time
                            example: 2023-04-18T00:00:00.000Z
        "400":
          description: A survey with the same survey_id already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: survey_id already exists
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
  /surveys/<survey_uid>/basic-information:
    get:
      summary: Get basic information for a specific survey
      description: Returns basic information about a specific survey
      tags:
        - Surveys
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: Basic information related to a specific survey
                    items:
                      type: object
                      properties:
                        survey_uid:
                          type: integer
                          description: The unique ID of the survey.
                        survey_id:
                          type: string
                          description: The ID of the survey.
                        survey_name:
                          type: string
                          description: The name of the survey.
                        project_name:
                          type: string
                          description: The name of the project that the survey belongs to.
                        survey_description:
                          type: string
                          description: A description of the survey.
                        surveying_method:
                          type: string
                          description: >-
                            The method of surveying, e.g. in-person, phone,
                            mixed-mode.
                        irb_approval:
                          type: string
                          description: >-
                            The status of the IRB approval, e.g. Yes, No,
                            Pending.
                        planned_start_date:
                          type: string
                          description: >-
                            The planned start date of the survey in ISO 8601
                            format.
                        planned_end_date:
                          type: string
                          description: >-
                            The planned end date of the survey in ISO 8601
                            format.
                        state:
                          type: string
                          description: "The state of the survey, e.g. Draft, Active, Past."
                        last_updated_at:
                          type: string
                          description: >-
                            The date and time that the survey was last updated
                            in ISO 8601 format.
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
        "404":
          description: No surveys found for the specified user or all users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating that no surveys were found.
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
  /surveys/<survey_uid>/config-status:
    get:
      summary: Get configuration status for each module for a specific survey
      description: Returns module configuration status for a specific survey
      tags:
        - Surveys
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: Configuration status for a specific survey
                    items:
                      type: object
                      properties:
                        Basic information:
                          type: object
                          description: Status of basic information module of the survey
                          items:
                            type: object
                            properties:
                              status:
                                type: string
                                description: >-
                                  Configration Status (Not started/ In progress/
                                  Done)
                        Survey information:
                          type: array
                          description: >-
                            Status of modules in the survey information section
                            of the survey
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                description: >-
                                  Name of the module like SurveyCTO information,
                                  Field supervisor roles etc.
                              status:
                                type: string
                                description: >-
                                  Configration Status (Not started/ In progress/
                                  Done)
                        Module selection:
                          type: object
                          description: Status of module selection for the survey
                          items:
                            type: object
                            properties:
                              status:
                                type: string
                                description: >-
                                  Configration Status (Not started/ In progress/
                                  Done)
                        overall_status:
                          type: string
                          description: >-
                            Overall Status (In progress - Configuration/ In
                            Progress - Backend Setup/ Done)
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
        "404":
          description: No surveys found for the specified user or all users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating that no surveys were found.
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
  /modules:
    get:
      tags:
        - Module Selection
      summary: Get all modules
      description: Get a list of all modules
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        module_id:
                          type: integer
                          format: int64
                          description: ID of the module
                        name:
                          type: string
                          description: Name of the module
                        optional:
                          type: boolean
                          description: Indicates if the module is optional
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: No modules found.
  /module-status:
    post:
      tags:
        - Module Selection
      summary: Add selected modules for a particular survey
      description: >-
        Add selected modules for a particular survey, with a default
        config_status of `not started`.
      requestBody:
        description: JSON object containing survey ID and list of module IDs
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_id:
                  type: integer
                  description: ID of the survey to add module status for
                modules:
                  type: array
                  description: List of module IDs
                  example:
                    - 1
                    - 2
                    - 3
      responses:
        "200":
          description: Module added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful
                    example: true
                  message:
                    type: string
                    description: Module status added successfully
                    example: {}
        "400":
          description: Invalid request body or missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful
                    example: false
                  message:
                    type: string
                    description: Error message
                    example: Both survey_id and modules are required.
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
  "/modules/{module_id}/status/{survey_uid}":
    put:
      tags:
        - Module Selection
      summary: Update status of a module for a specific survey
      description: Update status of a module for a specific survey
      parameters:
        - in: path
          name: module_id
          schema:
            type: integer
          required: true
          description: The ID of the module to update the status for
        - in: path
          name: survey_uid
          schema:
            type: integer
          required: true
          description: The ID of the survey to update the status for
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config_status:
                  type: string
                  enum:
                    - Done
                    - In Progress
                    - Not Started
                    - Error
      responses:
        "200":
          description: Successfully updated module status for survey
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    example:
                      survey_uid: 1
                      module_id: 2
                      config_status: Done
        "400":
          description: >-
            Bad request. Either module_id or survey_uid or status missing in the
            request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Both module_id and survey_uid and status are required.
        "404":
          description: The requested module or survey was not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: The requested module or survey was not found
  "/module-status/{survey_uid}":
    get:
      tags:
        - Module Selection
      summary: Get module status for a survey
      description: |
        Returns the completion status of all modules for a given survey.
        - `survey_uid`: ID of the survey for which to retrieve module status.
        **Note**: If the survey ID is not found, a 404 error will be returned.
      parameters:
        - name: survey_uid
          in: path
          description: ID of the survey
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returns the completion status of all modules for a given survey.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: >-
                      List of modules and their completion status for the given
                      survey
                    items:
                      type: object
                      properties:
                        module_id:
                          type: integer
                          description: ID of the module
                        survey_uid:
                          type: integer
                          description: ID of the survey
                        config_status:
                          type: string
                          description: Completion status of the module for the given survey
                          enum:
                            - Done
                            - In Progress
                            - Not Started
                            - Error
        "404":
          description: The specified survey ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  message:
                    type: string
                    description: >-
                      Error message indicating that the specified survey ID was
                      not found.
  /forms:
    post:
      summary: Create a new form
      tags:
        - Forms
      description: Create a new form
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_uid:
                  type: string
                  description: The unique identifier for the survey
                form_name:
                  type: string
                  description: The name of the form to display as a label on the web app
                scto_form_id:
                  type: string
                  description: The form's SurveyCTO form ID
                tz_name:
                  type: string
                  description: >-
                    The timezone in which data collection will happen for the
                    form
                scto_server_name:
                  type: string
                  description: The SurveyCTO server name for the form
                encryption_key_shared:
                  type: boolean
                  description: >-
                    Whether the encryption key for the form has been shared with
                    the SurveyStream team
                server_access_role_granted:
                  type: boolean
                  description: >-
                    Whether the SurveyStream team has been granted access to the
                    SurveyCTO server for the form
                server_access_allowed:
                  type: boolean
                  description: >-
                    Whether the SurveyStream team has been granted access to the
                    SurveyCTO server for the form
                form_type:
                  type: string
                  description: >-
                    The type of form. Allowed values are 'parent' and 'dq'
                parent_form_uid:
                  type: integer
                  description: >-
                    The form_uid of the parent form. Required if form_type is 'dq'. Must be null if form_type is 'parent'.
                dq_form_type:
                  type: string
                  description: >-
                    The type of DQ form. Allowed values are 'audioaudit', 'backcheck' and 'spotcheck'. Required if form_type is 'dq'. Must be null if form_type is 'parent'.
              required:
                - survey_uid
                - scto_form_id
                - form_name
                - form_type
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey_uid:
                    type: string
                    description: The unique ID of the survey
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  form_name:
                    type: string
                    description: The name of the form
                  scto_form_id:
                    type: string
                    description: The form's SurveyCTO form ID
                  tz_name:
                    type: string
                    description: >-
                      The timezone in which data collection will happen for the
                      form
                  scto_server_name:
                    type: string
                    description: The SurveyCTO server name for the form
                  encryption_key_shared:
                    type: boolean
                    description: >-
                      Whether the encryption key for the form has been shared
                      with the SurveyStream team
                  server_access_role_granted:
                    type: boolean
                    description: >-
                      Whether the SurveyStream team has been granted access to
                      the SurveyCTO server for the form
                  server_access_allowed:
                    type: boolean
                    description: >-
                      Whether the SurveyStream team has been granted access to
                      the SurveyCTO server for the form
                  last_ingested_at:
                    type: string
                    description: >-
                      Date when form submissions were last ingested from
                      SurveyCTO in isoformat
                  form_type:
                    type: string
                    description: >-
                      The type of form. Allowed values are 'parent' and 'dq'
                  parent_form_uid:
                    type: integer
                    description: >-
                      The form_uid of the parent form. Required if form_type is 'dq'. Must be null if form_type is 'parent'.
                  dq_form_type:
                    type: string
                    description: >-
                      The type of DQ form. Possible values are 'audioaudit', 'backcheck' and 'spotcheck'. Required if form_type is 'dq'. Will be null if form_type is 'parent'.
        "400":
          description: >-
            A form with the same survey_uid and scto_form_id already exists, or
            a form with the same survey_uid and form_name already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the form could not be
                      created.
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
    get:
      summary: Get forms for a user
      description: >-
        Get the forms for the logged in user. Optionally, a
        `?survey_uid=<survey_uid>` query parameter can be provided to return
        forms for a specific survey.
      tags:
        - Forms
      parameters:
        - in: query
          name: survey_uid
          schema:
            type: integer
          required: false
          description: Unique ID of the survey to return forms for.
        - in: query
          name: form_type
          schema:
            type: string
          required: false
          description: >-
            The type of form. Allowed values are 'parent' and 'dq'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    survey_uid:
                      type: string
                      description: The unique ID of the survey
                    form_uid:
                      type: integer
                      description: The unique ID of the form
                    form_name:
                      type: string
                      description: The name of the form
                    scto_form_id:
                      type: string
                      description: The form's SurveyCTO form ID
                    tz_name:
                      type: string
                      description: >-
                        The timezone in which data collection will happen for
                        the form
                    scto_server_name:
                      type: string
                      description: The SurveyCTO server name for the form
                    encryption_key_shared:
                      type: boolean
                      description: >-
                        Whether the encryption key for the form has been shared
                        with the SurveyStream team
                    server_access_role_granted:
                      type: boolean
                      description: >-
                        Whether the SurveyStream team has been granted access to
                        the SurveyCTO server for the form
                    server_access_allowed:
                      type: boolean
                      description: >-
                        Whether the SurveyStream team has been granted access to
                        the SurveyCTO server for the form
                    last_ingested_at:
                      type: string
                      description: >-
                        Date when form submissions were last ingested from
                        SurveyCTO in isoformat
                    form_type:
                      type: string
                      description: >-
                        The type of form. Allowed values are 'parent' and 'dq'
                    parent_form_uid:
                      type: integer
                      description: >-
                        The form_uid of the parent form. Required if form_type is 'dq'. Must be null if form_type is 'parent'.
                    dq_form_type:
                      type: string
                      description: >-
                        The type of DQ form. Possible values are 'audioaudit', 'backcheck' and 'spotcheck'. Required if form_type is 'dq'. Will be null if form_type is 'parent'.
  "/forms/{form_uid}":
    get:
      summary: Get forms
      description: >-
        Return the information for the requested form. If path parameter is not
        provided, return all forms for the logged in user.
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
        - in: query
          name: survey_uid
          schema:
            type: integer
          required: false
          description: >-
            Unique ID of the survey to return forms for. Cannot be used in
            conjuction with the `form_uid` path parameter.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey_uid:
                    type: string
                    description: The unique ID of the survey
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  form_name:
                    type: string
                    description: The name of the form
                  scto_form_id:
                    type: string
                    description: The form's SurveyCTO form ID
                  tz_name:
                    type: string
                    description: >-
                      The timezone in which data collection will happen for the
                      form
                  scto_server_name:
                    type: string
                    description: The SurveyCTO server name for the form
                  encryption_key_shared:
                    type: boolean
                    description: >-
                      Whether the encryption key for the form has been shared
                      with the SurveyStream team
                  server_access_role_granted:
                    type: boolean
                    description: >-
                      Whether the SurveyStream team has been granted access to
                      the SurveyCTO server for the form
                  server_access_allowed:
                    type: boolean
                    description: >-
                      Whether the SurveyStream team has been granted access to
                      the SurveyCTO server for the form
                  last_ingested_at:
                    type: string
                    description: >-
                      Date when form submissions were last ingested from
                      SurveyCTO in isoformat
                  form_type:
                    type: string
                    description: >-
                      The type of form. Allowed values are 'parent' and 'dq'
                  parent_form_uid:
                    type: integer
                    description: >-
                      The form_uid of the parent form. Required if form_type is 'dq'. Must be null if form_type is 'parent'.
                  dq_form_type:
                    type: string
                    description: >-
                      The type of DQ form. Possible values are 'audioaudit', 'backcheck' and 'spotcheck'. Required if form_type is 'dq'. Will be null if form_type is 'parent'.
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
    put:
      summary: Update an existing form
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      description: Update an existing form
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The unique identifier for the form
                survey_uid:
                  type: string
                  description: The unique identifier for the survey
                form_name:
                  type: string
                  description: The name of the form to display as a label on the web app
                scto_form_id:
                  type: string
                  description: The form's SurveyCTO form ID
                tz_name:
                  type: string
                  description: >-
                    The timezone in which data collection will happen for the
                    form
                scto_server_name:
                  type: string
                  description: The SurveyCTO server name for the form
                encryption_key_shared:
                  type: boolean
                  description: >-
                    Whether the encryption key for the form has been shared with
                    the SurveyStream team
                server_access_role_granted:
                  type: boolean
                  description: >-
                    Whether the SurveyStream team has been granted access to the
                    SurveyCTO server for the form
                server_access_allowed:
                  type: boolean
                  description: >-
                    Whether the SurveyStream team has been granted access to the
                    SurveyCTO server for the form
                form_type:
                  type: string
                  description: >-
                    The type of form. Allowed values are 'parent' and 'dq'
                parent_form_uid:
                  type: integer
                  description: >-
                    The form_uid of the parent form. Required if form_type is 'dq'. Must be null if form_type is 'parent'.
                dq_form_type:
                  type: string
                  description: >-
                    The type of DQ form. Allowed values are 'audioaudit', 'backcheck' and 'spotcheck'. Required if form_type is 'dq'. Must be null if form_type is 'parent'.
              required:
                - survey_uid
                - scto_form_id
                - form_name
                - form_type
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey_uid:
                    type: string
                    description: The unique ID of the survey
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  form_name:
                    type: string
                    description: The name of the form
                  scto_form_id:
                    type: string
                    description: The form's SurveyCTO form ID
                  tz_name:
                    type: string
                    description: >-
                      The timezone in which data collection will happen for the
                      form
                  scto_server_name:
                    type: string
                    description: The SurveyCTO server name for the form
                  encryption_key_shared:
                    type: boolean
                    description: >-
                      Whether the encryption key for the form has been shared
                      with the SurveyStream team
                  server_access_role_granted:
                    type: boolean
                    description: >-
                      Whether the SurveyStream team has been granted access to
                      the SurveyCTO server for the form
                  server_access_allowed:
                    type: boolean
                    description: >-
                      Whether the SurveyStream team has been granted access to
                      the SurveyCTO server for the form
                  last_ingested_at:
                    type: string
                    description: >-
                      Date when form submissions were last ingested from
                      SurveyCTO in isoformat
                  form_type:
                    type: string
                    description: >-
                      The type of form. Allowed values are 'parent' and 'dq'
                  parent_form_uid:
                    type: integer
                    description: >-
                      The form_uid of the parent form. Required if form_type is 'dq'. Must be null if form_type is 'parent'.
                  dq_form_type:
                    type: string
                    description: >-
                      The type of DQ form. Possible values are 'audioaudit', 'backcheck' and 'spotcheck'. Required if form_type is 'dq'. Will be null if form_type is 'parent'.

        "403":
          description: X-CSRF-Token required in header
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
        "422":
          description: Form errors
    delete:
      summary: Delete a form
      description: Delete a form
      tags:
        - Forms
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      responses:
        "200":
          description: OK
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: Error message indicating that the specified form ID was not found.

  "/forms/{form_uid}/scto-question-mapping":
    get:
      summary: Get SurveyCTO question mapping for a form
      description: >-
        Return the SurveyCTO question mapping information for the requested
        form.  The SurveyCTO question mapping information is used to map
        SurveyStream variables to SurveyCTO questions.
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  survey_status:
                    type: string
                    description: The status of the survey
                  revisit_section:
                    type: string
                    description: The form's revisit section
                  enumerator_id:
                    type: string
                    description: The form's enumerator ID
                  target_id:
                    type: string
                    description: The form's target ID
                  locations:
                    type: object
                    description: >-
                      The mapping of SurveyStream variables to SurveyCTO
                      questions for the form locations
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
    post:
      summary: Create a SurveyCTO question mapping
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      description: Create a SurveyCTO question mapping
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The unique ID of the form
                survey_status:
                  type: string
                  description: The status of the survey
                revisit_section:
                  type: string
                  description: The form's revisit section
                enumerator_id:
                  type: string
                  description: The form's enumerator ID
                target_id:
                  type: string
                  description: The form's target ID
                locations:
                  type: object
                  description: >-
                    The mapping of SurveyStream variables to SurveyCTO questions
                    for the form locations
              required:
                - form_uid
                - survey_status
                - revisit_section
                - enumerator_id
                - target_id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
    put:
      summary: Update an existing SurveyCTO question mapping
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      description: Update an existing SurveyCTO question mapping
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The unique ID of the form
                survey_status:
                  type: string
                  description: The status of the survey
                revisit_section:
                  type: string
                  description: The form's revisit section
                enumerator_id:
                  type: string
                  description: The form's enumerator ID
                target_id:
                  type: string
                  description: The form's target ID
                locations:
                  type: object
                  description: >-
                    The mapping of SurveyStream variables to SurveyCTO questions
                    for the form locations
              required:
                - form_uid
                - survey_status
                - revisit_section
                - enumerator_id
                - target_id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  survey_status:
                    type: string
                    description: The status of the survey
                  revisit_section:
                    type: string
                    description: The form's revisit section
                  enumerator_id:
                    type: string
                    description: The form's enumerator ID
                  target_id:
                    type: string
                    description: The form's target ID
                  locations:
                    type: object
                    description: >-
                      The mapping of SurveyStream variables to SurveyCTO
                      questions for the form locations
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
    delete:
      summary: Delete an existing SurveyCTO question mapping
      tags:
        - Forms
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      description: Delete an existing SurveyCTO question mapping
      responses:
        "204":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
  "/forms/{form_uid}/scto-form-definition/refresh":
    post:
      summary: Refresh the SurveyCTO form definition
      tags:
        - Forms
      description: >-
        Refresh the SurveyCTO form definition from the SurveyCTO server and
        store it in the database.  The old form definition will be deleted and a
        new one created, which will increment the `question_uid` and `list_uid`.
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      responses:
        "200":
          description: OK
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
  "/forms/{form_uid}/scto-form-definition":
    get:
      summary: Get the SurveyCTO form definition for a form
      tags:
        - Forms
      description: Get the SurveyCTO form definition for a form
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: object
                    description: The SurveyCTO form definition for the form
                    properties:
                      questions:
                        description: The SurveyCTO form questions from the `Survey` tab
                        type: array
                        items:
                          type: object
                          properties:
                            question_uid:
                              type: integer
                              description: ID of the question
                            form_uid:
                              type: integer
                              description: ID of the form
                            question_name:
                              type: string
                              description: Name of the question
                            question_type:
                              type: string
                              description: Type of the question
                            list_uid:
                              type: integer
                              description: ID of the choice list
                            is_repeat_group:
                              type: boolean
                              description: Indicates if the question is a repeat group
                      settings:
                        type: object
                        description: The SurveyCTO form settings from the `Settings` tab
                        properties:
                          form_uid:
                            type: integer
                            description: ID of the form
                          form_title:
                            type: string
                            description: Name of the form
                          version:
                            type: string
                            description: Version of the form
                          submission_url:
                            type: string
                            description: URL to submit the form to
                          public_key:
                            type: string
                            description: The form's public key
                          default_language:
                            type: string
                            description: The form's default language
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
    delete:
      summary: Delete an existing SurveyCTO form definition
      tags:
        - Forms
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      description: Delete an existing SurveyCTO form definition
      responses:
        "204":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
  /enumerators:
    get:
      summary: Get enumerators
      description: Return the logged in user's enumerators for the given form
      tags:
        - Enumerators
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
        - in: query
          name: enumerator_type
          schema:
            type: string
            enum:
              - monitor
              - supervisor
          description: Type of enumerators to return
          required: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        enumerator_id:
                          type: string
                          description: The ID of the enumerator
                        enumerator_uid:
                          type: integer
                          description: The unique ID of the enumerator
                        name:
                          type: string
                          description: The name of the enumerator
                        language:
                          type: string
                          description: The primary language of the enumerator
                        gender:
                          type: string
                          description: The gender of the enumerator
                        home_address:
                          type: string
                          description: The home address of the enumerator
                        mobile_primary:
                          type: string
                          description: The primary mobile number of the enumerator
                        custom_fields:
                          type: object
                          description: >-
                            The custom fields of the enumerator. Each key is the
                            user-defined label of the custom field and each
                            value is the value of the custom field.
                        form_uid:
                          type: integer
                          description: >-
                            The unique ID of the form that the enumerator was
                            uploaded to
                        surveyor_status:
                          type: string
                          enum:
                            - Active
                            - Temp. inactive
                            - Dropout
                          description: >-
                            The working status of the enumerator if they are a
                            surveyor on the form
                        surveyor_locations:
                          type: array
                          description: >-
                            The working geography of the enumerator if they are
                            a surveyor on the form.  Each array item is an
                            object of the form {`location_id`: _location_id_,
                            `location_name`:  _location_name_, `location_uid`:
                            __location_uid__, `geo_level_name`:
                            __geo_level_name__, `geo_level_uid`:
                            __geo_level_uid__} in descending order from highest 
                            to lowest level location down to the level of the
                            prime geo level the surveyor is mapped to. Will be
                            null if the surveyor is not mapped to a prime geo
                            level.
                          items:
                            type: object
                            properties:
                              location_id:
                                type: integer
                                description: The user-defined unique ID of the location
                              location_name:
                                type: string
                                description: The name of the location
                              geo_level_name:
                                type: string
                                description: The name of the geo level
                        monitor_status:
                          type: string
                          enum:
                            - Active
                            - Temp. inactive
                            - Dropout
                          description: >-
                            The working status of the enumerator if they are a
                            monitor on the form
                        monitor_locations:
                          type: array
                          description: >-
                            The working geography of the enumerator if they are
                            a monitor on the form.  Each array item is an object
                            of the form {`location_id`: _location_id_,
                            `location_name`:  _location_name_, `location_uid`:
                            __location_uid__, `geo_level_name`:
                            __geo_level_name__, `geo_level_uid`:
                            __geo_level_uid__} in descending order from highest 
                            to lowest level location down to the level of the
                            prime geo level the monitor is mapped to. Will be
                            null if the monitor is not mapped to a prime geo
                            level.
                          items:
                            type: object
                            properties:
                              location_id:
                                type: integer
                                description: The user-defined unique ID of the location
                              location_name:
                                type: string
                                description: The name of the location
                              geo_level_name:
                                type: string
                                description: The name of the geo level
        "400":
          description: Form ID is required
    post:
      summary: Upload a csv of new enumerators
      description: |
        Upload a csv of new enumerators to be added to the given form
      tags:
        - Enumerators
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                column_mapping:
                  type: object
                  description: >-
                    An object mapping the column names in the csv to the
                    corresponding enumerator properties
                  properties:
                    enumerator_id:
                      type: string
                      description: The column name of the enumerator ID
                    enumerator_type:
                      type: string
                      description: The column name of the enumerator type
                    name:
                      type: string
                      description: The column name of the enumerator's name
                    email:
                      type: string
                      description: The column name of the enumerator's email
                    mobile_primary:
                      type: string
                      description: >-
                        The column name of the enumerator's primary mobile
                        number
                    language:
                      type: string
                      description: The column name of the enumerator's primary language
                    home_address:
                      type: string
                      description: The column nmae of the enumerator's home address
                    gender:
                      type: string
                      description: The column name of the enumerator's gender
                    location_id_column:
                      type: string
                      description: >-
                        The column name of the enumerator's location ID. This is
                        the prime geo level location that the enumerator is
                        mapped to.
                    custom_fields:
                      type: array
                      description: >-
                        An array of custom fields to be added to the enumerator
                        object
                      items:
                        type: object
                        properties:
                          field_label:
                            type: string
                            description: The user-defined label of the custom field
                          column_name:
                            type: string
                            description: The column name of the custom field
                        required:
                          - field_label
                          - column_name
                  required:
                    - enumerator_id
                    - name
                    - email
                    - mobile_primary
                    - gender
                file:
                  type: string
                  format: Base64
                  description: >-
                    The csv file to be uploaded in base64 encoding

                    The csv must have a header row with the column names
                    specified in the `column_mapping` object.

                    **Notes**:  - The `enumerator_type` field can take values of
                      `monitor` or `supervisor`. If the enumerator is to be
                      assigned to multiple types, separate the values with a
                      semi-colon, e.g. `monitor;supervisor`.
                    - If enumerators are to be mapped by location, the 
                      `location_id_column` field contains the location ID of the
                      prime geo level location that the enumerator is mapped to.
                      The `prime_geo_level_uid` for the survey needs to be defined 
                      in the survey config at `POST /surveys`.
                mode:
                  type: string
                  enum:
                    - overwrite
                    - merge
                  description: >-
                    The mode of the upload. In 'overwrite' mode, all enumerators
                    with the provided form_uid from  the query parameter will be
                    removed and replaced with the new enumerators from  the CSV
                    file. In 'merge' mode, the new enumerators from the CSV will
                    be added to the existing ones.  Any existing records
                    included in the upload will also be updated.
              required:
                - column_mapping
                - file
                - mode
      responses:
        "200":
          description: Records added successfully
        "400":
          description: Query parameter errors
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Form not found
        "422":
          description: Form errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    description: >-
                      An object with information on errors related to the csv
                      file upload. Each key will only be present if there are
                      errors of that type.

                      In addition to the errors listed below, the `errors`
                      object may also contain errors related to an incorrectly
                      specified payload.
                    properties:
                      file_structure_errors:
                        type: array
                        description: >-
                          An array of errors in the file structure. Each array
                          item is a string containing the error message related
                          to an individual error.
                      column_mapping:
                        type: array
                        description: >-
                          An array of errors in the column. Each array item is a
                          string containing the error message related to an
                          individual error.
                      geo_level_hierarchy:
                        type: array
                        description: >-
                          An array of errors in the geo level hierarchy. Each
                          array item is a string containing the error message
                          related to an individual error.
                      record_errors:
                        type: object
                        description: >-
                          An object with information on validation errors in the
                          csv records.
                        properties:
                          summary:
                            type: object
                            description: >-
                              A summary of the validation errors in the csv
                              records
                            properties:
                              error_count:
                                type: integer
                                description: The total number of errors in the csv records
                              total_correct_rows:
                                type: integer
                                description: >-
                                  The total number of correct rows in the csv
                                  records
                              total_rows:
                                type: integer
                                description: The total number of rows in the csv records
                              total_rows_with_errors:
                                type: integer
                                description: >-
                                  The total number of rows with errors in the
                                  csv records
                          summary_by_error_type:
                            type: array
                            description: >-
                              An array of objects with information on validation
                              errors by error type in the csv records.
                            items:
                              type: object
                              properties:
                                error_count:
                                  type: integer
                                  description: >-
                                    The total number of errors of this type in
                                    the csv records
                                error_message:
                                  type: string
                                  description: The error message for this error type
                                error_type:
                                  type: string
                                  description: The error type
                                row_numbers_with_errors:
                                  type: array
                                  description: >-
                                    An array of row numbers with errors of this
                                    type in the csv records
                                  items:
                                    type: integer
                                    description: >-
                                      The row number with an error of this type
                                      in the csv records
                          invalid_records:
                            type: object
                            description: >-
                              An object with information on validation errors by
                              record in the csv records. This can be used to
                              identify the specific errors in each record and to
                              let users download a csv with the errors.
                            properties:
                              records:
                                type: array
                                description: >-
                                  An array of objects that represent the
                                  original records in the csv with the
                                  validation errors. A new `errors` field is
                                  added to each record that contains a
                                  semicolon-separated list of the validation
                                  errors for that record. A new `row_number`
                                  field is also added to each record that
                                  contains the row number of the record in the
                                  original csv.
                              ordered_columns:
                                type: array
                                description: >-
                                  An array of strings that represent the column
                                  names in the `records` array of objects in the
                                  order that they should  appear in a table or
                                  downloadable csv file.
                                items:
                                  type: string
                                  description: The column name in the csv
                  success:
                    type: boolean
                    description: Whether the upload was successful
    patch:
      summary: Bulk update enumerators for a provided set of fields
      description: >
        Bulk update enumerators for a provided set of fields. The enumerators to
        be updated are specified by their enumerator IDs. Only the fields
        specified in the request body will be updated. If a field is not
        specified, it will not be updated. Only personal details and custom
        fields can be updated can be updated through this endpoint. To bulk
        update enumerators' locations, use the `PUT
        /enumerators/roles/locations` endpoint.

        **Note:** Only fields that are defined in the enumerators column config
        table and set as `bulk_editable` can be updated via this endpoint. See
        the `PUT /enumerators/column-config` endpoint for more details.
      tags:
        - Enumerators
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enumerator_uids:
                  type: array
                  description: An array of enumerator UIDs of the enumerators to be updated
                  items:
                    type: integer
                    description: The enumerator UID of the enumerator to be updated
                form_uid:
                  type: integer
                  description: The form UID of the enumerators to be updated.
                patch_key_example:
                  description: >-
                    An example of the field name and value to be updated for the
                    enumerators. Multiple fields to be updated can be specified
                    in the same object. The field name must be the same as the
                    field name in the enumerator column config for the form and
                    set as `bulk_editable.` See the `PUT
                    /enumerators/column-config` for more details on defining the
                    column config for a form.
              required:
                - enumerator_uids
                - form_uid
      responses:
        "200":
          description: Enumerators updated successfully
        "400":
          description: Request errors
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Form not found
        "422":
          description: Form errors
  /enumerators/column-config:
    put:
      summary: Update the enumerators column config for a form
      description: >
        Update the column config for enumerators for a form. The column config
        defines the fields that are available for bulk editing via the `PATCH
        /enumerators` and `PUT /enumerators/roles/locations`` endpoints.
      tags:
        - Enumerators
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The form UID of the enumerators to be updated.
                column_config:
                  type: array
                  description: >-
                    An array of column config objects for the enumerators data.
                    Each object defines the column name, its type, and whether
                    it is bulk editable or not.

                    The location mapping column must be named
                    `prime_geo_level_location` and its enumerator_type must be
                    `location`.

                    The personal details columns must be named `enumerator_id`,
                    `name`, `email`, `mobile_primary`, `home_address`,
                    `language` and `gender` and their enumerator_types must be
                    `personal_details`.

                    The custom fields columns must match their corresponding
                    json keys in the `custom_fields` column of the `enumerators`
                    table and their enumerator_types must be `custom_field`.
                  items:
                    type: object
                    properties:
                      column_name:
                        type: string
                        description: The field name of the column
                      column_type:
                        type: string
                        description: >-
                          The field type of the column. Can be one of
                          `personal_details`, `custom_field`, or `location`.
                      bulk_editable:
                        type: boolean
                        description: Whether the field is bulk editable or not
                    required:
                      - column_name
                      - column_type
                      - bulk_editable
              required:
                - form_uid
                - column_config
      responses:
        "200":
          description: Column config updated successfully
        "400":
          description: Request errors
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Form not found
        "422":
          description: Form errors
    get:
      summary: Get the enumerators column config for a form
      description: >
        Get the enumerators column config for a form. The column config defines
        the fields that are available for bulk editing via the `PATCH
        /enumerators` and `PUT /enumerators/roles/locations`` endpoints.
      tags:
        - Enumerators
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: The form UID of the enumerator column config to be updated.
          required: true
      responses:
        "200":
          description: Column config retrieved successfully
          content:
            application/json:
              schema:
                type: array
                description: >-
                  An array of column config objects for the enumerators data.
                  Each object defines the column name, its type, and whether it
                  is bulk editable or not.
                items:
                  type: object
                  properties:
                    column_name:
                      type: string
                      description: The field name of the column
                    column_type:
                      type: string
                      description: >-
                        The field type of the column. Can be one of
                        `personal_details`, `custom_field`, or `location`.
                    bulk_editable:
                      type: boolean
                      description: Whether the field is bulk editable or not
        "400":
          description: Request errors
        "404":
          description: Form not found
  /enumerators/roles/locations:
    put:
      summary: Bulk update the location mapping for enumerators for a form
      description: >
        Bulk update the location mapping for enumerators of a specific
        enumerator_type for a form. The location mapping defines the
        prime_geo_level location(s) that the enumerator is mapped to for a form.

        This method will replace the existing location mapping for the
        enumerators with the new location mapping provided in the request body.
        The existing location mapping for the enumerators can be dropped by
        providing `None` or an empty array as the `location_uids` value in the
        request body.

        In order for the location mapping to be bulk editable, the enumerators
        column configuration must have a `column_name` entry
        `prime_geo_level_location` with `column_type` of `location` and its
        `bulk_editable` value set to `True`. See the `PUT
        /enumerators/column-config` endpiont for more details on defining the
        enumerators column config for a form.
      tags:
        - Enumerators
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The form UID of the enumerators to be updated.
                enumerator_type:
                  type: string
                  description: >-
                    The enumerator_type of the enumerators to be updated. Can be
                    one of `monitor` or `surveyor`.
                enumerator_uids:
                  type: array
                  description: An array of enumerator UIDs of the enumerators to be updated
                  items:
                    type: integer
                    description: The enumerator UID of the enumerator to be updated
                location_uids:
                  type: array
                  description: >-
                    An array of location UIDs of the locations to be mapped to
                    the enumerators. Enumerators can be mapped to 0, 1, or many
                    locations.
                  items:
                    type: integer
                    description: The location UID of the location to be mapped
              required:
                - enumerator_uids
                - form_uid
                - enumerator_type
                - location_uids
      responses:
        "200":
          description: Location mapping updated successfully
        "400":
          description: Request errors
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Form not found
        "422":
          description: Form errors
  "/enumerators/{enumerator_uid}":
    get:
      summary: Get details of an enumerator
      description: >
        Get details of an enumerator by their unique ID.

        **Note**: This endpoint does not return information related to the
        enumerator's role (like surveyor, monitor, etc.) on different forms or
        the enumerator's mapping information for different forms. To get this
        information, use the `GET /enumerators` endpoint or the `GET
        /enumerators/{enumerator_uid}/roles` endpoint.
      tags:
        - Enumerators
      parameters:
        - in: path
          name: enumerator_uid
          schema:
            type: integer
          description: Unique ID of the enumerator
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: object
                    properties:
                      enumerator_id:
                        type: string
                        description: The user-assigned unique ID of the enumerator
                      enumerator_uid:
                        type: integer
                        description: The system-assigned unique ID of the enumerator
                      name:
                        type: string
                        description: The name of the enumerator
                      email:
                        type: string
                        description: The email of the enumerator
                      mobile_primary:
                        type: string
                        description: The primary mobile number of the enumerator
                      language:
                        type: string
                        description: The primary language of the enumerator
                      gender:
                        type: string
                        description: The gender of the enumerator
                      home_address:
                        type: string
                        description: The home address of the enumerator
                      custom_fields:
                        type: object
                        description: >-
                          Any non-standard fields that should be displayed for
                          the enumerator. The keys are the user-defined labels
                          of the custom fields.
    put:
      summary: Update an enumerator
      description: >
        Update an enumerator's details by their unique ID.

        **Note**: This endpoint does not update information related to the
        enumerator's role (like surveyor, monitor, etc.) on different forms or
        the enumerator's mapping information for different forms. To update this
        information, use the `/enumerators/{enumerator_uid}/roles` and
        `/enumerators/{enumerator_uid}/roles/locations` endpoints.
      tags:
        - Enumerators
      parameters:
        - in: path
          name: enumerator_uid
          schema:
            type: integer
          description: Unique ID of the enumerator
          required: true
      requestBody:
        description: >-
          The updated record as it should be saved in the database. Note that
          values should be provided even if they are not being updated,
          otherwise they will be set to null.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enumerator_id:
                  type: string
                  description: The user-assigned unique ID of the enumerator
                name:
                  type: string
                  description: The name of the enumerator
                email:
                  type: string
                  description: The email of the enumerator
                mobile_primary:
                  type: string
                  description: The primary mobile number of the enumerator
                language:
                  type: string
                  description: The language of the enumerator
                gender:
                  type: string
                  description: The gender of the enumerator
                home_address:
                  type: string
                  description: The home address of the enumerator
                custom_fields:
                  type: object
                  description: >-
                    Any non-standard fields that should be displayed for the
                    enumerator. The keys are the user-defined labels of the
                    custom fields.
              required:
                - enumerator_id
                - name
                - email
                - mobile_primary
                - gender
      responses:
        "200":
          description: Successfully updated
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Enumerator not found
        "422":
          description: Enumerator errors
  /enumerators/surveyor-stats:
    get:
      summary: Get surveyor level productivity stats
      description: >-
        Return surveyor level productivity stats for a given form
      tags:
        - Surveyor Stats
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: List of all surveyors and their productivity stats
                    items:
                      type: object
                      properties:
                        enumerator_id:
                          type: string
                          description: The ID of the surveyor
                        avg_num_submissions_per_day:
                          type: integer
                          description: The average number of submissions per day for the surveyor
                        avg_num_completed_per_day:
                          type: integer
                          description: The average number of completed submissions per day for the surveyor
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
    put:
      summary: Update surveyor productivity stats
      description: >-
        Update the surveyor productivity stats for the given form
      tags:
        - Surveyor Stats
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique ID of the form
                surveyor_stats:
                  type: array
                  description: >
                    List of all surveyors and their productivity stats
                  items:
                    type: object
                    properties:
                      enumerator_id:
                        type: string
                        description: The ID of the surveyor.
                      avg_num_submissions_per_day:
                        type: integer
                        description: The average number of submissions per day for the surveyor
                      avg_num_completed_per_day:
                        type: integer
                        description: The average number of completed submissions per day for the surveyor
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
        "500":
          description: An unexpected error occurred

  /assignments:
    get:
      summary: Get assignments
      description: Return the logged in user's assignment details for the given form
      tags:
        - Assignments
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: >
                      Targets with their assigned surveyors (if any)

                      Corresponds to the main table on the assignments tab of
                      the web app
                    items:
                      type: object
                      properties:
                        form_uid:
                          type: integer
                          description: The unique ID of the form
                        assigned_enumerator_id:
                          type: string
                          description: The ID of the surveyor
                        assigned_enumerator_uid:
                          type: integer
                          description: The unique ID of the surveyor
                        assigned_enumerator_name:
                          type: string
                          description: The name of the surveyor
                        assigned_enumerator_email:
                          type: string
                          description: The email of the surveyor
                        assigned_enumerator_mobile_primary:
                          type: string
                          description: The primary mobile number of the surveyor
                        assigned_enumerator_language:
                          type: string
                          description: The primary language of the surveyor
                        assigned_enumerator_gender:
                          type: string
                          description: The gender of the surveyor
                        assigned_enumerator_home_address:
                          type: string
                          description: The home address of the surveyor
                        assigned_enumerator_custom_fields:
                          type: object
                          description: >-
                            Any non-standard fields that should be displayed for
                            the surveyor
                        target_id:
                          type: string
                          description: The ID of the target
                        target_uid:
                          type: integer
                          description: The unique ID of the target
                        gender:
                          type: string
                          description: The gender of the target
                        language:
                          type: string
                          description: The primary language of the target
                        custom_fields:
                          type: object
                          description: >-
                            Any non-standard fields that should be displayed for
                            the target
                        target_assignable:
                          type: boolean
                          description: >-
                            Grouping of last_attempt_survey_status into assignable/not assignable
                            categories. Used to determine if the target is
                            assignable.
                        last_attempt_survey_status:
                          type: integer
                          description: >-
                            The survey status from the target's most recent
                            SurveyCTO submission
                        last_attempt_survey_status_label:
                          type: string
                          description: >-
                            The label corresponding to the last_attempt_survey_status
                            code
                        num_attempts:
                          type: integer
                          description: >-
                            The number of times the target has been attempted
                        refusal_flag:
                          type: boolean
                          description: >-
                            Whether the target has been flagged as a refusal
                        webapp_tag_color:
                          type: string
                          description: >-
                            The color that should be used to color the status
                            tag on the web flask_app
                        revisit_sections:
                          type: array
                          description: The revisit sections for the target
                          items:
                            type: string
                            description: Name of the revisit section for the target
                        target_locations:
                          type: array
                          description: >-
                            An array of locations associated with the target.
                            Each array item is an object of the form
                            {`location`_id: _location_id_, `location`_name:
                            _location_name_} in descending order from highest to
                            lowest level location.
  /assignments/enumerators:
    get:
      summary: Get enumerators eligible for assignment
      description: Return the logged in user's assignment-eligible enumerator details for the given form
      tags:
        - Assignments
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: >-
                      The assignable surveyors (status is not "Dropout").
                      Corresponds to the table on the assignments workflow screen on the
                      assignments tab of the web app.
                    items:
                      type: object
                      properties:
                        enumerator_id:
                          type: string
                          description: The ID of the enumerator
                        enumerator_uid:
                          type: integer
                          description: The unique ID of the enumerator
                        enumerator_name:
                          type: string
                          description: The name of the enumerator
                        language:
                          type: string
                          description: The primary language of the enumerator
                        gender:
                          type: string
                          description: The gender of the enumerator
                        home_address:
                          type: string
                          description: The home address of the enumerator
                        mobile_primary:
                          type: string
                          description: The primary mobile number of the enumerator
                        surveyor_status:
                          type: string
                          enum:
                            - Active
                            - Temp. inactive
                            - Dropout
                          description: The working status of the enumerator
                        custom_fields:
                          type: object
                          description: >-
                            The custom fields of the enumerator. Each key is the
                            user-defined label of the custom field and each value is the
                            value of the custom field.
                        enumerator_locations:
                          type: array
                          description: >-
                            An array of locations associated with the
                            enumerator (their working geography). Each array item is an object of the form
                            {`location`_id: _location_id_, `location`_name:
                            _location_name_} in descending order from highest to
                            lowest level location.
                        total_assigned_targets:
                          type: integer
                          description: Total assigned targets for the given survey
                        total_pending_targets:
                          type: integer
                          description: Total pending targets for the given survey
                        total_completed_targets:
                          type: integer
                          description: Total complete targets for the given survey
    put:
      summary: Update assignments
      description: >
        Update the mapping of enumerators to targets


        Each target can have 0 or 1 enumerators assigned to it, so assigning an
        enumerator to an already-assigned target will reassign (overwrite) the previous
        assignment


        To unassign an enumerator from a target, include the target_uid value
        and pass a null value for the enumerator_uid
      tags:
        - Assignments
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              description: A list of target/enumerator pairs
              items:
                type: object
                properties:
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  target_uid:
                    type: integer
                  enumerator_uid:
                    type: integer
                required:
                  - form_uid
                  - target_uid
                  - enumerator_uid
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Enumerator or target not found
        "422":
          description: Form errors. Specific errors messages will be returned if ineligible/unassignable enumerators or targets are included in the request body.

  /assignments/schedule-email:
    post:
      summary: Schedule assignment emails
      tags:
        - Assignments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                date:
                  type: string
                  format: date
                time:
                  type: string
                  format: time
                recipients:
                  type: array
                  items:
                    type: integer
                status:
                  type: string
                  enum: [queued, sent, failed]
              required:
                - email_config_uid
                - date
                - time
                - recipients
                - status
      responses:
        "201":
          description: Manual email trigger created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  success:
                    type: boolean

  /assignments/table-config:
    get:
      summary: Get table configuration
      description: >-
        Return the assignments module table configuration details for the given form
      tags:
        - Assignments Table Configuration
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  assignments_main:
                    type: array
                    description: >
                      List of column groups and columns with labels and data
                      access keys

                      Corresponds to the main table on the assignments tab of
                      the web app
                    items:
                      type: object
                      properties:
                        group_label:
                          type: string
                          description: The label for the column group
                        columns:
                          type: array
                          description: An array of columns to display for this column group
                          items:
                            type: object
                            properties:
                              column_label:
                                type: string
                                description: The label for the column
                              column_key:
                                type: string
                                description: >-
                                  The column key that can be used to access the
                                  column records in the data response
                  assignments_surveyors:
                    type: array
                    description: >
                      List of column groups and columns with labels and data
                      access keys

                      Corresponds to the surveyors modal table on the
                      assignments tab of the web app
                    items:
                      type: object
                      properties:
                        group_label:
                          type: string
                          description: The label for the column group
                        columns:
                          type: array
                          description: An array of columns to display for this column group
                          items:
                            type: object
                            properties:
                              column_label:
                                type: string
                                description: The label for the column
                              column_key:
                                type: string
                                description: >-
                                  The column key that can be used to access the
                                  column records in the data response
                  assignments_review:
                    type: array
                    description: >
                      List of column groups and columns with labels and data
                      access keys

                      Corresponds to the assignments review modal table on the
                      assignments tab of the web app
                    items:
                      type: object
                      properties:
                        group_label:
                          type: string
                          description: The label for the column group
                        columns:
                          type: array
                          description: An array of columns to display for this column group
                          items:
                            type: object
                            properties:
                              column_label:
                                type: string
                                description: The label for the column
                              column_key:
                                type: string
                                description: >-
                                  The column key that can be used to access the
                                  column records in the data response
                  surveyors:
                    type: array
                    description: >
                      List of column groups and columns with labels and data
                      access keys

                      Corresponds to the main table on the surveyors tab of the
                      web app
                    items:
                      type: object
                      properties:
                        group_label:
                          type: string
                          description: The label for the column group
                        columns:
                          type: array
                          description: An array of columns to display for this column group
                          items:
                            type: object
                            properties:
                              column_label:
                                type: string
                                description: The label for the column
                              column_key:
                                type: string
                                description: >-
                                  The column key that can be used to access the
                                  column records in the data response
                  targets:
                    type: array
                    description: >
                      List of column groups and columns with labels and data
                      access keys

                      Corresponds to the main table on the targets tab of the
                      web app
                    items:
                      type: object
                      properties:
                        group_label:
                          type: string
                          description: The label for the column group
                        columns:
                          type: array
                          description: An array of columns to display for this column group
                          items:
                            type: object
                            properties:
                              column_label:
                                type: string
                                description: The label for the column
                              column_key:
                                type: string
                                description: >-
                                  The column key that can be used to access the
                                  column records in the data response
    put:
      summary: Update table configuration
      description: >-
        Update the assignments module table configuration details for the given form
      tags:
        - Assignments Table Configuration
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique ID of the form
                table_name:
                  type: string
                  enum:
                    - assignments_main
                    - assignments_surveyors
                    - assignments_review
                    - surveyors
                    - targets
                  description: Name of the table to be updated
                table_config:
                  type: array
                  description: >
                    List of column groups and columns with labels and data
                    access keys
                  items:
                    type: object
                    properties:
                      group_label:
                        type: string
                        description: The label for the column group
                      column_label:
                        type: string
                        description: The label for the column
                      column_key:
                        type: string
                        description: >-
                          The column key that can be used to access the
                          column records in the data response

                          Allowed values for `column_key` are:


                          "assignments_main": [
                              "target_uid",
                              "target_id",
                              "language",
                              "gender",
                              "custom_fields",
                              "assigned_enumerator_uid",
                              "assigned_enumerator_id",
                              "assigned_enumerator_name",
                              "assigned_enumerator_home_address",
                              "assigned_enumerator_language",
                              "assigned_enumerator_gender",
                              "assigned_enumerator_email",
                              "assigned_enumerator_mobile_primary",
                              "assigned_enumerator_custom_fields",
                              "completed_flag",
                              "refusal_flag",
                              "num_attempts",
                              "last_attempt_survey_status",
                              "last_attempt_survey_status_label",
                              "target_assignable",
                              "revisit_sections",
                              "target_locations",
                          ]

                          "assignments_surveyors": [
                              "enumerator_uid",
                              "enumerator_id",
                              "name",
                              "email",
                              "mobile_primary",
                              "language",
                              "home_address",
                              "gender",
                              "custom_fields",
                              "surveyor_status",
                              "surveyor_locations",
                              "form_productivity",
                          ]

                          "assignments_review": [
                              "assigned_enumerator_name",
                              "prev_assigned_to",
                              "target_id",
                              "target_status",
                          ]

                          "surveyors": [
                              "enumerator_uid",
                              "enumerator_id",
                              "name",
                              "email",
                              "mobile_primary",
                              "language",
                              "gender",
                              "home_address",
                              "custom_fields",
                              "surveyor_status",
                              "surveyor_locations",
                          ]

                          "targets": [
                              "target_uid",
                              "target_id",
                              "language",
                              "gender",
                              "custom_fields",
                              "completed_flag",
                              "refusal_flag",
                              "num_attempts",
                              "last_attempt_survey_status",
                              "last_attempt_survey_status_label",
                              "target_assignable",
                              "revisit_sections",
                              "target_locations",
                          ]

                          Note that the following "special" column keys must be formatted as follows:

                          *Custom Fields*
                          custom_fields['<custom_field_label>'] e.g. custom_fields['Mobile No. Primary']
                          assigned_enumerator_custom_fields['<custom_field_label>'] e.g. assigned_enumerator_custom_fields['Mobile No. Primary']

                          *Locations*
                          surveyor_locations[<geo_level_index>].location_id or surveyor_locations[<geo_level_index>].location_name
                          target_locations[<geo_level_index>].location_id or target_locations[<geo_level_index>].location_name

                          Note that <geo_level_index> is the index (starting at zero) of the geo level in descending order. Take an example where 
                          the geo levels for the survey are District, Mandal, and Polling Station. The geo level index for District is 0, Mandal is 1, and Polling Station is 2.
                          So if you want to show the Mandal ID column in the surveyors table, you would set the column_key to surveyor_locations[1].location_id.

                          *Form Productivity*
                          form_productivity.<scto_form_id>.total_assigned_targets
                          form_productivity.<scto_form_id>.total_pending_targets
                          form_productivity.<scto_form_id>.total_completed_targets

                          Note that <scto_form_id> is the SurveyCTO form ID of the form. This needs to be provided because productivity metrics are provided for each form in the given survey.

      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Enumerator or target not found
        "422":
          description: Form errors
  "/module-questionnaire/{survey_uid}":
    get:
      tags:
        - Module Questionnaire
      summary: Get module questionnaire responses for a survey
      description: |
        Returns the module questionnaire responses for a given survey.
      parameters:
        - name: survey_uid
          in: path
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: >-
            Returns the saved responses for module questionnaire section for a
            given survey.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: >-
                      List of modules and their completion status for the given
                      survey
                    items:
                      type: object
                      properties:
                        survey_uid:
                          type: integer
                          description: The unique ID of the survey.
                        target_assignment_criteria:
                          type: array
                          description: >-
                            Array of selected criteria for target to enumerator
                            assignments
                          example:
                            - Location
                            - Gender
                        supervisor_assignment_criteria:
                          type: array
                          description: >-
                            Array of selected criteria for supervisor to
                            enumerator assignments
                          example:
                            - Location
                            - Gender
                        supervisor_hierarchy_exists:
                          type: boolean
                          description: Whether there is a hierarchy of supervisors
                        reassignment_required:
                          type: boolean
                          description: >-
                            Whether there will be reassignments during the
                            survey
                        assignment_process:
                          type: string
                          description: >-
                            Process used to perform the assignments of targets
                            to enumerators e.g. Random or Manual
                        supervisor_enumerator_relation:
                          type: string
                          description: >-
                            Mapping of supervisors to enumerators e.g. 1:many,
                            1:1 etc.
                        language_lacation_mapping:
                          type: boolean
                          description: Whether languages can be mapped via locations
        "404":
          description: The specified survey ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  message:
                    type: string
                    description: >-
                      Error message indicating that the specified survey ID was
                      not found.
    put:
      tags:
        - Module Questionnaire
      summary: Save module questionnaire responses for a survey
      description: >
        Saves the module questionnaire responses for a given survey to the
        database.
      parameters:
        - name: survey_uid
          in: path
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      requestBody:
        description: JSON object containing survey ID and list of module IDs
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_uid:
                  type: integer
                  description: The unique ID of the survey.
                target_assignment_criteria:
                  type: array
                  description: >-
                    Array of selected criteria for target to enumerator
                    assignments
                  example:
                    - Location
                    - Gender
                supervisor_assignment_criteria:
                  type: array
                  description: >-
                    Array of selected criteria for supervisor to enumerator
                    assignments
                  example:
                    - Location
                    - Gender
                supervisor_hierarchy_exists:
                  type: boolean
                  description: Whether there is a hierarchy of supervisors
                reassignment_required:
                  type: boolean
                  description: Whether there will be reassignments during the survey
                assignment_process:
                  type: string
                  description: >-
                    Process used to perform the assignments of targets to
                    enumerators e.g. Random or Manual
                supervisor_enumerator_relation:
                  type: string
                  description: "Mapping of supervisors to enumerators e.g. 1:many, 1:1 etc."
                language_lacation_mapping:
                  type: boolean
                  description: Whether languages can be mapped via locations
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
  /roles:
    get:
      tags:
        - Roles
      summary: Get user roles for a survey
      description: |
        Returns the user roles for a given survey.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returns the user roles for a given survey.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: List of roles for the given survey
                    items:
                      type: object
                      properties:
                        role_uid:
                          type: integer
                          description: The unique ID of the role.
                        role_name:
                          type: string
                          description: The name of the role.
                        permissions:
                          type: array
                          description: An array of permissions for a role.
                        reporting_role_uid:
                          type: integer
                          description: >-
                            The unique role ID of role that supervises the given
                            role.
                        survey_uid:
                          type: integer
                          description: The unique ID of the given survey.
    put:
      tags:
        - Roles
      summary: Save the user roles for a survey
      description: >
        Saves the user roles for a given survey to the database. If a role_uid
        is provided, the role will be updated. If role_uid is `None`, a new role
        will be created. Existing roles in the database that are not in the
        payload (by `role_uid`) will be deleted.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      requestBody:
        description: JSON object containing the desired roles for the survey.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - roles
              properties:
                roles:
                  type: array
                  description: Full list of roles for the given survey
                  items:
                    type: object
                    required:
                      - role_uid
                      - role_name
                      - reporting_role_uid
                      - permissions
                    properties:
                      role_uid:
                        type: integer
                        nullable: true
                        description: >-
                          The unique ID of the role. If equal to None, a new
                          role will be created.
                      role_name:
                        type: string
                        nullable: false
                        description: The name of the role.
                      reporting_role_uid:
                        type: integer
                        nullable: true
                        description: >-
                          The unique role ID of role that supervises the given
                          role.
                      permissions:
                        type: array
                        nullable: true
                        description: List of permission_uid's for the role.
                validate_hierarchy:
                  type: boolean
                  description: >
                    Whether to validate the hierarchy of the roles. Set this as
                    true when updating the reporting_role_uid fields of the
                    roles.

                    This will check that the role hierarchy is a valid tree
                    structure.
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: >-
            Form errors Form errors When `validate_hierarchy` is set to true,
            any validation errors will be returned as an array under the
            `errors` key in the response.
  "/permissions":
    get:
      tags:
        - Permissions
      description: Get all permissions
      responses:
        "200":
          description: Permissions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    permission_uid:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
    post:
      tags:
        - Permissions
      summary: Create permission
      description: Create a new permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name
                - description
      responses:
        "201":
          description: Permission created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  permission_uid:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
        "400":
          description: >-
            Name and description are required fields or Permission with this
            name already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  "/permissions/{permission_uid}":
    get:
      tags:
        - Permissions
      summary: Get permission details
      description: Get details of a specific permission
      parameters:
        - in: path
          name: permission_uid
          schema:
            type: integer
          required: true
          description: "Unique id for the permission"
      responses:
        "200":
          description: Permission details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  permission_uid:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
        "404":
          description: Permission not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      tags:
        - Permissions
      summary: Update permission
      description: Update a specific permission using a specific permission unique id
      parameters:
        - in: path
          name: permission_uid
          schema:
            type: integer
          required: true
          description: Unique id for the permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name
                - description
      responses:
        "200":
          description: Permission updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  permission_uid:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
        "400":
          description: >-
            Name and description are required fields or Updating to this name
            would violate uniqueness constraint
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Permission not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      tags:
        - Permissions
      summary: Delete permission
      description: Delete a specific permission using a specific permission unique id
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: path
          name: permission_uid
          schema:
            type: integer
          required: true
          description: "Unique id for ther permission"
      responses:
        "200":
          description: Permission deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Permission not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  "/user-hierarchy":
    get:
      tags:
        - User Hierarchy
      summary: Get user hierarchy details
      description: Get user hierarchy details for a survey and user
      parameters:
        - in: query
          name: survey_uid
          schema:
            type: string
          required: true
        - in: query
          name: user_uid
          schema:
            type: string
          required: true
      responses:
        "200":
          description: User hierarchy details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                  message:
                    type: string
        "404":
          description: User hierarchy not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      tags:
        - User Hierarchy
      summary: Update user hierarchy
      description: Update user hierarchy for a survey and user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_uid:
                  type: string
                user_uid:
                  type: string
                role_uid:
                  type: string
                parent_user_uid:
                  type: string
                X-CSRF-Token:
                  type: string
              required:
                - survey_uid
                - user_uid
                - role_uid
                - parent_user_uid
                - X-CSRF-Token
      responses:
        "200":
          description: User hierarchy updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user_hierarchy:
                    type: object
        "403":
          description: X-CSRF-Token required in header
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
    delete:
      tags:
        - User Hierarchy
      summary: Delete user hierarchy
      description: Delete user hierarchy for a survey and user
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: query
          name: survey_uid
          schema:
            type: string
          required: true
          description: unique id for the survey
        - in: query
          name: user_uid
          schema:
            type: string
          required: true
          description: unique id for the user
      responses:
        "200":
          description: User hierarchy deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: User hierarchy not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /timezones:
    get:
      summary: Get the list of postgres timezones
      description: Get the list of postgres timezones
      tags:
        - Misc
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: List of postgres timezones
                    items:
                      type: object
                      description: Postgres timezone object
                      properties:
                        name:
                          type: string
                          description: Postgres timezone name
                        abbrev:
                          type: string
                          description: Postgres timezone abbreviation
                        utc_offset:
                          type: string
                          description: Postgres timezone UTC offset
  /locations/<survey_uid>/prime-geo-level:
    put:
      tags:
        - Locations
      summary: Save the prime geo level for a survey
      description: >
        Saves the prime geo levels for a given survey to the database.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      requestBody:
        description: JSON object containing the prime geo level for a survey
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - prime_geo_level_uid
              properties:
                prime_geo_level_uid:
                  type: integer
                  nullable: false
                  description: Unique Id of the location set as the prime geo level
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: >
            Form errors

            When `validate_hierarchy` is set to true, any validation errors will
            be returned as an array under the `errors` key in the response.

  /locations/geo-levels:
    get:
      tags:
        - Locations
      summary: Get geo levels for a survey
      description: |
        Returns the geo levels for a given survey.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returns the geo levels for a given survey.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: List of geo levels for the given survey
                    items:
                      type: object
                      properties:
                        geo_level_uid:
                          type: integer
                          description: The unique ID of the geo level.
                        geo_level_name:
                          type: string
                          description: The name of the geo level.
                        parent_geo_level_uid:
                          type: integer
                          description: >-
                            The unique ID of geo level that is the parent of the
                            given geo level.
                        survey_uid:
                          type: integer
                          description: The unique ID of the given survey.
    put:
      tags:
        - Locations
      summary: Save the geo levels for a survey
      description: >
        Saves the geo levels for a given survey to the database. If a
        geo_level_uid is provided, the geo level will be updated. If
        geo_level_uid is `None`, a new geo level will be created. Existing geo
        levels in the database that are not in the payload (by `geo_level_uid`)
        will be deleted.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      requestBody:
        description: JSON object containing the desired geo levels for the survey.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - geo_levels
              properties:
                geo_levels:
                  type: array
                  description: Full list of geo levels for the given survey
                  items:
                    type: object
                    properties:
                      geo_level_uid:
                        type: integer
                        nullable: true
                        description: >-
                          The unique ID of the geo level. If equal to None, a
                          new geo level will be created.
                      geo_level_name:
                        type: string
                        nullable: false
                        description: The name of the geo level.
                      parent_geo_level_uid:
                        type: integer
                        nullable: true
                        description: >-
                          The unique ID of geo level that is the parent of the
                          given geo level.
                validate_hierarchy:
                  type: boolean
                  description: >
                    Whether to validate the hierarchy of the geo levels. Set
                    this as true when updating the parent_geo_level_uid fields
                    of the geo levels.

                    This will check that the location type hierarchy is a valid
                    tree structure.
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: >
            Form errors

            When `validate_hierarchy` is set to true, any validation errors will
            be returned as an array under the `errors` key in the response.
  /locations:
    get:
      tags:
        - Locations
      summary: Get locations for a survey
      description: |
        Returns the locations for a given survey.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returns the locations for a given survey.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: object
                    properties:
                      ordered_columns:
                        type: array
                        description: >
                          List of columns to display in the table in the correct
                          order. 

                          These will be of the form [<geo level 1 name> ID, <geo
                          level 1 name> Name, <geo level 2 name> ID, <geo level
                          2 name> Name, ...]. 

                          For example, ["State ID", "State Name", "District ID",
                          "District Name", "Block ID", "Block Name"].

                          The order of geo levels will be descending from the
                          top level geo level to the lowest level geo level.

                          Will be empty if no geo levels have been configured
                          for the given survey.
                      records:
                        type: array
                        description: >
                          List of location objects for the given survey. Each
                          location object contains keys corresponding to the
                          columns in the `ordered_columns` array.

                          The columns are determined by the geo levels for the
                          given survey, so columns will vary from survey to
                          survey.

                          Will be empty of no geo levels or no locations have
                          been configured for the given survey.
        "500":
          description: >
            Error message indicating that the locations could not be retrieved.

            If the location type hierarchy is invalid, the `errors` key will
            contain a `geo_level_hierarchy` key with an error message string.
    post:
      tags:
        - Locations
      summary: Upload a locations CSV file for a survey
      description: >
        Upload a locations CSV file for a given survey to the database. A column
        mapping is required in the payload to map the columns in the CSV file to
        the geo levels for the given survey.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      requestBody:
        description: >-
          JSON object containing locations file content and geo level column
          mapping.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                geo_level_mapping:
                  type: array
                  description: >-
                    An array of objects mapping the columns in the CSV file to
                    the geo levels for the given survey.
                  items:
                    type: object
                    properties:
                      geo_level_uid:
                        type: integer
                        nullable: false
                        description: The unique ID of the geo level.
                      location_id_column:
                        type: string
                        nullable: false
                        description: >-
                          The name of the column in the CSV file that contains
                          the location id for the given geo level.
                      location_name_column:
                        type: integer
                        nullable: false
                        description: >-
                          The name of the column in the CSV file that contains
                          the location name for the given geo level.
                    required:
                      - geo_level_uid
                      - location_id_column
                      - location_name_column
                file:
                  type: string
                  description: Base64 encoded CSV file content
              required:
                - geo_level_mapping
                - file
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: >
            Form errors

            Validation errors for the geo level mapping will be returned as an
            array under the `geo_level_mapping` key in the `errors` key of the
            response.

            Validation errors for the file will be returned as an array under
            the `file` key in the `errors` key of the response.

            Validation errors for the location type hierarchy will be returned
            as an array under the `geo_level_hierarchy` key in the `errors` key
            of the response.

            Note that the file validation will only be run if the geo level
            mapping is valid.
  /target-status-mapping:
    get:
      tags:
        - Target Status Mapping
      summary: Get target status mapping
      description: |
        Returns the target status mapping for a given form.
      parameters:
        - name: form_uid
          in: query
          description: The unique ID of a parent form.
          required: true
          schema:
            type: integer
        - name: surveying_method
          in: query
          description: The surveying method for the survey.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the target status mapping for a given form.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: List of target status mapping for the given survey
                    items:
                      type: object
                      properties:
                        survey_status:
                          type: integer
                          description: The unique ID of the survey status.
                        survey_status_label:
                          type: string
                          description: Label corresponding to the survey status.
                        completed_flag:
                          type: boolean
                          description: Boolean indicating if the survey status means survey for the target is complete.
                        refusal_flag:
                          type: boolean
                          description: Boolean indicating if the survey status means survey for the target has been refused.
                        target_assignable:
                          type: boolean
                          description: Boolean indicating if the survey status means target is assignable.
                        webapp_tag_color:
                          type: string
                          description: The color of the label tag when displayed on the webapp.

    put:
      tags:
        - Target Status Mapping
      summary: Save the target status mapping for a form
      description: >
        Saves the target status mapping for a given form to the database.
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        description: JSON object containing the target status mapping for the form.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - target_status_mapping
              properties:
                form_uid:
                  type: integer
                  description: Unique ID of the form
                target_status_mapping:
                  type: array
                  description: Full list of target status mapping for the given survey
                  items:
                    type: object
                    properties:
                      survey_status:
                        type: integer
                        nullable: true
                        description: >-
                          The unique ID of the survey status.
                      survey_status_label:
                        type: string
                        nullable: false
                        description: Label corresponding to the survey status.
                      completed_flag:
                        type: boolean
                        nullable: false
                        description: Boolean indicating if the survey status means survey for the target is complete.
                      refusal_flag:
                        type: boolean
                        nullable: false
                        description: Boolean indicating if the survey status means survey for the target has been refused.
                      target_assignable:
                        type: boolean
                        nullable: false
                        description: Boolean indicating if the survey status means target is assignable.
                      webapp_tag_color:
                        type: string
                        nullable: false
                        description: The color of the label tag when displayed on the webapp.
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
        "500":
          description: An unexpected error occurred

  /targets:
    get:
      summary: Get targets
      description: Return the logged in user's targets for the given form
      tags:
        - Targets
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
        - in: query
          name: page
          schema:
            type: integer
          description: >-
            The page number of the results to return. Results will be paginated
            only if `page` and `per_page` are both specified.\
          required: false
        - in: query
          name: per_page
          schema:
            type: integer
          description: >-
            The number of results to return per page. Results will be paginated
            only if `page` and `per_page` are both specified.
          required: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        target_id:
                          type: string
                          description: The ID of the target
                        target_uid:
                          type: integer
                          description: The unique ID of the target
                        language:
                          type: string
                          description: The primary language of the target
                        gender:
                          type: string
                          description: The gender of the target
                        custom_fields:
                          type: object
                          description: >-
                            Any non-standard fields that should be displayed for
                            the target
                        location_uid:
                          type: integer
                          description: The unique ID of the target's location
                        target_locations:
                          type: array
                          description: >-
                            The geography of the target.  Each array item is an
                            object of the form {`location_id`: _location_id_,
                            `location_name`:  _location_name_, `location_uid`:
                            __location_uid__, `geo_level_name`:
                            __geo_level_name__, `geo_level_uid`:
                            __geo_level_uid__} in descending order from highest 
                            to lowest level location the target is location in.
                            Can be null if a location has not been specified for
                            the target.
                          items:
                            type: object
                            properties:
                              location_id:
                                type: integer
                                description: The user-defined unique ID of the location
                              location_name:
                                type: string
                                description: The name of the location
                              geo_level_name:
                                type: string
                                description: The name of the geo level
                  paginate:
                    type: object
                    description: >-
                      Pagination details. Will only be included if `page` and
                      `per_page` are both specified in the query parameters.
                    properties:
                      page:
                        type: integer
                        description: The page number of the results
                      per_page:
                        type: integer
                        description: The number of results per page
                      count:
                        type: integer
                        description: The total number of results
                      pages:
                        type: integer
                        description: The total number of pages
        "400":
          description: Form ID is required
        "404":
          description: Invalid values for `page` or `per_page` query parameters
    post:
      summary: Upload a csv of targets
      description: |
        Upload a csv of new targets to be added to the given form
      tags:
        - Targets
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                column_mapping:
                  type: object
                  description: >-
                    An object mapping the column names in the csv to the
                    corresponding target properties
                  properties:
                    target_id:
                      type: string
                      description: The column name of the target ID
                    language:
                      type: string
                      description: The column name of the target's primary language
                    gender:
                      type: string
                      description: The column name of the target's gender
                    location_id_column:
                      type: string
                      description: >-
                        The column name of the target's location ID. This is the
                        bottom geo level location that the target is mapped to.
                    custom_fields:
                      type: array
                      description: >-
                        An array of custom fields to be added to the target
                        object
                      items:
                        type: object
                        properties:
                          field_label:
                            type: string
                            description: The user-defined label of the custom field
                          column_name:
                            type: string
                            description: The column name of the custom field
                        required:
                          - field_label
                          - column_name
                  required:
                    - target_id
                file:
                  type: string
                  format: Base64
                  description: >-
                    The csv file to be uploaded in base64 encoding

                    The csv must have a header row with the column names
                    specified in the `column_mapping` object.
                mode:
                  type: string
                  enum:
                    - overwrite
                    - merge
                  description: >-
                    The mode of the upload. In 'overwrite' mode, all targets
                    with the provided form_uid from  the query parameter will be
                    removed and replaced with the new targets from  the CSV
                    file. In 'merge' mode, the new targets from the CSV will
                    be added to the existing ones.  Any existing records
                    included in the upload will also be updated.
              required:
                - column_mapping
                - file
                - mode
      responses:
        "200":
          description: Records added successfully
        "400":
          description: Query parameter errors
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Form not found
        "422":
          description: Form errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    description: >-
                      An object with information on errors related to the csv
                      file upload. Each key will only be present if there are
                      errors of that type.

                      In addition to the errors listed below, the `errors`
                      object may also contain errors related to an incorrectly
                      specified payload.
                    properties:
                      file_structure_errors:
                        type: array
                        description: >-
                          An array of errors in the file structure. Each array
                          item is a string containing the error message related
                          to an individual error.
                      column_mapping:
                        type: array
                        description: >-
                          An array of errors in the column. Each array item is a
                          string containing the error message related to an
                          individual error.
                      geo_level_hierarchy:
                        type: array
                        description: >-
                          An array of errors in the geo level hierarchy. Each
                          array item is a string containing the error message
                          related to an individual error.
                      record_errors:
                        type: object
                        description: >-
                          An object with information on validation errors in the
                          csv records.
                        properties:
                          summary:
                            type: object
                            description: >-
                              A summary of the validation errors in the csv
                              records
                            properties:
                              error_count:
                                type: integer
                                description: The total number of errors in the csv records
                              total_correct_rows:
                                type: integer
                                description: >-
                                  The total number of correct rows in the csv
                                  records
                              total_rows:
                                type: integer
                                description: The total number of rows in the csv records
                              total_rows_with_errors:
                                type: integer
                                description: >-
                                  The total number of rows with errors in the
                                  csv records
                          summary_by_error_type:
                            type: array
                            description: >-
                              An array of objects with information on validation
                              errors by error type in the csv records.
                            items:
                              type: object
                              properties:
                                error_count:
                                  type: integer
                                  description: >-
                                    The total number of errors of this type in
                                    the csv records
                                error_message:
                                  type: string
                                  description: The error message for this error type
                                error_type:
                                  type: string
                                  description: The error type
                                row_numbers_with_errors:
                                  type: array
                                  description: >-
                                    An array of row numbers with errors of this
                                    type in the csv records
                                  items:
                                    type: integer
                                    description: >-
                                      The row number with an error of this type
                                      in the csv records
                          invalid_records:
                            type: object
                            description: >-
                              An object with information on validation errors by
                              record in the csv records. This can be used to
                              identify the specific errors in each record and to
                              let users download a csv with the errors.
                            properties:
                              records:
                                type: array
                                description: >-
                                  An array of objects that represent the
                                  original records in the csv with the
                                  validation errors. A new `errors` field is
                                  added to each record that contains a
                                  semicolon-separated list of the validation
                                  errors for that record. A new `row_number`
                                  field is also added to each record that
                                  contains the row number of the record in the
                                  original csv.
                              ordered_columns:
                                type: array
                                description: >-
                                  An array of strings that represent the column
                                  names in the `records` array of objects in the
                                  order that they should  appear in a table or
                                  downloadable csv file.
                                items:
                                  type: string
                                  description: The column name in the csv
                  success:
                    type: boolean
                    description: Whether the upload was successful
    patch:
      summary: Bulk update targets for a provided set of fields
      description: >
        Bulk update targets for a provided set of fields. The targets to be
        updated are specified by their target IDs. Only the fields specified in
        the request body will be updated. If a field is not specified, it will
        not be updated. Only personal details and custom fields can be updated
        can be updated through this endpoint. To bulk update targets' locations,
        use the `PUT /targets/roles/locations` endpoint.

        **Note:** Only fields that are defined in the targets column config
        table and set as `bulk_editable` can be updated via this endpoint. See
        the `PUT /targets/column-config` endpoint for more details.
      tags:
        - Targets
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target_uids:
                  type: array
                  description: An array of target UIDs of the targets to be updated
                  items:
                    type: integer
                    description: The target UID of the target to be updated
                form_uid:
                  type: integer
                  description: The form UID of the targets to be updated.
                patch_key_example:
                  description: >-
                    An example of the field name and value to be updated for the
                    targets. Multiple fields to be updated can be specified in
                    the same object. The field name must be the same as the
                    field name in the target column config for the form and set
                    as `bulk_editable.` See the `PUT /targets/column-config` for
                    more details on defining the column config for a form.
              required:
                - target_uids
                - form_uid
      responses:
        "200":
          description: Targets updated successfully
        "400":
          description: Request errors
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Form not found
        "422":
          description: Form errors
  /targets/column-config:
    put:
      summary: Update the targets column config for a form
      description: >
        Update the column config for targets for a form. The column config
        defines the fields that are available for bulk editing via the `PATCH
        /targets` endpoint  and specifies whether fields contain PII.
      tags:
        - Targets
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The form UID of the targets to be updated.
                column_config:
                  type: array
                  description: >-
                    An array of column config objects for the targets data. Each
                    object defines the column name, its type, and whether it is
                    bulk editable or not.

                    The location mapping column must be named
                    `bottom_geo_level_location` and its column_types must be
                    `location`.

                    The basic details columns must be named `target_id`,
                    `language` and `gender` and their column_types must be
                    `basic_details`.

                    The custom fields columns must match their corresponding
                    json keys in the `custom_fields` column of the `targets`
                    table and their column_types must be `custom_field`.
                  items:
                    type: object
                    properties:
                      column_name:
                        type: string
                        description: The field name of the column
                      column_type:
                        type: string
                        description: >-
                          The field type of the column. Can be one of
                          `basic_details`, `custom_field`, or `location`.
                      bulk_editable:
                        type: boolean
                        description: Whether the field is bulk editable or not
                    required:
                      - column_name
                      - column_type
                      - bulk_editable
              required:
                - form_uid
                - column_config
      responses:
        "200":
          description: Column config updated successfully
        "400":
          description: Request errors
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Form not found
        "422":
          description: Form errors
    get:
      summary: Get the targets column config for a form
      description: >
        Get the targets column config for a form. The column config defines the
        fields that are available for bulk editing via the `PATCH /targets`
        endpoint.
      tags:
        - Targets
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: The form UID of the target column config to be updated.
          required: true
      responses:
        "200":
          description: Column config retrieved successfully
          content:
            application/json:
              schema:
                type: array
                description: >-
                  An array of column config objects for the targets data. Each
                  object defines the column name, its type, whether it is bulk
                  editable or not, and whether it contains PII.
                items:
                  type: object
                  properties:
                    column_name:
                      type: string
                      description: The field name of the column
                    column_type:
                      type: string
                      description: >-
                        The field type of the column. Can be one of
                        `basic_details`, `custom_field`, or `location`.
                    bulk_editable:
                      type: boolean
                      description: Whether the field is bulk editable or not
                    contains_pii:
                      type: boolean
                      description: Whether the field contains PII or not
        "400":
          description: Request errors
        "404":
          description: Form not found
  "/targets/{target_uid}":
    get:
      summary: Get details of an target
      description: |
        Get details of an target by their unique ID.
      tags:
        - Targets
      parameters:
        - in: path
          name: target_uid
          schema:
            type: integer
          description: Unique ID of the target
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: object
                    properties:
                      target_id:
                        type: string
                        description: The user-assigned unique ID of the target
                      target_uid:
                        type: integer
                        description: The system-assigned unique ID of the target
                      language:
                        type: string
                        description: The primary language of the target
                      gender:
                        type: string
                        description: The gender of the target
                      location_uid:
                        type: integer
                        description: The unique ID of the target's location
                      target_locations:
                        type: array
                        description: >-
                          The geography of the target.  Each array item is an
                          object of the form {`location_id`: _location_id_,
                          `location_name`:  _location_name_, `location_uid`:
                          __location_uid__, `geo_level_name`:
                          __geo_level_name__, `geo_level_uid`:
                          __geo_level_uid__} in descending order from highest 
                          to lowest level location the target is located in.

                          Can be null if a location has not been specified for
                          the target.
                        items:
                          type: object
                          properties:
                            location_id:
                              type: integer
                              description: The user-defined unique ID of the location
                            location_name:
                              type: string
                              description: The name of the location
                            geo_level_name:
                              type: string
                              description: The name of the geo level
                      custom_fields:
                        type: object
                        description: >-
                          Any non-standard fields that should be displayed for
                          the target. The keys are the user-defined labels of
                          the custom fields.
    put:
      summary: Update an target
      description: |
        Update a target's details by their unique ID.
      tags:
        - Targets
      parameters:
        - in: path
          name: target_uid
          schema:
            type: integer
          description: Unique ID of the target
          required: true
      requestBody:
        description: >-
          The updated record as it should be saved in the database. Note that
          values should be provided even if they are not being updated,
          otherwise they will be set to null.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target_id:
                  type: string
                  description: The user-assigned unique ID of the target
                language:
                  type: string
                  description: The language of the target
                gender:
                  type: string
                  description: The gender of the target
                location_uid:
                  type: integer
                  description: The unique ID of the target's location
                custom_fields:
                  type: object
                  description: >-
                    Any non-standard fields that should be displayed for the
                    target. The keys are the user-defined labels of the custom
                    fields.
              required:
                - target_id
                - language
                - gender
                - location_uid
                - custom_fields
      responses:
        "200":
          description: Successfully updated
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Target not found
        "422":
          description: Target errors
  /emails/config:
    post:
      tags:
        - emails
      summary: Create a new email config
      operationId: createEmailConfig
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config_type:
                  type: string
                  description: Type of the email config
                  example: "assignments"
                form_uid:
                  type: integer
                  description: UID of the form
                  example: 123
              required:
                - config_type
                - form_uid
      responses:
        "201":
          description: Email schedule created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      email_config_uid:
                        type: integer
                        description: UID of the email config
                        example: 123
                      config_type:
                        type: string
                        description: Type of the email config
                        example: "assignments"
                      form_uid:
                        type: integer
                        description: UID of the form
                        example: 123
                required:
                  - success
                  - data
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Email Config already exists, Use PUT methood for update"
                required:
                  - error
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Internal Server Error"
                  message:
                    type: string
                    description: Description of the error
                    example: "An error occurred while creating the email config"
                required:
                  - error
                  - message

    get:
      tags:
        - emails
      summary: Get email schedules per form
      operationId: getEmailConfigs
      parameters:
        - in: query
          name: form_uid
          required: true
          description: Form UID
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        email_config_uid:
                          type: integer
                          description: UID of the email config
                          example: 123
                        config_type:
                          type: string
                          description: Type of the email config
                          example: "assignments"
                        form_uid:
                          type: integer
                          description: UID of the form
                          example: 123
                required:
                  - success
                  - data
        "404":
          description: Email configs not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Not Found"
                  message:
                    type: string
                    description: Description of the error
                    example: "Email configs not found"
                required:
                  - error
                  - message

  /emails/config/{email_config_uid}:
    get:
      tags:
        - emails
      summary: Get a particular email config given the email config UID
      operationId: getEmailConfig
      parameters:
        - in: path
          name: email_config_uid
          required: true
          description: Email Config UID
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      email_config_uid:
                        type: integer
                        description: UID of the email config
                        example: 123
                      config_type:
                        type: string
                        description: Type of the email config
                        example: "assignments"
                      form_uid:
                        type: integer
                        description: UID of the form
                        example: 123
                required:
                  - success
                  - data
        "404":
          description: Email config not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Not Found"
                  message:
                    type: string
                    description: Description of the error
                    example: "Email config not found"
                required:
                  - error
                  - message
    put:
      tags:
        - emails
      summary: Update an email config
      operationId: updateEmailConfig
      parameters:
        - in: path
          name: email_config_uid
          required: true
          description: Email Config UID
          schema:
            type: integer
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config_type:
                  type: string
                  description: Type of the email config
                  example: "assignments"
                form_uid:
                  type: integer
                  description: UID of the form
                  example: 123
              required:
                - config_type
                - form_uid
      responses:
        "200":
          description: Email config updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Email config updated successfully"
                  data:
                    type: object
                    properties:
                      email_config_uid:
                        type: integer
                        description: UID of the email config
                        example: 123
                      config_type:
                        type: string
                        description: Type of the email config
                        example: "assignments"
                      form_uid:
                        type: integer
                        description: UID of the form
                        example: 123
                required:
                  - success
                  - message
                  - data
        "404":
          description: Email config not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Not Found"
                  message:
                    type: string
                    description: Description of the error
                    example: "Email config not found"
                required:
                  - error
                  - message
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Internal Server Error"
                  message:
                    type: string
                    description: Description of the error
                    example: "An error occurred while updating the email config"
                required:
                  - error
                  - message
    delete:
      tags:
        - emails
      summary: Delete an email config
      operationId: deleteEmailConfig
      parameters:
        - in: path
          name: email_config_uid
          required: true
          description: Email Config UID
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: Email config deleted successfully

  /emails/schedule:
    post:
      summary: Create a new email schedule
      tags:
        - Emails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                dates:
                  type: array
                  items:
                    type: string
                    format: date
                time:
                  type: string
                  format: time
              required:
                - email_config_uid
                - dates
                - time
      responses:
        "201":
          description: Email schedule created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  dates:
                    type: array
                    items:
                      type: string
                      format: date
                  time:
                    type: string
                    format: time
                required:
                  - email_config_uid
                  - dates
                  - time
    get:
      summary: Get email schedules for a specific config
      tags:
        - Emails
      parameters:
        - name: email_config_uid
          in: query
          description: Unique identifier for the config
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Email schedules retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    email_config_uid:
                      type: integer
                    dates:
                      type: array
                      items:
                        type: string
                        format: date
                    time:
                      type: string
                      format: time

  /emails/schedule/{email_schedule_uid}:
    get:
      summary: Get a specific email schedule
      tags:
        - Emails
      parameters:
        - name: email_schedule_uid
          in: path
          description: Unique identifier for the email schedule
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Email schedule retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  dates:
                    type: array
                    items:
                      type: string
                      format: date
                  time:
                    type: string
                    format: time
    put:
      summary: Update a specific email schedule
      tags:
        - Emails
      parameters:
        - name: email_schedule_uid
          in: path
          description: Unique identifier for the email schedule
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                dates:
                  type: array
                  items:
                    type: string
                    format: date
                time:
                  type: string
                  format: time
              required:
                - email_config_uid
                - dates
                - time
      responses:
        "200":
          description: Email schedule updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  dates:
                    type: array
                    items:
                      type: string
                      format: date
                  time:
                    type: string
                    format: time
                required:
                  - email_config_uid
                  - dates
                  - time
    delete:
      summary: Delete a specific email schedule
      tags:
        - Emails
      parameters:
        - name: email_schedule_uid
          in: path
          description: Unique identifier for the email schedule
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Email schedule deleted successfully
  /emails/manual-trigger:
    post:
      summary: Create a new manual email trigger
      tags:
        - Emails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                date:
                  type: string
                  format: date
                time:
                  type: string
                  format: time
                recipients:
                  type: array
                  items:
                    type: integer
                status:
                  type: string
                  enum:
                    - queued
                    - sent
                    - failed
                    - running
                    - progress
              required:
                - email_config_uid
                - date
                - time
                - recipients
                - status
      responses:
        "201":
          description: Manual email trigger created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  date:
                    type: string
                    format: date
                  time:
                    type: string
                    format: time
                  recipients:
                    type: array
                    items:
                      type: integer
                  status:
                    type: string
                    enum:
                      - queued
                      - sent
                      - failed
                      - running
                      - progress
                required:
                  - email_config_uid
                  - date
                  - time
                  - status
    get:
      summary: Get manual email triggers for a specific form
      tags:
        - Emails
      parameters:
        - name: email_config_uid
          in: query
          description: Unique identifier for the form
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Manual email triggers retrieved successfully
          content:
            application/json:
              schema:
                type: array
                description: a list of email triggers
                items:
                  type: object
                  properties:
                    email_config_uid:
                      type: integer
                    date:
                      type: string
                      format: date
                    time:
                      type: string
                      format: time
                    recipients:
                      type: array
                      items:
                        type: integer
                    status:
                      type: string
                      enum:
                        - queued
                        - sent
                        - failed
                  required:
                    - form_uid
                    - date
                    - time
                    - recipients

  /emails/manual-trigger/{manual_email_trigger_uid}:
    patch:
      summary: Update an email trigger status
      tags:
        - Emails
      parameters:
        - name: manual_email_trigger_uid
          in: path
          description: Unique identifier for the manual trigger
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                status:
                  type: string
                  enum:
                    - queued
                    - sent
                    - failed
                    - running
                    - progress
              required:
                - email_config_uid
                - status
      responses:
        "201":
          description: Manual email trigger status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  date:
                    type: string
                    format: date
                  time:
                    type: string
                    format: time
                  recipients:
                    type: array
                    items:
                      type: integer
                  status:
                    type: string
                    enum:
                      - queued
                      - sent
                      - failed
                      - running
                      - progress
                required:
                  - email_config_uid
                  - status
    put:
      summary: Update an email trigger
      tags:
        - Emails
      parameters:
        - name: manual_email_trigger_uid
          in: path
          description: Unique identifier for the manual trigger
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                date:
                  type: string
                  format: date
                time:
                  type: string
                  format: time
                recipients:
                  type: array
                  items:
                    type: integer
                status:
                  type: string
                  enum:
                    - queued
                    - sent
                    - failed
                    - running
                    - progress
              required:
                - email_config_uid
                - date
                - time
                - recipients
                - status
      responses:
        "201":
          description: Manual email trigger updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  date:
                    type: string
                    format: date
                  time:
                    type: string
                    format: time
                  recipients:
                    type: array
                    items:
                      type: integer
                  status:
                    type: string
                    enum:
                      - queued
                      - sent
                      - failed
                required:
                  - email_config_uid
                  - date
                  - time
                  - status
    
  /emails/template:
    post:
      summary: Create a new email template
      tags:
        - Emails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                language:
                  type: string
                subject:
                  type: string
                content:
                  type: string
              required:
                - language
                - email_config_uid
                - subject
                - content
      responses:
        "201":
          description: Email template created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  subject:
                    type: string
                  language:
                    type: string
                  content:
                    type: string
                required:
                  - email_config_uid
                  - subject
                  - language
                  - content
    get:
      summary: Get all email templates
      tags:
        - Emails
      parameters:
        - name: email_config_uid
          in: query
          description: Unique identifier for the email config associated with the template
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Email templates retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    email_config_uid:
                      type: integer
                    subject:
                      type: string
                    language:
                      type: string
                    content:
                      type: string
                  required:
                    - email_config_uid
                    - subject
                    - language
                    - content
  /emails/template/{template_id}:
    get:
      summary: Get a specific email template
      tags:
        - Emails
      parameters:
        - name: template_id
          in: path
          description: Unique identifier for the email template
          required: true
          schema:
            type: integer
        - name: email_config_uid
          in: query
          description: Unique identifier for the email config associated with the template
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Email template retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  subject:
                    type: string
                  language:
                    type: string
                  content:
                    type: string
                required:
                  - email_config_uid
                  - subject
                  - language
                  - content
    put:
      summary: Update a specific email template
      tags:
        - Emails
      parameters:
        - name: template_id
          in: path
          description: Unique identifier for the email template
          required: true
          schema:
            type: integer
        - name: email_config_uid
          in: query
          description: Unique identifier for the email config associated with the template
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                subject:
                  type: string
                language:
                  type: string
                content:
                  type: string
              required:
                - email_config_uid
                - subject
                - language
                - content
      responses:
        "200":
          description: Email template updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  subject:
                    type: string
                  language:
                    type: string
                  content:
                    type: string
                required:
                  - email_config_uid
                  - subject
                  - language
                  - content
    delete:
      summary: Delete a specific email template
      tags:
        - Emails
      parameters:
        - name: template_id
          in: path
          description: Unique identifier for the email template
          required: true
          schema:
            type: integer
        - name: email_config_uid
          in: query
          description: Unique identifier for the email config associated with the template
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Email template deleted successfully
