openapi: 3.0.2
info:
  title: SurveyStream API
  description: >
    Internal endpoints for the SurveyStream web application

    ### Context

    SurveyStream is a survey management software application developed under
    IDinsight’s DataDelta initiative.  SurveyStream is the centralized hub for
    managing DataDelta’s survey operations in real time enabling fast,  cheap,
    high quality data collection.
    SurveyStream is a survey management software application developed under
    IDinsight’s DataDelta initiative.  SurveyStream is the centralized hub for
    managing DataDelta’s survey operations in real time enabling fast,  cheap,
    high quality data collection.


    The SurveyStream web application enables survey supervisors to view survey
    targets, view and manage enumerator information, and make assignments
    between targets and enumerators.
  version: "1.0"
servers:
  - url: "https://surveystream.idinsight.io/api"
    description: Production server
  - url: "https://stg.surveystream.idinsight.io/api"
    description: Staging server
components:
  securitySchemes:
    cookieAuth:
      description: >
        ### Basic Setup

        - Cookie-based auth is used for protected endpoints

        - Upon successful login a session cookie is saved on the user's device
        and is used to authenticate subsequent requests

        - The user will be automatically logged out after 7 days


        ### CSRF Token

        - To prevent CSRF attacks, a CSRF token must be included in the
        `X-CSRF-TOKEN` header for all POST, PUT, PATCH and DELETE requests

        - The token can be obtained from the CSRF-TOKEN cookie set by the `GET
        /get-csrf` action
      type: apiKey
      in: cookie
      name: session
security:
  - ApiKeyAuth: []
tags:
  - name: User Authentication
    description: Endpoints related to authenticating users
  - name: Password Management
    description: Endpoints related to managing users' passwords
  - name: User Registration
    description: Endpoints related to creating new users
  - name: Profile
    description: Endpoints related to the user's profile
  - name: Surveys
    description: Endpoints related to the user's surveys
  - name: Forms
    description: Endpoints related to the user's forms
  - name: Enumerators
    description: Endpoints related to the user's enumerators
  - name: Surveyor Stats
    description: Endpoints related to the surveyor stats
  - name: Target Status Mapping
    description: Endpoints related to the target status mapping
  - name: Targets
    description: Endpoints related to the user's targets
  - name: Assignments
    description: Endpoints related to the user's assignments
  - name: Assignments Table Configuration
    description: Endpoints related to the configuration of tables for the assignments module
  - name: Misc
    description: Endpoints related to miscellaneous functionalities
  - name: Module Questionnaire
    description: Endpoints related to module questionnaire
  - name: Roles
    description: Endpoints related to user roles
  - name: Locations
    description: Endpoints related to locations
  - name: Permissions
    description: Endpoints related to permissions
  - name: User Hierarchy
    description: Endpoints related to user hierarchy
  - name: Mapping
    description: Endpoints related to mapping
  - name: Emails
    description: Endpoints related to emails configuration
  - name: Media Files
    description: Endpoints related to media files
  - name: Data Quality
    description: Endpoints related to data quality configuration

x-tagGroups:
  - name: User Management
    tags:
      - User Authentication
      - Password Management
      - User Registration
      - User Invite
      - User Management
  - name: Profile
    tags:
      - Profile
  - name: Surveys & Forms
    tags:
      - Surveys
      - Forms
  - name: Module Selection
    tags:
      - Module Selection
  - name: Enumerators
    tags:
      - Enumerators
  - name: Surveyor Stats
    tags:
      - Surveyor Stats
  - name: Target Status Mapping
    tags:
      - Target Status Mapping
  - name: Targets
    tags:
      - Targets
  - name: Assignments
    tags:
      - Assignments
  - name: Assignments Table Configuration
    tags:
      - Assignments Table Configuration
  - name: Misc
    tags:
      - Misc
  - name: Module Questionnaire
    tags:
      - Module Questionnaire
  - name: Roles
    tags:
      - Roles
      - Permissions
      - User Hierarchy
  - name: Locations
    tags:
      - Locations
  - name: Mapping
    tags:
      - Mapping
  - name: Emails
    tags:
      - Emails
  - name: Media Files
    tags:
      - Media Files
  - name: Data Quality
    tags:
      - Data Quality

paths:
  /healthcheck:
    get:
      summary: Test database connection
      description: Check if api is running and connected
      security: []
      tags:
        - Misc
      responses:
        "200":
          description: Healthy
        "500":
          description: Failed DB connection
  /get-csrf:
    get:
      summary: Set CSRF-TOKEN cookie
      description: >-
        The value of the CSRF-TOKEN cookie must be included in the X-CSRF-Token
        header for all POST, PUT, and PATCH requests
      security: []
      tags:
        - User Authentication
      responses:
        "200":
          description: Success
  /login:
    post:
      summary: Log a user in
      description: Authenticate a user to access protected endpoints
      security: []
      tags:
        - User Authentication
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: "Success: logged in"
        "400":
          description: User must not be already logged in
        "401":
          description: Unauthorized
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
  /logout:
    get:
      summary: Log a user out
      description: Log a user out so they can no longer access protected endpoints
      tags:
        - User Authentication
      responses:
        "200":
          description: "Success: logged out"
  /register:
    post:
      summary: Create new user
      description: Allow a logged in admin user to create a new user
      tags:
        - User Registration
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: "Success: registered"
        "401":
          description: Unauthorized
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors | User already exists
  /change-password:
    post:
      summary: Update password for logged in user
      description: Allow a logged in user to update their password
      tags:
        - Password Management
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cur_password:
                  type: string
                  description: Current password
                new_password:
                  type: string
                  description: New password
                confirm:
                  type: string
                  description: Confirm new password
              required:
                - cur_password
                - new_password
                - confirm
      responses:
        "200":
          description: "Success: password changed"
        "403":
          description: Wrong password | X-CSRF-Token required in header
        "422":
          description: Form errors
  /forgot-password:
    post:
      summary: Trigger password reset email
      description: send a password reset email to a user
      security: []
      tags:
        - Password Management
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        "200":
          description: Request processed
        "400":
          description: Already logged in - use /change-password
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
  /welcome-user:
    post:
      summary: Trigger welcome email
      description: >-
        Allows a logged in admin user to trigger a welcome email to a user with
        a reset password link
      tags:
        - User Registration
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        "200":
          description: Request processed
        "400":
          description: Already logged in - use /change-password
        "401":
          description: Unauthorized
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Record not found
        "422":
          description: Form errors
  /reset-password:
    post:
      summary: Reset password
      description: Reset the user's password using the reset password email link
      security: []
      tags:
        - Password Management
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rpt_id:
                  type: string
                  description: Reset password ID from the reset password email link
                rpt_token:
                  type: string
                  description: Reset password token from the reset password email link
                new_password:
                  type: string
                  description: New password
                confirm:
                  type: string
                  description: Confirm new password
              required:
                - rpt_id
                - rpt_token
                - new_password
                - confirm
      responses:
        "200":
          description: "Success: password reset"
        "400":
          description: Already logged in - use /change-password
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Invalid link
        "422":
          description: Form errors
  /profile:
    get:
      summary: Get user profile
      description: Return the logged in user's profile information
      tags:
        - Profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_uid:
                    type: integer
                    description: The unique ID of the user
                  first_name:
                    type: string
                    description: The first name of the user
                  middle_name:
                    type: string
                    description: The middle name of the user
                  last_name:
                    type: string
                    description: The last name of the user
                  email:
                    type: string
                    description: The email address of the user
                  phone_primary:
                    type: string
                    description: The primary phone number of the user
                  home_state_name:
                    type: string
                    description: The home state of the user
                  home_district_name:
                    type: string
                    description: The home district of the user
                  is_super_admin:
                    type: boolean
                    description: Super admin status for the user
  /profile/avatar:
    get:
      summary: Get avatar URL
      description: Return a URL for the profile avatar image of the logged in user
      tags:
        - Profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_url:
                    description: >-
                      A presigned url that will give access to the user's
                      profile avatar image for 60 seconds
                    type: string
    put:
      summary: Update avatar
      description: Update the profile avatar image of the logged in user
      tags:
        - Profile
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          image/png:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
  /profile/avatar/remove:
    post:
      summary: Delete avatar
      description: Delete the user's profile avatar image
      tags:
        - Profile
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
  /users/check-email-availability:
    post:
      tags:
        - User Management
      summary: Endpoint to check a user by email
      description: Requires JSON body with email.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                survey_uid:
                  type: integer
              required:
                - email
      responses:
        "200":
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      user_uid:
                        type: integer
                        description: The unique ID of the user
                      email:
                        type: string
                        description: The email address of the user
                      first_name:
                        type: string
                        description: The first name of the user
                      last_name:
                        type: string
                        description: The last name of the user
                      roles:
                        type: array
                        items:
                          type: integer
                        description: All roles of the user across all surveys
                      gender:
                        type: string
                        description: Gender of the user
                      is_super_admin:
                        type: boolean
                        description: Super admin status for the user
                      can_create_survey:
                        type: boolean
                        description: Whether the user can create a survey
                      active:
                        type: boolean
                        description: Whether the user is active
                      is_survey_admin:
                        type: boolean
                        description: Whether the user is a survey admin if survey_uid is provided
                      location_uids:
                        type: array
                        items:
                          type: integer
                        description: List of unique IDs of the locations mapped to the user for a specific survey if survey_uid is provided. If survey_uid is not provided, it will be an empty array.
                      location_ids:
                        type: array
                        items:
                          type: integer
                        description: List of IDs of the locations mapped to the user for a specific survey if survey_uid is provided. If survey_uid is not provided, it will be an empty array.
                      location_names:
                        type: array
                        items:
                          type: string
                        description: Names of the locations mapped to the user for a specific survey if survey_uid is provided. If survey_uid is not provided, it will be an empty array.
                      languages:
                        type: array
                        items:
                          type: string
                        description: Languages mapped to the user for a specific survey if survey_uid is provided. If survey_uid is not provided, it will be an empty array.
        "403":
          description: X-CSRF-Token required in header
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  "/users":
    post:
      tags:
        - User Management
      summary: Endpoint to invite a user by email
      description: >-
        Requires JSON body with email, first name, last name, role, and
        is_super_admin.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                roles:
                  type: array
                  items:
                    type: integer
                gender:
                  type: string
                languages:
                  type: array
                  items:
                    type: string
                location_uids:
                  type: array
                  items:
                    type: integer
                is_super_admin:
                  type: boolean
                can_create_survey:
                  type: boolean
                is_survey_admin:
                  type: boolean
                survey_uid:
                  type: string
              required:
                - email
                - first_name
                - last_name
                - roles
                - is_super_admin
      responses:
        "200":
          description: user invited
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                  invite:
                    type: object
        "403":
          description: X-CSRF-Token required in header
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "422":
          description: User already exists with email
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    get:
      tags:
        - User Management
      summary: Endpoint to get information for all users
      description: Get all users for a super admin, use survey_uid for non admins to get users per survey
      parameters:
        - in: query
          name: survey_uid
          schema:
            type: integer
          required: false
          description: survey_uid to filter users
      responses:
        "200":
          description: User information for all users retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    email:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                    roles:
                      type: array
                      items:
                        type: integer
                    gender:
                      type: string
                    supervisor_uid:
                      type: integer
                      description: The unique ID of the supervisor
                    user_admin_survey_names:
                      type: list
                      items:
                        type: string
                      description: The names of the surveys the user is a survey admin of
                    user_survey_role_names:
                      type: list
                      items:
                        type: object
                        properties:
                          role_name:
                            type: string
                            description: The name of the role
                          survey_name:
                            type: string
                            description: The name of the survey
                    is_super_admin:
                      type: boolean
                    status:
                      type: string
                    location_uids:
                      type: array
                      items:
                        type: integer
                      description: List of unique IDs of the locations mapped to the user for a specific survey if survey_uid is provided. If survey_uid is not provided, it will be an empty array.
                    location_ids:
                      type: array
                      items:
                        type: integer
                      description: List of IDs of the locations mapped to the user for a specific survey if survey_uid is provided. If survey_uid is not provided, it will be an empty array.
                    location_names:
                      type: array
                      items:
                        type: string
                      description: Names of the locations mapped to the user for a specific survey if survey_uid is provided. If survey_uid is not provided, it will be an empty array.
                    languages:
                      type: array
                      items:
                        type: string
                      description: Languages mapped to the user for a specific survey if survey_uid is provided. If survey_uid is not provided, it will be an empty array.
        "400":
          description: Survey ID is required for non-super-admin users
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  "/users/complete-registration":
    post:
      tags:
        - User Management
      summary: Endpoint to complete user registration using an invite code
      description: "Requires JSON body with invite_code, new_password, and confirm_password."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                new_password:
                  type: string
                confirm_password:
                  type: string
              required:
                - invite_code
                - new_password
                - confirm_password
      responses:
        "200":
          description: registration completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "403":
          description: X-CSRF-Token required in header
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Invalid or expired invite code
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  "/users/{user_uid}":
    get:
      tags:
        - User Management
      summary: Endpoint to get information for a single user
      description: get user details for a single user
      parameters:
        - in: path
          name: user_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the user
      responses:
        "200":
          description: User information retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_uid:
                    type: integer
                  email:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  roles:
                    type: array
                    items:
                      type: integer
                  gender:
                    type: string
                  is_super_admin:
                    type: boolean
                  active:
                    type: boolean
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    put:
      tags:
        - User Management
      summary: Endpoint to edit a user's information
      description: >-
        Requires JSON body with email, first name, last name, roles, active and
        is_super_admin.
      parameters:
        - in: path
          name: user_uid
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                roles:
                  type: array
                  items:
                    type: integer
                gender:
                  type: string
                languages:
                  type: array
                  items:
                    type: string
                location_uids:
                  type: array
                  items:
                    type: integer
                is_super_admin:
                  type: boolean
                can_create_survey:
                  type: boolean
                is_survey_admin:
                  type: boolean
                survey_uid:
                  type: string
                active:
                  type: boolean
              required:
                - email
                - first_name
                - last_name
                - roles
                - is_super_admin
                - active
      responses:
        "200":
          description: User updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user_data:
                    type: object
        "403":
          description: X-CSRF-Token required in header
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      tags:
        - User Management
      summary: Endpoint to deactivate a user
      description: Deactivate a single user
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: path
          name: user_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the user

      responses:
        "200":
          description: User deactivated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: Error deactivating user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  "/user-locations":
    get:
      tags:
        - User Management
      summary: Get user location details for users with the lowest field supervisor role
      description: Get user location details for a survey and for a specific user if user_uid is provided
      parameters:
        - in: query
          name: survey_uid
          schema:
            type: string
          required: true
        - in: query
          name: user_uid
          schema:
            type: string
      responses:
        "200":
          description: User location details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: list
                    items:
                      type: object
                      properties:
                        user_uid:
                          type: integer
                          description: The unique ID of the user
                        user_name:
                          type: string
                          description: The name of the user
                        location_uid:
                          type: integer
                          description: The unique ID of the location
                        location_id:
                          type: integer
                          description: The ID of the location
                        location_name:
                          type: string
                          description: The name of the location
        "404":
          description: User locations not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      tags:
        - User Management
      summary: Update user locations
      description: Update user locations for a survey and user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_uid:
                  type: integer
                user_uid:
                  type: integer
                locations:
                  type: array
                  items:
                    type: integer
              required:
                - survey_uid
                - user_uid
                - locations
      responses:
        "200":
          description: User locations updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user_hierarchy:
                    type: object
        "403":
          description: X-CSRF-Token required in header
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
    delete:
      tags:
        - User Management
      summary: Delete user locations
      description: Delete user locations for a survey and user
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: query
          name: survey_uid
          schema:
            type: string
          required: true
          description: unique id for the survey
        - in: query
          name: user_uid
          schema:
            type: string
          required: true
          description: unique id for the user
      responses:
        "200":
          description: User locations deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: User locations not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  "/user-languages":
    get:
      tags:
        - User Management
      summary: Get user languages for users with the lowest field supervisor role
      description: Get user languages for a survey and for a specific user if user_uid is provided
      parameters:
        - in: query
          name: survey_uid
          schema:
            type: string
          required: true
        - in: query
          name: user_uid
          schema:
            type: string
      responses:
        "200":
          description: User languages retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: list
                    items:
                      type: object
                      properties:
                        user_uid:
                          type: integer
                          description: The unique ID of the user
                        user_name:
                          type: string
                          description: The name of the user
                        language:
                          type: string
                          description: The language of the user
        "404":
          description: User languages not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string        
  
  "/user-gender":
    get:
      tags:
        - User Management
      summary: Get user gender for users with the lowest field supervisor role
      description: Get user gender for a survey and for a specific user if user_uid is provided for users with the lowest field supervisor role
      parameters:
        - in: query
          name: survey_uid
          schema:
            type: string
          required: true
        - in: query
          name: user_uid
          schema:
            type: string
      responses:
        "200":
          description: User gender retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: list
                    items:
                      type: object
                      properties:
                        user_uid:
                          type: integer
                          description: The unique ID of the user
                        user_name:
                          type: string
                          description: The name of the user
                        gender:
                          type: string
                          description: Gender of the user
        "404":
          description: User gender data not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "422":
          description: Role hierarchy errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  
  /surveys:
    get:
      summary: Get surveys
      description: Returns information about surveys associated with the logged in user.
      tags:
        - Surveys
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: An array of surveys associated with the logged in user.
                    items:
                      type: object
                      properties:
                        survey_uid:
                          type: integer
                          description: The unique ID of the survey.
                        survey_id:
                          type: string
                          description: The ID of the survey.
                        survey_name:
                          type: string
                          description: The name of the survey.
                        project_name:
                          type: string
                          description: The name of the project that the survey belongs to.
                        survey_description:
                          type: string
                          description: A description of the survey.
                        surveying_method:
                          type: string
                          description: >-
                            The method of surveying, e.g. in-person, phone,
                            mixed-mode.
                        irb_approval:
                          type: string
                          description: >-
                            The status of the IRB approval, e.g. Yes, No,
                            Pending.
                        planned_start_date:
                          type: string
                          description: >-
                            The planned start date of the survey in ISO 8601
                            format.
                        planned_end_date:
                          type: string
                          description: >-
                            The planned end date of the survey in ISO 8601
                            format.
                        state:
                          type: string
                          description: "The state of the survey, e.g. Draft, Active, Past."
                        last_updated_at:
                          type: string
                          description: >-
                            The date and time that the survey was last updated
                            in ISO 8601 format.
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
        "404":
          description: No surveys found for the specified user or all users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating that no surveys were found.
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
    post:
      summary: Create a new survey
      tags:
        - Surveys
      description: >-
        Create a new survey with the basic information details. The survey_id
        must be unique.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_id:
                  type: string
                  example: AgriFieldneet
                  description: The unique identifier for the survey
                survey_name:
                  type: string
                  example: Agrifieldneet Main Survey Form
                  description: The name of the survey
                project_name:
                  type: string
                  example: AgriFieldneet Survey
                  description: The name of the project the survey belongs to
                survey_description:
                  type: string
                  example: "AgriFieldnet survey starting on 1st Jan, 2023"
                  description: A description of the survey
                surveying_method:
                  type: string
                  example: in-person
                  description: The method used to survey respondents
                  enum:
                    - phone
                    - in-person
                    - mixed-mode
                irb_approval:
                  type: string
                  example: Pending
                  description: The status of the Institutional Review Board (IRB) approval
                  enum:
                    - "Yes"
                    - "No"
                    - Pending
                planned_start_date:
                  type: string
                  example: "2023-01-01T00:00:00.000Z"
                  format: date
                  description: The planned start date for the survey
                planned_end_date:
                  type: string
                  example: "2023-06-30T00:00:00.000Z"
                  format: date
                  description: The planned end date for the survey
                config_status:
                  type: string
                  example: In Progress - Configuration
                  description: The status of the survey's configuration
                  enum:
                    - In Progress - Configuration
                    - In Progress - Backend Setup
                    - Done
                state:
                  type: string
                  example: Draft
                  description: The current state of the survey
                  enum:
                    - Draft
                    - Active
                    - Past
              required:
                - survey_id
                - survey_name
                - project_name
                - surveying_method
                - irb_approval
                - planned_start_date
                - planned_end_date
                - config_status
                - state
      responses:
        "201":
          description: The survey was created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: success
                      survey:
                        type: object
                        properties:
                          survey_uid:
                            type: integer
                            example: 19
                            description: >-
                              The database-assigned unique identifier for the
                              survey
                          survey_id:
                            type: string
                            example: AgriFieldnet
                            description: The unique identifier for the survey
                          survey_name:
                            type: string
                            example: Agrifieldnet Main Survey Form
                            description: The name of the survey
                          project_name:
                            type: string
                            example: AgriFieldnet Survey
                            description: The name of the project the survey belongs to
                          survey_description:
                            type: string
                            example: "AgriFieldnet survey starting on 1st Jan, 2023"
                            description: A description
                          surveying_method:
                            type: string
                            enum:
                              - phone
                              - in-person
                              - mixed-mode
                            example: in-person
                          irb_approval:
                            type: string
                            enum:
                              - "Yes"
                              - "No"
                              - Pending
                            example: Pending
                          planned_start_date:
                            type: string
                            format: date
                            example: "2023-01-01T00:00:00.000Z"
                          planned_end_date:
                            type: string
                            format: date
                            example: "2023-06-30T00:00:00.000Z"
                          config_status:
                            type: string
                            enum:
                              - In Progress - Configuration
                              - In Progress - Backend Setup
                              - Done
                            example: In Progress - Configuration
                          state:
                            type: string
                            enum:
                              - Draft
                              - Active
                              - Past
                            example: Draft
                          last_updated_at:
                            type: string
                            format: date-time
                            example: 2023-04-18T00:00:00.000Z
        "400":
          description: A survey with the same survey_id already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: survey_id already exists
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
  /surveys/<survey_uid>/basic-information:
    get:
      summary: Get basic information for a specific survey
      description: Returns basic information about a specific survey
      tags:
        - Surveys
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: Basic information related to a specific survey
                    items:
                      type: object
                      properties:
                        survey_uid:
                          type: integer
                          description: The unique ID of the survey.
                        survey_id:
                          type: string
                          description: The ID of the survey.
                        survey_name:
                          type: string
                          description: The name of the survey.
                        project_name:
                          type: string
                          description: The name of the project that the survey belongs to.
                        survey_description:
                          type: string
                          description: A description of the survey.
                        surveying_method:
                          type: string
                          description: >-
                            The method of surveying, e.g. in-person, phone,
                            mixed-mode.
                        irb_approval:
                          type: string
                          description: >-
                            The status of the IRB approval, e.g. Yes, No,
                            Pending.
                        planned_start_date:
                          type: string
                          description: >-
                            The planned start date of the survey in ISO 8601
                            format.
                        planned_end_date:
                          type: string
                          description: >-
                            The planned end date of the survey in ISO 8601
                            format.
                        state:
                          type: string
                          description: "The state of the survey, e.g. Draft, Active, Past."
                        last_updated_at:
                          type: string
                          description: >-
                            The date and time that the survey was last updated
                            in ISO 8601 format.
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
        "404":
          description: No surveys found for the specified user or all users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating that no surveys were found.
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
  /surveys/<survey_uid>/config-status:
    get:
      summary: Get configuration status for each module for a specific survey
      description: Returns module configuration status for a specific survey
      tags:
        - Surveys
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: Configuration status for a specific survey
                    items:
                      type: object
                      properties:
                        Basic information:
                          type: object
                          description: Status of basic information module of the survey
                          items:
                            type: object
                            properties:
                              status:
                                type: string
                                description: >-
                                  Configration Status (Not started/ In progress/
                                  Done)
                        Survey information:
                          type: array
                          description: >-
                            Status of modules in the survey information section
                            of the survey
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                description: >-
                                  Name of the module like SurveyCTO information,
                                  Field supervisor roles etc.
                              status:
                                type: string
                                description: >-
                                  Configration Status (Not started/ In progress/
                                  Done)
                        Module selection:
                          type: object
                          description: Status of module selection for the survey
                          items:
                            type: object
                            properties:
                              status:
                                type: string
                                description: >-
                                  Configration Status (Not started/ In progress/
                                  Done)
                        overall_status:
                          type: string
                          description: >-
                            Overall Status (In progress - Configuration/ In
                            Progress - Backend Setup/ Done)
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
        "404":
          description: No surveys found for the specified user or all users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating that no surveys were found.
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
  /modules:
    get:
      tags:
        - Module Selection
      summary: Get all modules
      description: Get a list of all modules
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        module_id:
                          type: integer
                          format: int64
                          description: ID of the module
                        name:
                          type: string
                          description: Name of the module
                        optional:
                          type: boolean
                          description: Indicates if the module is optional
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: No modules found.
  /module-status:
    post:
      tags:
        - Module Selection
      summary: Add selected modules for a particular survey
      description: >-
        Add selected modules for a particular survey, with a default
        config_status of `not started`.
      requestBody:
        description: JSON object containing survey ID and list of module IDs
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_id:
                  type: integer
                  description: ID of the survey to add module status for
                modules:
                  type: array
                  description: List of module IDs
                  example:
                    - 1
                    - 2
                    - 3
      responses:
        "200":
          description: Module added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful
                    example: true
                  message:
                    type: string
                    description: Module status added successfully
                    example: {}
        "400":
          description: Invalid request body or missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful
                    example: false
                  message:
                    type: string
                    description: Error message
                    example: Both survey_id and modules are required.
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
  "/modules/{module_id}/status/{survey_uid}":
    put:
      tags:
        - Module Selection
      summary: Update status of a module for a specific survey
      description: Update status of a module for a specific survey
      parameters:
        - in: path
          name: module_id
          schema:
            type: integer
          required: true
          description: The ID of the module to update the status for
        - in: path
          name: survey_uid
          schema:
            type: integer
          required: true
          description: The ID of the survey to update the status for
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config_status:
                  type: string
                  enum:
                    - Done
                    - In Progress
                    - Not Started
                    - Error
      responses:
        "200":
          description: Successfully updated module status for survey
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    example:
                      survey_uid: 1
                      module_id: 2
                      config_status: Done
        "400":
          description: >-
            Bad request. Either module_id or survey_uid or status missing in the
            request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Both module_id and survey_uid and status are required.
        "404":
          description: The requested module or survey was not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: The requested module or survey was not found
  "/module-status/{survey_uid}":
    get:
      tags:
        - Module Selection
      summary: Get module status for a survey
      description: |
        Returns the completion status of all modules for a given survey.
        - `survey_uid`: ID of the survey for which to retrieve module status.
        **Note**: If the survey ID is not found, a 404 error will be returned.
      parameters:
        - name: survey_uid
          in: path
          description: ID of the survey
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returns the completion status of all modules for a given survey.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: >-
                      List of modules and their completion status for the given
                      survey
                    items:
                      type: object
                      properties:
                        module_id:
                          type: integer
                          description: ID of the module
                        survey_uid:
                          type: integer
                          description: ID of the survey
                        config_status:
                          type: string
                          description: Completion status of the module for the given survey
                          enum:
                            - Done
                            - In Progress
                            - Not Started
                            - Error
        "404":
          description: The specified survey ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  message:
                    type: string
                    description: >-
                      Error message indicating that the specified survey ID was
                      not found.
  /forms:
    post:
      summary: Create a new form
      tags:
        - Forms
      description: Create a new form
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_uid:
                  type: string
                  description: The unique identifier for the survey
                form_name:
                  type: string
                  description: The name of the form to display as a label on the web app
                scto_form_id:
                  type: string
                  description: The form's SurveyCTO form ID
                tz_name:
                  type: string
                  description: >-
                    The timezone in which data collection will happen for the
                    form
                scto_server_name:
                  type: string
                  description: The SurveyCTO server name for the form
                encryption_key_shared:
                  type: boolean
                  description: >-
                    Whether the encryption key for the form has been shared with
                    the SurveyStream team
                server_access_role_granted:
                  type: boolean
                  description: >-
                    Whether the SurveyStream team has been granted access to the
                    SurveyCTO server for the form
                server_access_allowed:
                  type: boolean
                  description: >-
                    Whether the SurveyStream team has been granted access to the
                    SurveyCTO server for the form
                form_type:
                  type: string
                  description: >-
                    The type of form. Allowed values are 'parent', 'dq' and 'admin'
                parent_form_uid:
                  type: integer
                  description: >-
                    The form_uid of the parent form. Required if form_type is 'dq'. Must be null if form_type is 'parent'.
                dq_form_type:
                  type: string
                  description: >-
                    The type of DQ form. Allowed values are 'audioaudit', 'backcheck' and 'spotcheck'. Required if form_type is 'dq'. Must be null if form_type is 'parent' or 'admin'.
                admin_form_type:
                  type: string
                  description: >-
                    The type of admin form. Allowed values are 'bikelog' and 'account_details'. Required if form_type is 'admin'. Must be null if form_type is 'parent' or 'dq'.
              required:
                - survey_uid
                - scto_form_id
                - form_name
                - form_type
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey_uid:
                    type: string
                    description: The unique ID of the survey
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  form_name:
                    type: string
                    description: The name of the form
                  scto_form_id:
                    type: string
                    description: The form's SurveyCTO form ID
                  tz_name:
                    type: string
                    description: >-
                      The timezone in which data collection will happen for the
                      form
                  scto_server_name:
                    type: string
                    description: The SurveyCTO server name for the form
                  encryption_key_shared:
                    type: boolean
                    description: >-
                      Whether the encryption key for the form has been shared
                      with the SurveyStream team
                  server_access_role_granted:
                    type: boolean
                    description: >-
                      Whether the SurveyStream team has been granted access to
                      the SurveyCTO server for the form
                  server_access_allowed:
                    type: boolean
                    description: >-
                      Whether the SurveyStream team has been granted access to
                      the SurveyCTO server for the form
                  last_ingested_at:
                    type: string
                    description: >-
                      Date when form submissions were last ingested from
                      SurveyCTO in isoformat
                  form_type:
                    type: string
                    description: >-
                      The type of form. Allowed values are 'parent', 'dq' and 'admin'
                  parent_form_uid:
                    type: integer
                    description: >-
                      The form_uid of the parent form. Required if form_type is 'dq'. Must be null if form_type is 'parent'.
                  dq_form_type:
                    type: string
                    description: >-
                      The type of DQ form. Possible values are 'audioaudit', 'backcheck' and 'spotcheck'. Required if form_type is 'dq'. Will be null if form_type is 'parent' or 'admin'.
                  admin_form_type:
                    type: string
                    description: >-
                      The type of admin form. Possible values are 'bikelog' and 'account_details'. Required if form_type is 'admin'. Will be null if form_type is 'parent' or 'dq'.
        "400":
          description: >-
            A form with the same survey_uid and scto_form_id already exists, or
            a form with the same survey_uid and form_name already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the form could not be
                      created.
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
    get:
      summary: Get forms for a user
      description: >-
        Get the forms for the logged in user. Optionally, a
        `?survey_uid=<survey_uid>` query parameter can be provided to return
        forms for a specific survey.
      tags:
        - Forms
      parameters:
        - in: query
          name: survey_uid
          schema:
            type: integer
          required: false
          description: Unique ID of the survey to return forms for.
        - in: query
          name: form_type
          schema:
            type: string
          required: false
          description: >-
            The type of form. Allowed values are 'parent' and 'dq'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    survey_uid:
                      type: string
                      description: The unique ID of the survey
                    form_uid:
                      type: integer
                      description: The unique ID of the form
                    form_name:
                      type: string
                      description: The name of the form
                    scto_form_id:
                      type: string
                      description: The form's SurveyCTO form ID
                    tz_name:
                      type: string
                      description: >-
                        The timezone in which data collection will happen for
                        the form
                    scto_server_name:
                      type: string
                      description: The SurveyCTO server name for the form
                    encryption_key_shared:
                      type: boolean
                      description: >-
                        Whether the encryption key for the form has been shared
                        with the SurveyStream team
                    server_access_role_granted:
                      type: boolean
                      description: >-
                        Whether the SurveyStream team has been granted access to
                        the SurveyCTO server for the form
                    server_access_allowed:
                      type: boolean
                      description: >-
                        Whether the SurveyStream team has been granted access to
                        the SurveyCTO server for the form
                    last_ingested_at:
                      type: string
                      description: >-
                        Date when form submissions were last ingested from
                        SurveyCTO in isoformat
                    form_type:
                      type: string
                      description: >-
                        The type of form. Allowed values are 'parent', 'dq' and 'admin'
                    parent_form_uid:
                      type: integer
                      description: >-
                        The form_uid of the parent form. Required if form_type is 'dq'. Must be null if form_type is 'parent' or 'admin'.
                    dq_form_type:
                      type: string
                      description: >-
                        The type of DQ form. Possible values are 'audioaudit', 'backcheck' and 'spotcheck'. Required if form_type is 'dq'. Will be null if form_type is 'parent' or 'admin'.
                    admin_form_type:
                      type: string
                      description: >-
                        The type of admin form. Possible values are 'bikelog' and 'account_details'. Required if form_type is 'admin'. Will be null if form_type is 'parent' or 'dq'.
                    parent_scto_form_id:
                      type: string
                      description: >-
                        The SurveyCTO form ID of the parent form for a DQ form.
  "/forms/{form_uid}":
    get:
      summary: Get forms
      description: >-
        Return the information for the requested form. If path parameter is not
        provided, return all forms for the logged in user.
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
        - in: query
          name: survey_uid
          schema:
            type: integer
          required: false
          description: >-
            Unique ID of the survey to return forms for. Cannot be used in
            conjuction with the `form_uid` path parameter.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey_uid:
                    type: string
                    description: The unique ID of the survey
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  form_name:
                    type: string
                    description: The name of the form
                  scto_form_id:
                    type: string
                    description: The form's SurveyCTO form ID
                  tz_name:
                    type: string
                    description: >-
                      The timezone in which data collection will happen for the
                      form
                  scto_server_name:
                    type: string
                    description: The SurveyCTO server name for the form
                  encryption_key_shared:
                    type: boolean
                    description: >-
                      Whether the encryption key for the form has been shared
                      with the SurveyStream team
                  server_access_role_granted:
                    type: boolean
                    description: >-
                      Whether the SurveyStream team has been granted access to
                      the SurveyCTO server for the form
                  server_access_allowed:
                    type: boolean
                    description: >-
                      Whether the SurveyStream team has been granted access to
                      the SurveyCTO server for the form
                  last_ingested_at:
                    type: string
                    description: >-
                      Date when form submissions were last ingested from
                      SurveyCTO in isoformat
                  form_type:
                    type: string
                    description: >-
                      The type of form. Allowed values are 'parent', 'dq' and 'admin'
                  parent_form_uid:
                    type: integer
                    description: >-
                      The form_uid of the parent form. Required if form_type is 'dq'. Must be null if form_type is 'parent'.
                  dq_form_type:
                    type: string
                    description: >-
                      The type of DQ form. Possible values are 'audioaudit', 'backcheck' and 'spotcheck'. Required if form_type is 'dq'. Will be null if form_type is 'parent' or 'admin'.
                  admin_form_type:
                    type: string
                    description: >-
                      The type of admin form. Possible values are 'bikelog' and 'account_details'. Required if form_type is 'admin'. Will be null if form_type is 'parent' or 'dq'.
                  parent_scto_form_id:
                    type: string
                    description: >-
                      The SurveyCTO form ID of the parent form for a DQ form.
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
    put:
      summary: Update an existing form
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      description: Update an existing form
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The unique identifier for the form
                survey_uid:
                  type: string
                  description: The unique identifier for the survey
                form_name:
                  type: string
                  description: The name of the form to display as a label on the web app
                scto_form_id:
                  type: string
                  description: The form's SurveyCTO form ID
                tz_name:
                  type: string
                  description: >-
                    The timezone in which data collection will happen for the
                    form
                scto_server_name:
                  type: string
                  description: The SurveyCTO server name for the form
                encryption_key_shared:
                  type: boolean
                  description: >-
                    Whether the encryption key for the form has been shared with
                    the SurveyStream team
                server_access_role_granted:
                  type: boolean
                  description: >-
                    Whether the SurveyStream team has been granted access to the
                    SurveyCTO server for the form
                server_access_allowed:
                  type: boolean
                  description: >-
                    Whether the SurveyStream team has been granted access to the
                    SurveyCTO server for the form
                form_type:
                  type: string
                  description: >-
                    The type of form. Allowed values are 'parent', 'dq' and 'admin'
                parent_form_uid:
                  type: integer
                  description: >-
                    The form_uid of the parent form. Required if form_type is 'dq'. Must be null if form_type is 'parent'.
                dq_form_type:
                  type: string
                  description: >-
                    The type of DQ form. Allowed values are 'audioaudit', 'backcheck' and 'spotcheck'. Required if form_type is 'dq'. Must be null if form_type is 'parent' or 'admin'.
                admin_form_type:
                  type: string
                  description: >-
                    The type of admin form. Allowed values are 'bikelog' and 'account_details'. Required if form_type is 'admin'. Must be null if form_type is 'parent' or 'dq'.
              required:
                - survey_uid
                - scto_form_id
                - form_name
                - form_type
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey_uid:
                    type: string
                    description: The unique ID of the survey
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  form_name:
                    type: string
                    description: The name of the form
                  scto_form_id:
                    type: string
                    description: The form's SurveyCTO form ID
                  tz_name:
                    type: string
                    description: >-
                      The timezone in which data collection will happen for the
                      form
                  scto_server_name:
                    type: string
                    description: The SurveyCTO server name for the form
                  encryption_key_shared:
                    type: boolean
                    description: >-
                      Whether the encryption key for the form has been shared
                      with the SurveyStream team
                  server_access_role_granted:
                    type: boolean
                    description: >-
                      Whether the SurveyStream team has been granted access to
                      the SurveyCTO server for the form
                  server_access_allowed:
                    type: boolean
                    description: >-
                      Whether the SurveyStream team has been granted access to
                      the SurveyCTO server for the form
                  last_ingested_at:
                    type: string
                    description: >-
                      Date when form submissions were last ingested from
                      SurveyCTO in isoformat
                  form_type:
                    type: string
                    description: >-
                      The type of form. Allowed values are 'parent' and 'dq'
                  parent_form_uid:
                    type: integer
                    description: >-
                      The form_uid of the parent form. Required if form_type is 'dq'. Must be null if form_type is 'parent'.
                  dq_form_type:
                    type: string
                    description: >-
                      The type of DQ form. Possible values are 'audioaudit', 'backcheck' and 'spotcheck'. Required if form_type is 'dq'. Will be null if form_type is 'parent'.

        "403":
          description: X-CSRF-Token required in header
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
        "422":
          description: Form errors
    delete:
      summary: Delete a form
      description: Delete a form
      tags:
        - Forms
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      responses:
        "200":
          description: OK
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: Error message indicating that the specified form ID was not found.

  "/forms/{form_uid}/scto-question-mapping":
    get:
      summary: Get SurveyCTO question mapping for a form
      description: >-
        Return the SurveyCTO question mapping information for the requested
        form.  The SurveyCTO question mapping information is used to map
        SurveyStream variables to SurveyCTO questions.
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  survey_status:
                    type: string
                    description: The status of the survey
                  revisit_section:
                    type: string
                    description: The form's revisit section
                  enumerator_id:
                    type: string
                    description: The form's enumerator ID
                  dq_enumerator_id:
                    type: string
                    description: The enumerator ID for the enumerator being checked in the DQ form
                  target_id:
                    type: string
                    description: The form's target ID
                  locations:
                    type: object
                    description: >-
                      The mapping of SurveyStream variables to SurveyCTO
                      questions for the form locations
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
    post:
      summary: Create a SurveyCTO question mapping
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      description: Create a SurveyCTO question mapping
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The unique ID of the form
                survey_status:
                  type: string
                  description: The status of the survey
                revisit_section:
                  type: string
                  description: The form's revisit section
                enumerator_id:
                  type: string
                  description: The form's enumerator ID
                dq_enumerator_id:
                  type: string
                  description: The enumerator ID for the enumerator being checked in the DQ form. Required for DQ forms.
                target_id:
                  type: string
                  description: The form's target ID. Required for parent and DQ forms.
                locations:
                  type: object
                  description: >-
                    The mapping of SurveyStream variables to SurveyCTO questions
                    for the form locations
              required:
                - form_uid
                - enumerator_id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
        "422":
          description: DQ enumerator ID is required for DQ forms
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the DQ enumerator ID is
                      required for DQ forms.

    put:
      summary: Update an existing SurveyCTO question mapping
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      description: Update an existing SurveyCTO question mapping
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The unique ID of the form
                survey_status:
                  type: string
                  description: The status of the survey
                revisit_section:
                  type: string
                  description: The form's revisit section
                enumerator_id:
                  type: string
                  description: The form's enumerator ID
                dq_enumerator_id:
                  type: string
                  description: The enumerator ID for the enumerator being checked in the DQ form. Required for DQ forms.
                target_id:
                  type: string
                  description: The form's target ID. Required for parent and DQ forms.
                locations:
                  type: object
                  description: >-
                    The mapping of SurveyStream variables to SurveyCTO questions
                    for the form locations
              required:
                - form_uid
                - enumerator_id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  survey_status:
                    type: string
                    description: The status of the survey
                  revisit_section:
                    type: string
                    description: The form's revisit section
                  enumerator_id:
                    type: string
                    description: The form's enumerator ID
                  dq_enumerator_id:
                    type: string
                    description: The enumerator ID for the enumerator being checked in the DQ form
                  target_id:
                    type: string
                    description: The form's target ID
                  locations:
                    type: object
                    description: >-
                      The mapping of SurveyStream variables to SurveyCTO
                      questions for the form locations
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
        "422":
          description: DQ enumerator ID is required for DQ forms
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the DQ enumerator ID is
                      required for DQ forms.
    delete:
      summary: Delete an existing SurveyCTO question mapping
      tags:
        - Forms
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      description: Delete an existing SurveyCTO question mapping
      responses:
        "204":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
  "/forms/{form_uid}/scto-form-definition/refresh":
    post:
      summary: Refresh the SurveyCTO form definition
      tags:
        - Forms
      description: >-
        Refresh the SurveyCTO form definition from the SurveyCTO server and
        store it in the database.  The old form definition will be deleted and a
        new one created, which will increment the `question_uid` and `list_uid`.
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      responses:
        "200":
          description: OK
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
  "/forms/{form_uid}/scto-form-definition":
    get:
      summary: Get the SurveyCTO form definition for a form
      tags:
        - Forms
      description: Get the SurveyCTO form definition for a form
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
        - in: query
          name: include_repeat_groups
          schema:
            type: boolean
          required: false
          description: >-
            Whether to include repeat groups in the response. Default is
            false.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: object
                    description: The SurveyCTO form definition for the form
                    properties:
                      questions:
                        description: The SurveyCTO form questions from the `Survey` tab
                        type: array
                        items:
                          type: object
                          properties:
                            question_uid:
                              type: integer
                              description: ID of the question
                            form_uid:
                              type: integer
                              description: ID of the form
                            question_name:
                              type: string
                              description: Name of the question
                            question_type:
                              type: string
                              description: Type of the question
                            list_uid:
                              type: integer
                              description: ID of the choice list
                            is_repeat_group:
                              type: boolean
                              description: Indicates if the question is a repeat group
                      settings:
                        type: object
                        description: The SurveyCTO form settings from the `Settings` tab
                        properties:
                          form_uid:
                            type: integer
                            description: ID of the form
                          form_title:
                            type: string
                            description: Name of the form
                          version:
                            type: string
                            description: Version of the form
                          submission_url:
                            type: string
                            description: URL to submit the form to
                          public_key:
                            type: string
                            description: The form's public key
                          default_language:
                            type: string
                            description: The form's default language
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
    delete:
      summary: Delete an existing SurveyCTO form definition
      tags:
        - Forms
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      description: Delete an existing SurveyCTO form definition
      responses:
        "204":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
        "404":
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the specified form ID was
                      not found.
  /enumerators:
    get:
      summary: Get enumerators
      description: Return the logged in user's enumerators for the given form
      tags:
        - Enumerators
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
        - in: query
          name: enumerator_type
          schema:
            type: string
            enum:
              - monitor
              - supervisor
          description: Type of enumerators to return
          required: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        enumerator_id:
                          type: string
                          description: The ID of the enumerator
                        enumerator_uid:
                          type: integer
                          description: The unique ID of the enumerator
                        name:
                          type: string
                          description: The name of the enumerator
                        language:
                          type: string
                          description: The primary language of the enumerator
                        gender:
                          type: string
                          description: The gender of the enumerator
                        home_address:
                          type: string
                          description: The home address of the enumerator
                        mobile_primary:
                          type: string
                          description: The primary mobile number of the enumerator
                        custom_fields:
                          type: object
                          description: >-
                            The custom fields of the enumerator. Each key is the
                            user-defined label of the custom field and each
                            value is the value of the custom field.
                        form_uid:
                          type: integer
                          description: >-
                            The unique ID of the form that the enumerator was
                            uploaded to
                        surveyor_status:
                          type: string
                          enum:
                            - Active
                            - Temp. inactive
                            - Dropout
                          description: >-
                            The working status of the enumerator if they are a
                            surveyor on the form
                        surveyor_locations:
                          type: array
                          description: >-
                            The working geography of the enumerator if they are
                            a surveyor on the form.  Each array item is an
                            object of the form {`location_id`: _location_id_,
                            `location_name`:  _location_name_, `location_uid`:
                            __location_uid__, `geo_level_name`:
                            __geo_level_name__, `geo_level_uid`:
                            __geo_level_uid__} in descending order from highest 
                            to lowest level location down to the level of the
                            prime geo level the surveyor is mapped to. Will be
                            null if the surveyor is not mapped to a prime geo
                            level.
                          items:
                            type: object
                            properties:
                              location_id:
                                type: integer
                                description: The user-defined unique ID of the location
                              location_name:
                                type: string
                                description: The name of the location
                              geo_level_name:
                                type: string
                                description: The name of the geo level
                        monitor_status:
                          type: string
                          enum:
                            - Active
                            - Temp. inactive
                            - Dropout
                          description: >-
                            The working status of the enumerator if they are a
                            monitor on the form
                        monitor_locations:
                          type: array
                          description: >-
                            The working geography of the enumerator if they are
                            a monitor on the form.  Each array item is an object
                            of the form {`location_id`: _location_id_,
                            `location_name`:  _location_name_, `location_uid`:
                            __location_uid__, `geo_level_name`:
                            __geo_level_name__, `geo_level_uid`:
                            __geo_level_uid__} in descending order from highest 
                            to lowest level location down to the level of the
                            prime geo level the monitor is mapped to. Will be
                            null if the monitor is not mapped to a prime geo
                            level.
                          items:
                            type: object
                            properties:
                              location_id:
                                type: integer
                                description: The user-defined unique ID of the location
                              location_name:
                                type: string
                                description: The name of the location
                              geo_level_name:
                                type: string
                                description: The name of the geo level
        "400":
          description: Form ID is required
    post:
      summary: Upload a csv of new enumerators
      description: |
        Upload a csv of new enumerators to be added to the given form
      tags:
        - Enumerators
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                column_mapping:
                  type: object
                  description: >-
                    An object mapping the column names in the csv to the
                    corresponding enumerator properties
                  properties:
                    enumerator_id:
                      type: string
                      description: The column name of the enumerator ID
                    enumerator_type:
                      type: string
                      description: The column name of the enumerator type
                    name:
                      type: string
                      description: The column name of the enumerator's name
                    email:
                      type: string
                      description: The column name of the enumerator's email
                    mobile_primary:
                      type: string
                      description: >-
                        The column name of the enumerator's primary mobile
                        number
                    language:
                      type: string
                      description: The column name of the enumerator's primary language
                    home_address:
                      type: string
                      description: The column nmae of the enumerator's home address
                    gender:
                      type: string
                      description: The column name of the enumerator's gender
                    location_id_column:
                      type: string
                      description: >-
                        The column name of the enumerator's location ID. This is
                        the prime geo level location that the enumerator is
                        mapped to.
                    custom_fields:
                      type: array
                      description: >-
                        An array of custom fields to be added to the enumerator
                        object
                      items:
                        type: object
                        properties:
                          field_label:
                            type: string
                            description: The user-defined label of the custom field
                          column_name:
                            type: string
                            description: The column name of the custom field
                        required:
                          - field_label
                          - column_name
                  required:
                    - enumerator_id
                    - name
                    - email
                    - mobile_primary
                    - gender
                file:
                  type: string
                  format: Base64
                  description: >-
                    The csv file to be uploaded in base64 encoding

                    The csv must have a header row with the column names
                    specified in the `column_mapping` object.

                    **Notes**:  - The `enumerator_type` field can take values of
                      `monitor` or `supervisor`. If the enumerator is to be
                      assigned to multiple types, separate the values with a
                      semi-colon, e.g. `monitor;supervisor`.
                    - If enumerators are to be mapped by location, the 
                      `location_id_column` field contains the location ID of the
                      prime geo level location that the enumerator is mapped to.
                      The `prime_geo_level_uid` for the survey needs to be defined 
                      in the survey config at `POST /surveys`.
                mode:
                  type: string
                  enum:
                    - overwrite
                    - merge
                  description: >-
                    The mode of the upload. In 'overwrite' mode, all enumerators
                    with the provided form_uid from  the query parameter will be
                    removed and replaced with the new enumerators from  the CSV
                    file. In 'merge' mode, the new enumerators from the CSV will
                    be added to the existing ones.  Any existing records
                    included in the upload will also be updated.
              required:
                - column_mapping
                - file
                - mode
      responses:
        "200":
          description: Records added successfully
        "400":
          description: Query parameter errors
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Form not found
        "422":
          description: Form errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    description: >-
                      An object with information on errors related to the csv
                      file upload. Each key will only be present if there are
                      errors of that type.

                      In addition to the errors listed below, the `errors`
                      object may also contain errors related to an incorrectly
                      specified payload.
                    properties:
                      file_structure_errors:
                        type: array
                        description: >-
                          An array of errors in the file structure. Each array
                          item is a string containing the error message related
                          to an individual error.
                      column_mapping:
                        type: array
                        description: >-
                          An array of errors in the column. Each array item is a
                          string containing the error message related to an
                          individual error.
                      geo_level_hierarchy:
                        type: array
                        description: >-
                          An array of errors in the geo level hierarchy. Each
                          array item is a string containing the error message
                          related to an individual error.
                      record_errors:
                        type: object
                        description: >-
                          An object with information on validation errors in the
                          csv records.
                        properties:
                          summary:
                            type: object
                            description: >-
                              A summary of the validation errors in the csv
                              records
                            properties:
                              error_count:
                                type: integer
                                description: The total number of errors in the csv records
                              total_correct_rows:
                                type: integer
                                description: >-
                                  The total number of correct rows in the csv
                                  records
                              total_rows:
                                type: integer
                                description: The total number of rows in the csv records
                              total_rows_with_errors:
                                type: integer
                                description: >-
                                  The total number of rows with errors in the
                                  csv records
                          summary_by_error_type:
                            type: array
                            description: >-
                              An array of objects with information on validation
                              errors by error type in the csv records.
                            items:
                              type: object
                              properties:
                                error_count:
                                  type: integer
                                  description: >-
                                    The total number of errors of this type in
                                    the csv records
                                error_message:
                                  type: string
                                  description: The error message for this error type
                                error_type:
                                  type: string
                                  description: The error type
                                row_numbers_with_errors:
                                  type: array
                                  description: >-
                                    An array of row numbers with errors of this
                                    type in the csv records
                                  items:
                                    type: integer
                                    description: >-
                                      The row number with an error of this type
                                      in the csv records
                          invalid_records:
                            type: object
                            description: >-
                              An object with information on validation errors by
                              record in the csv records. This can be used to
                              identify the specific errors in each record and to
                              let users download a csv with the errors.
                            properties:
                              records:
                                type: array
                                description: >-
                                  An array of objects that represent the
                                  original records in the csv with the
                                  validation errors. A new `errors` field is
                                  added to each record that contains a
                                  semicolon-separated list of the validation
                                  errors for that record. A new `row_number`
                                  field is also added to each record that
                                  contains the row number of the record in the
                                  original csv.
                              ordered_columns:
                                type: array
                                description: >-
                                  An array of strings that represent the column
                                  names in the `records` array of objects in the
                                  order that they should  appear in a table or
                                  downloadable csv file.
                                items:
                                  type: string
                                  description: The column name in the csv
                  success:
                    type: boolean
                    description: Whether the upload was successful
    patch:
      summary: Bulk update enumerators for a provided set of fields
      description: >
        Bulk update enumerators for a provided set of fields. The enumerators to
        be updated are specified by their enumerator IDs. Only the fields
        specified in the request body will be updated. If a field is not
        specified, it will not be updated. Only personal details and custom
        fields can be updated can be updated through this endpoint. To bulk
        update enumerators' locations, use the `PUT
        /enumerators/roles/locations` endpoint.

        **Note:** Only fields that are defined in the enumerators column config
        table and set as `bulk_editable` can be updated via this endpoint. See
        the `PUT /enumerators/column-config` endpoint for more details.
      tags:
        - Enumerators
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enumerator_uids:
                  type: array
                  description: An array of enumerator UIDs of the enumerators to be updated
                  items:
                    type: integer
                    description: The enumerator UID of the enumerator to be updated
                form_uid:
                  type: integer
                  description: The form UID of the enumerators to be updated.
                patch_key_example:
                  description: >-
                    An example of the field name and value to be updated for the
                    enumerators. Multiple fields to be updated can be specified
                    in the same object. The field name must be the same as the
                    field name in the enumerator column config for the form and
                    set as `bulk_editable.` See the `PUT
                    /enumerators/column-config` for more details on defining the
                    column config for a form.
              required:
                - enumerator_uids
                - form_uid
      responses:
        "200":
          description: Enumerators updated successfully
        "400":
          description: Request errors
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Form not found
        "422":
          description: Form errors
  /enumerators/column-config:
    put:
      summary: Update the enumerators column config for a form
      description: >
        Update the column config for enumerators for a form. The column config
        defines the fields that are available for bulk editing via the `PATCH
        /enumerators` and `PUT /enumerators/roles/locations`` endpoints.
      tags:
        - Enumerators
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The form UID of the enumerators to be updated.
                column_config:
                  type: array
                  description: >-
                    An array of column config objects for the enumerators data.
                    Each object defines the column name, its type, and whether
                    it is bulk editable or not.

                    The location mapping column must be named
                    `prime_geo_level_location` and its enumerator_type must be
                    `location`.

                    The personal details columns must be named `enumerator_id`,
                    `name`, `email`, `mobile_primary`, `home_address`,
                    `language` and `gender` and their enumerator_types must be
                    `personal_details`.

                    The custom fields columns must match their corresponding
                    json keys in the `custom_fields` column of the `enumerators`
                    table and their enumerator_types must be `custom_field`.
                  items:
                    type: object
                    properties:
                      column_name:
                        type: string
                        description: The field name of the column
                      column_type:
                        type: string
                        description: >-
                          The field type of the column. Can be one of
                          `personal_details`, `custom_field`, or `location`.
                      bulk_editable:
                        type: boolean
                        description: Whether the field is bulk editable or not
                      column_source:
                        type: string
                        description: >-
                          column_name in input source, if csv input then column header
                          if scto output then question name.
                    required:
                      - column_name
                      - column_type
                      - bulk_editable
                      - column_source
              required:
                - form_uid
                - column_config
      responses:
        "200":
          description: Column config updated successfully
        "400":
          description: Request errors
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Form not found
        "422":
          description: Form errors
    get:
      summary: Get the enumerators column config for a form
      description: >
        Retrieve the file_columns configuration and location_columns for enumerators data associated with a specific form. 
        The file_columns defines the fields available for bulk editing via the `PATCH /enumerators` 
        and `PUT /enumerators/roles/locations` endpoints.
      tags:
        - Enumerators
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: The form UID of the enumerator column config to be retrieved.
          required: true
      responses:
        "200":
          description: Column config retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                  data:
                    type: object
                    properties:
                      file_columns:
                        type: array
                        description: An array of column config objects for the enumerators data.
                        items:
                          type: object
                          properties:
                            column_name:
                              type: string
                              description: The field name of the column
                            column_type:
                              type: string
                              description: >
                                The field type of the column. Can be one of
                                `personal_details`, `custom_field`, or `location`.
                            bulk_editable:
                              type: boolean
                              description: Whether the field is bulk editable or not.
                            column_source:
                              type: string
                              description: >-
                                column_name in input source, if csv input then column header
                                if scto output then question name.
                      location_columns:
                        type: array
                        description: An array of column config objects for the location columns.
                        items:
                          type: object
                          properties:
                            column_key:
                              type: string
                              description: The key for the location column.
                            column_label:
                              type: string
                              description: The label for the location column.
        "400":
          description: Request errors
        "404":
          description: Form not found
  /enumerators/roles/locations:
    put:
      summary: Bulk update the location mapping for enumerators for a form
      description: >
        Bulk update the location mapping for enumerators of a specific
        enumerator_type for a form. The location mapping defines the
        prime_geo_level location(s) that the enumerator is mapped to for a form.

        This method will replace the existing location mapping for the
        enumerators with the new location mapping provided in the request body.
        The existing location mapping for the enumerators can be dropped by
        providing `None` or an empty array as the `location_uids` value in the
        request body.

        In order for the location mapping to be bulk editable, the enumerators
        column configuration must have a `column_name` entry
        `prime_geo_level_location` with `column_type` of `location` and its
        `bulk_editable` value set to `True`. See the `PUT
        /enumerators/column-config` endpiont for more details on defining the
        enumerators column config for a form.
      tags:
        - Enumerators
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The form UID of the enumerators to be updated.
                enumerator_type:
                  type: string
                  description: >-
                    The enumerator_type of the enumerators to be updated. Can be
                    one of `monitor` or `surveyor`.
                enumerator_uids:
                  type: array
                  description: An array of enumerator UIDs of the enumerators to be updated
                  items:
                    type: integer
                    description: The enumerator UID of the enumerator to be updated
                location_uids:
                  type: array
                  description: >-
                    An array of location UIDs of the locations to be mapped to
                    the enumerators. Enumerators can be mapped to 0, 1, or many
                    locations.
                  items:
                    type: integer
                    description: The location UID of the location to be mapped
              required:
                - enumerator_uids
                - form_uid
                - enumerator_type
                - location_uids
      responses:
        "200":
          description: Location mapping updated successfully
        "400":
          description: Request errors
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Form not found
        "422":
          description: Form errors
  "/enumerators/{enumerator_uid}":
    get:
      summary: Get details of an enumerator
      description: >
        Get details of an enumerator by their unique ID.

        **Note**: This endpoint does not return information related to the
        enumerator's role (like surveyor, monitor, etc.) on different forms or
        the enumerator's mapping information for different forms. To get this
        information, use the `GET /enumerators` endpoint or the `GET
        /enumerators/{enumerator_uid}/roles` endpoint.
      tags:
        - Enumerators
      parameters:
        - in: path
          name: enumerator_uid
          schema:
            type: integer
          description: Unique ID of the enumerator
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: object
                    properties:
                      enumerator_id:
                        type: string
                        description: The user-assigned unique ID of the enumerator
                      enumerator_uid:
                        type: integer
                        description: The system-assigned unique ID of the enumerator
                      name:
                        type: string
                        description: The name of the enumerator
                      email:
                        type: string
                        description: The email of the enumerator
                      mobile_primary:
                        type: string
                        description: The primary mobile number of the enumerator
                      language:
                        type: string
                        description: The primary language of the enumerator
                      gender:
                        type: string
                        description: The gender of the enumerator
                      home_address:
                        type: string
                        description: The home address of the enumerator
                      custom_fields:
                        type: object
                        description: >-
                          Any non-standard fields that should be displayed for
                          the enumerator. The keys are the user-defined labels
                          of the custom fields.
    put:
      summary: Update an enumerator
      description: >
        Update an enumerator's details by their unique ID.

        **Note**: This endpoint does not update information related to the
        enumerator's role (like surveyor, monitor, etc.) on different forms or
        the enumerator's mapping information for different forms. To update this
        information, use the `/enumerators/{enumerator_uid}/roles` and
        `/enumerators/{enumerator_uid}/roles/locations` endpoints.
      tags:
        - Enumerators
      parameters:
        - in: path
          name: enumerator_uid
          schema:
            type: integer
          description: Unique ID of the enumerator
          required: true
      requestBody:
        description: >-
          The updated record as it should be saved in the database. Note that
          values should be provided even if they are not being updated,
          otherwise they will be set to null.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enumerator_id:
                  type: string
                  description: The user-assigned unique ID of the enumerator
                name:
                  type: string
                  description: The name of the enumerator
                email:
                  type: string
                  description: The email of the enumerator
                mobile_primary:
                  type: string
                  description: The primary mobile number of the enumerator
                language:
                  type: string
                  description: The language of the enumerator
                gender:
                  type: string
                  description: The gender of the enumerator
                home_address:
                  type: string
                  description: The home address of the enumerator
                custom_fields:
                  type: object
                  description: >-
                    Any non-standard fields that should be displayed for the
                    enumerator. The keys are the user-defined labels of the
                    custom fields.
              required:
                - enumerator_id
                - name
                - email
                - mobile_primary
                - gender
      responses:
        "200":
          description: Successfully updated
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Enumerator not found
        "422":
          description: Enumerator errors
  /enumerators/surveyor-stats:
    get:
      summary: Get surveyor level productivity stats
      description: >-
        Return surveyor level productivity stats for a given form
      tags:
        - Surveyor Stats
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: List of all surveyors and their productivity stats
                    items:
                      type: object
                      properties:
                        enumerator_id:
                          type: string
                          description: The ID of the surveyor
                        avg_num_submissions_per_day:
                          type: integer
                          description: The average number of submissions per day for the surveyor
                        avg_num_completed_per_day:
                          type: integer
                          description: The average number of completed submissions per day for the surveyor
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
    put:
      summary: Update surveyor productivity stats
      description: >-
        Update the surveyor productivity stats for the given form
      tags:
        - Surveyor Stats
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique ID of the form
                surveyor_stats:
                  type: array
                  description: >
                    List of all surveyors and their productivity stats
                  items:
                    type: object
                    properties:
                      enumerator_id:
                        type: string
                        description: The ID of the surveyor.
                      avg_num_submissions_per_day:
                        type: integer
                        description: The average number of submissions per day for the surveyor
                      avg_num_completed_per_day:
                        type: integer
                        description: The average number of completed submissions per day for the surveyor
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
        "500":
          description: An unexpected error occurred
  /enumerators/languages:
    get:
      summary: Get all languages
      description: >-
        Return all languages that are available for selection in the system
      tags:
        - Enumerators
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: List of all languages
                    items:
                      type: string
                      description: The name of the language
                    example: ["English", "French", "Spanish"]
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
        "404":
          description: No languages found for form_uid
  /assignments:
    get:
      summary: Get assignments
      description: Return the logged in user's assignment details for the given form
      tags:
        - Assignments
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: >
                      Targets with their assigned surveyors (if any)

                      Corresponds to the main table on the assignments tab of
                      the web app
                    items:
                      type: object
                      properties:
                        form_uid:
                          type: integer
                          description: The unique ID of the form
                        assigned_enumerator_id:
                          type: string
                          description: The ID of the surveyor
                        assigned_enumerator_uid:
                          type: integer
                          description: The unique ID of the surveyor
                        assigned_enumerator_name:
                          type: string
                          description: The name of the surveyor
                        assigned_enumerator_email:
                          type: string
                          description: The email of the surveyor
                        assigned_enumerator_mobile_primary:
                          type: string
                          description: The primary mobile number of the surveyor
                        assigned_enumerator_language:
                          type: string
                          description: The primary language of the surveyor
                        assigned_enumerator_gender:
                          type: string
                          description: The gender of the surveyor
                        assigned_enumerator_home_address:
                          type: string
                          description: The home address of the surveyor
                        assigned_enumerator_custom_fields:
                          type: object
                          description: >-
                            Any non-standard fields that should be displayed for
                            the surveyor
                        target_id:
                          type: string
                          description: The ID of the target
                        target_uid:
                          type: integer
                          description: The unique ID of the target
                        gender:
                          type: string
                          description: The gender of the target
                        language:
                          type: string
                          description: The primary language of the target
                        custom_fields:
                          type: object
                          description: >-
                            Any non-standard fields that should be displayed for
                            the target
                        target_assignable:
                          type: boolean
                          description: >-
                            Grouping of final_survey_status into assignable/not assignable
                            categories. Used to determine if the target is
                            assignable.
                        last_attempt_survey_status:
                          type: integer
                          description: >-
                            The survey status from the target's most recent
                            SurveyCTO submission
                        last_attempt_survey_status_label:
                          type: string
                          description: >-
                            The label corresponding to the last_attempt_survey_status
                            code
                        final_survey_status:
                          type: integer
                          description: >-
                            The final survey status of the target, calculated based on the survey status 
                            in its most recent SurveyCTO submission and the completed and refusal flags 
                            information
                        final_survey_status_label:
                          type: string
                          description: >-
                            The label corresponding to the final_survey_status
                            code
                        num_attempts:
                          type: integer
                          description: >-
                            The number of times the target has been attempted
                        refusal_flag:
                          type: boolean
                          description: >-
                            Whether the target has been flagged as a refusal
                        webapp_tag_color:
                          type: string
                          description: >-
                            The color that should be used to color the status
                            tag on the web flask_app
                        revisit_sections:
                          type: array
                          description: The revisit sections for the target
                          items:
                            type: string
                            description: Name of the revisit section for the target
                        scto_fields:
                          type: object
                          description: >-
                            The required fields from the target's most recent 
                            SurveyCTO submission
                        target_locations:
                          type: array
                          description: >-
                            An array of locations associated with the target.
                            Each array item is an object of the form
                            {`location`_id: _location_id_, `location`_name:
                            _location_name_} in descending order from highest to
                            lowest level location.
                        supervisors:
                          type: array
                          description: >-
                            An array of supervisors associated with each target in ascending order of 
                            their seniority. Only child supervisors of the logged in user as per user 
                            hierarchy are included in the array.
                          items:
                            type: object
                            properties:
                              role_name:
                                type: string
                                description: The name of the supervisor's role
                              role_uid:
                                type: integer
                                description: The system-assigned unique ID for the supervisor's role
                              supervisor_name:
                                type: string
                                description: The name of the supervisor
                              supervisor_email:
                                type: string
                                description: The email of the supervisor
        "422":
          description: >
            Form errors

            Any errors encountered in linking the targets to other location hierarchy levels or
            in mapping the targets to supervisors will be returned as an array under the `errors` 
            key in the response.

    post:
      summary: Upload a csv of assignments
      description: |
        Upload a csv of assignments to be added to the given form
      tags:
        - Assignments
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                column_mapping:
                  type: object
                  description: >-
                    An object mapping the column names in the csv to the
                    corresponding assignment fields
                  properties:
                    target_id:
                      type: string
                      description: The column name of the target ID
                    enumerator_id:
                      type: string
                      description: The column name of the enumerator ID
                  required:
                    - target_id
                    - enumerator_id
                file:
                  type: string
                  format: Base64
                  description: >-
                    The csv file to be uploaded in base64 encoding

                    The csv must have a header row with the column names
                    specified in the `column_mapping` object.
                mode:
                  type: string
                  enum:
                    - overwrite
                    - merge
                  description: >-
                    The mode of the upload. In 'overwrite' mode, all assignments
                    with the provided form_uid from  the query parameter will be
                    removed and replaced with the new assignments from  the CSV
                    file. In 'merge' mode, the new assignments from the CSV will
                    be added to the existing ones.  Any existing records
                    included in the upload will also be updated.
                validate_mapping:
                  type: boolean
                  default: false
                  description: >-
                    Whether to validate the mapping of targets/enumerators with
                    supervisors. If set to true, the endpoint will validate the
                    mapping of targets/enumerators with supervisors and return
                    any errors encountered in the mapping.
              required:
                - column_mapping
                - file
                - mode
      responses:
        "200":
          description: Records added successfully
        "400":
          description: Query parameter errors
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Form not found
        "422":
          description: Form errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    description: >-
                      An object with information on errors related to the csv
                      file upload. Each key will only be present if there are
                      errors of that type.

                      In addition to the errors listed below, the `errors`
                      object may also contain errors related to an incorrectly
                      specified payload.
                    properties:
                      file_structure_errors:
                        type: array
                        description: >-
                          An array of errors in the file structure. Each array
                          item is a string containing the error message related
                          to an individual error.
                      column_mapping:
                        type: array
                        description: >-
                          An array of errors in the column. Each array item is a
                          string containing the error message related to an
                          individual error.
                      record_errors:
                        type: object
                        description: >-
                          An object with information on validation errors in the
                          csv records.
                        properties:
                          summary:
                            type: object
                            description: >-
                              A summary of the validation errors in the csv
                              records
                            properties:
                              error_count:
                                type: integer
                                description: The total number of errors in the csv records
                              total_correct_rows:
                                type: integer
                                description: >-
                                  The total number of correct rows in the csv
                                  records
                              total_rows:
                                type: integer
                                description: The total number of rows in the csv records
                              total_rows_with_errors:
                                type: integer
                                description: >-
                                  The total number of rows with errors in the
                                  csv records
                          summary_by_error_type:
                            type: array
                            description: >-
                              An array of objects with information on validation
                              errors by error type in the csv records.
                            items:
                              type: object
                              properties:
                                error_count:
                                  type: integer
                                  description: >-
                                    The total number of errors of this type in
                                    the csv records
                                error_message:
                                  type: string
                                  description: The error message for this error type
                                error_type:
                                  type: string
                                  description: The error type
                                row_numbers_with_errors:
                                  type: array
                                  description: >-
                                    An array of row numbers with errors of this
                                    type in the csv records
                                  items:
                                    type: integer
                                    description: >-
                                      The row number with an error of this type
                                      in the csv records
                          invalid_records:
                            type: object
                            description: >-
                              An object with information on validation errors by
                              record in the csv records. This can be used to
                              identify the specific errors in each record and to
                              let users download a csv with the errors.
                            properties:
                              records:
                                type: array
                                description: >-
                                  An array of objects that represent the
                                  original records in the csv with the
                                  validation errors. A new `errors` field is
                                  added to each record that contains a
                                  semicolon-separated list of the validation
                                  errors for that record. A new `row_number`
                                  field is also added to each record that
                                  contains the row number of the record in the
                                  original csv.
                              ordered_columns:
                                type: array
                                description: >-
                                  An array of strings that represent the column
                                  names in the `records` array of objects in the
                                  order that they should  appear in a table or
                                  downloadable csv file.
                                items:
                                  type: string
                                  description: The column name in the csv
                      mapping_errors:
                        type: array
                        description: >-
                          An array of errors encountered in mapping targets/enumerators
                          with supervisors. Each array item is a string containing the 
                          error message related to an individual error.
                  success:
                    type: boolean
                    description: Whether the upload was successful
    put:
      summary: Update assignments
      description: >
        Update the mapping of enumerators to targets


        Each target can have 0 or 1 enumerators assigned to it, so assigning an
        enumerator to an already-assigned target will reassign (overwrite) the previous
        assignment


        To unassign an enumerator from a target, include the target_uid value
        and pass a null value for the enumerator_uid
      tags:
        - Assignments
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
                type: object
                properties:
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  assignments:
                    type: array
                    description: A list of target/enumerator pairs
                    items:
                      type: object
                      properties:
                        target_uid:
                          type: integer
                        enumerator_uid:
                          type: integer
                  validate_mapping:
                    type: boolean
                    default: false
                    description: >-
                      Whether to validate the mapping of targets/enumerators with
                      supervisors. If set to true, the endpoint will validate the
                      mapping of targets/enumerators with supervisors and return
                      any errors encountered in the mapping.
                required:
                  - form_uid
                  - assignments
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Enumerator or target not found
        "422":
          description: Form errors. Specific errors messages will be returned if ineligible/unassignable enumerators or targets are included in the request body.
      
  /assignments/enumerators:
    get:
      summary: Get enumerators eligible for assignment
      description: Return the logged in user's assignment-eligible enumerator details for the given form
      tags:
        - Assignments
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: >-
                      The assignable surveyors (status is not "Dropout").
                      Corresponds to the table on the assignments workflow screen on the
                      assignments tab of the web app.
                    items:
                      type: object
                      properties:
                        enumerator_id:
                          type: string
                          description: The ID of the enumerator
                        enumerator_uid:
                          type: integer
                          description: The unique ID of the enumerator
                        enumerator_name:
                          type: string
                          description: The name of the enumerator
                        language:
                          type: string
                          description: The primary language of the enumerator
                        gender:
                          type: string
                          description: The gender of the enumerator
                        home_address:
                          type: string
                          description: The home address of the enumerator
                        mobile_primary:
                          type: string
                          description: The primary mobile number of the enumerator
                        surveyor_status:
                          type: string
                          enum:
                            - Active
                            - Temp. inactive
                            - Dropout
                          description: The working status of the enumerator
                        custom_fields:
                          type: object
                          description: >-
                            The custom fields of the enumerator. Each key is the
                            user-defined label of the custom field and each value is the
                            value of the custom field.
                        enumerator_locations:
                          type: array
                          description: >-
                            An array of locations associated with the
                            enumerator (their working geography). Each array item is an object of the form
                            {`location`_id: _location_id_, `location`_name:
                            _location_name_} in descending order from highest to
                            lowest level location.
                        total_assigned_targets:
                          type: integer
                          description: Total assigned targets for the given survey
                        total_pending_targets:
                          type: integer
                          description: Total pending targets for the given survey
                        total_completed_targets:
                          type: integer
                          description: Total complete targets for the given survey
                        supervisors:
                          type: array
                          description: >-
                            An array of supervisors associated with the enumerator in 
                            ascending order of their seniority. Only child supervisors of 
                            the logged in user as per user hierarchy are included in the 
                            array.
                          items:
                            type: object
                            properties:
                              role_name:
                                type: string
                                description: The name of the supervisor's role
                              role_uid:
                                type: integer
                                description: The system-assigned unique ID for the supervisor's role
                              supervisor_name:
                                type: string
                                description: The name of the supervisor
                              supervisor_email:
                                type: string
                                description: The email of the supervisor
        "422":
          description: >
            Form errors

            Any errors encountered in mapping the surveyors to supervisors will be returned as 
            an array under the `errors` key in the response.                
  /assignments/targets:
    get:
      summary: Get targets for the logged in user for a form
      description: Return the logged in user's targets for the given form
      tags:
        - Targets
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        target_id:
                          type: string
                          description: The ID of the target
                        target_uid:
                          type: integer
                          description: The unique ID of the target
                        language:
                          type: string
                          description: The primary language of the target
                        gender:
                          type: string
                          description: The gender of the target
                        custom_fields:
                          type: object
                          description: >-
                            Any non-standard fields that should be displayed for
                            the target
                        location_uid:
                          type: integer
                          description: The unique ID of the target's location
                        target_locations:
                          type: array
                          description: >-
                            The geography of the target.  Each array item is an
                            object of the form {`location_id`: _location_id_,
                            `location_name`:  _location_name_, `location_uid`:
                            __location_uid__, `geo_level_name`:
                            __geo_level_name__, `geo_level_uid`:
                            __geo_level_uid__} in descending order from highest 
                            to lowest level location the target is location in.
                            Can be null if a location has not been specified for
                            the target.
                          items:
                            type: object
                            properties:
                              location_id:
                                type: integer
                                description: The user-defined unique ID of the location
                              location_name:
                                type: string
                                description: The name of the location
                              geo_level_name:
                                type: string
                                description: The name of the geo level
                        completed_flag:
                          type: boolean
                          description: >-
                            Whether the target has been marked as completed
                        refusal_flag:
                          type: boolean
                          description: >-
                            Whether the target has been flagged as a refusal
                        num_attempts:
                          type: integer
                          description: >-
                            The number of times the target has been attempted
                        last_attempt_survey_status:
                          type: integer
                          description: >-
                            The survey status from the target's most recent
                            SurveyCTO submission
                        last_attempt_survey_status_label:
                          type: string
                          description: >-
                            The label corresponding to the last_attempt_survey_status
                            code
                        final_survey_status:
                          type: integer
                          description: >-
                            The final survey status of the target, calculated based on the survey status 
                            in its most recent SurveyCTO submission and the completed and refusal flags 
                            information
                        final_survey_status_label:
                          type: string
                          description: >-
                            The label corresponding to the final_survey_status
                            code
                        target_assignable:
                          type: boolean
                          description: >-
                            Grouping of final_survey_status into assignable/not assignable
                            categories. Used to determine if the target is
                            assignable.
                        webapp_tag_color:
                          type: string
                          description: >-
                            The color that should be used to color the status
                            tag on the web flask_app
                        revisit_sections:
                          type: array
                          description: The revisit sections for the target
                          items:
                            type: string
                            description: Name of the revisit section for the target
                        scto_fields:
                          type: object
                          description: >-
                            The required fields from the target's most recent 
                            SurveyCTO submission
                        supervisors:
                          type: array
                          description: >-
                            An array of supervisors associated with the target in ascending order 
                            of their seniority. Only child supervisors of the logged in user as 
                            per user hierarchy are included in the array.
                          items:
                            type: object
                            properties:
                              role_name:
                                type: string
                                description: The name of the supervisor's role
                              role_uid:
                                type: integer
                                description: The system-assigned unique ID for the supervisor's role
                              supervisor_name:
                                type: string
                                description: The name of the supervisor
                              supervisor_email:
                                type: string
                                description: The email of the supervisor
        "422":
          description: >
            Form errors

            Any errors encountered in linking the targets to other location hierarchy levels or
            in mapping the targets to supervisors will be returned as an array under the `errors` 
            key in the response.
    

  /assignments/schedule-email:
    post:
      summary: Schedule assignment emails
      tags:
        - Assignments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                date:
                  type: string
                  format: date
                time:
                  type: string
                  format: time
                recipients:
                  type: array
                  items:
                    type: integer
                status:
                  type: string
                  enum: [queued, sent, failed]
              required:
                - email_config_uid
                - date
                - time
                - recipients
                - status
      responses:
        "201":
          description: Manual email trigger created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  success:
                    type: boolean

  /assignments/table-config:
    get:
      summary: Get table configuration
      description: >-
        Return the assignments module table configuration details for the given form
      tags:
        - Assignments Table Configuration
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
        - in: query
          name: filter_supervisors
          schema:
            type: boolean
          description: >-
            Whether to filter the supervisor columns based on the logged in user's
            hierarchy. Defaults to false. When set to true, only child supervisors
            of the logged in user as per user hierarchy are included in the response.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  assignments_main:
                    type: array
                    description: >
                      List of column groups and columns with labels and data
                      access keys

                      Corresponds to the main table on the assignments tab of
                      the web app
                    items:
                      type: object
                      properties:
                        group_label:
                          type: string
                          description: The label for the column group
                        columns:
                          type: array
                          description: An array of columns to display for this column group
                          items:
                            type: object
                            properties:
                              column_label:
                                type: string
                                description: The label for the column
                              column_key:
                                type: string
                                description: >-
                                  The column key that can be used to access the
                                  column records in the data response
                  assignments_surveyors:
                    type: array
                    description: >
                      List of column groups and columns with labels and data
                      access keys

                      Corresponds to the surveyors modal table on the
                      assignments tab of the web app
                    items:
                      type: object
                      properties:
                        group_label:
                          type: string
                          description: The label for the column group
                        columns:
                          type: array
                          description: An array of columns to display for this column group
                          items:
                            type: object
                            properties:
                              column_label:
                                type: string
                                description: The label for the column
                              column_key:
                                type: string
                                description: >-
                                  The column key that can be used to access the
                                  column records in the data response
                  assignments_review:
                    type: array
                    description: >
                      List of column groups and columns with labels and data
                      access keys

                      Corresponds to the assignments review modal table on the
                      assignments tab of the web app
                    items:
                      type: object
                      properties:
                        group_label:
                          type: string
                          description: The label for the column group
                        columns:
                          type: array
                          description: An array of columns to display for this column group
                          items:
                            type: object
                            properties:
                              column_label:
                                type: string
                                description: The label for the column
                              column_key:
                                type: string
                                description: >-
                                  The column key that can be used to access the
                                  column records in the data response
                  surveyors:
                    type: array
                    description: >
                      List of column groups and columns with labels and data
                      access keys

                      Corresponds to the main table on the surveyors tab of the
                      web app
                    items:
                      type: object
                      properties:
                        group_label:
                          type: string
                          description: The label for the column group
                        columns:
                          type: array
                          description: An array of columns to display for this column group
                          items:
                            type: object
                            properties:
                              column_label:
                                type: string
                                description: The label for the column
                              column_key:
                                type: string
                                description: >-
                                  The column key that can be used to access the
                                  column records in the data response
                  targets:
                    type: array
                    description: >
                      List of column groups and columns with labels and data
                      access keys

                      Corresponds to the main table on the targets tab of the
                      web app
                    items:
                      type: object
                      properties:
                        group_label:
                          type: string
                          description: The label for the column group
                        columns:
                          type: array
                          description: An array of columns to display for this column group
                          items:
                            type: object
                            properties:
                              column_label:
                                type: string
                                description: The label for the column
                              column_key:
                                type: string
                                description: >-
                                  The column key that can be used to access the
                                  column records in the data response
    put:
      summary: Update table configuration
      description: >-
        Update the assignments module table configuration details for the given form
      tags:
        - Assignments Table Configuration
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique ID of the form
                table_name:
                  type: string
                  enum:
                    - assignments_main
                    - assignments_surveyors
                    - assignments_review
                    - surveyors
                    - targets
                  description: Name of the table to be updated
                table_config:
                  type: array
                  description: >
                    List of column groups and columns with labels and data
                    access keys
                  items:
                    type: object
                    properties:
                      group_label:
                        type: string
                        description: The label for the column group
                      column_label:
                        type: string
                        description: The label for the column
                      column_key:
                        type: string
                        description: >-
                          The column key that can be used to access the
                          column records in the data response

                          Allowed values for `column_key` are:


                          "assignments_main": [
                              "target_uid",
                              "target_id",
                              "language",
                              "gender",
                              "custom_fields",
                              "assigned_enumerator_uid",
                              "assigned_enumerator_id",
                              "assigned_enumerator_name",
                              "assigned_enumerator_home_address",
                              "assigned_enumerator_language",
                              "assigned_enumerator_gender",
                              "assigned_enumerator_email",
                              "assigned_enumerator_mobile_primary",
                              "assigned_enumerator_custom_fields",
                              "completed_flag",
                              "refusal_flag",
                              "num_attempts",
                              "final_survey_status",
                              "final_survey_status_label",
                              "target_assignable",
                              "revisit_sections",
                              "target_locations",
                              "supervisors",
                          ]

                          "assignments_surveyors": [
                              "enumerator_uid",
                              "enumerator_id",
                              "name",
                              "email",
                              "mobile_primary",
                              "language",
                              "home_address",
                              "gender",
                              "custom_fields",
                              "surveyor_status",
                              "surveyor_locations",
                              "form_productivity",
                          ]

                          "assignments_review": [
                              "assigned_enumerator_name",
                              "prev_assigned_to",
                              "target_id",
                              "target_status",
                          ]

                          "surveyors": [
                              "enumerator_uid",
                              "enumerator_id",
                              "name",
                              "email",
                              "mobile_primary",
                              "language",
                              "gender",
                              "home_address",
                              "custom_fields",
                              "surveyor_status",
                              "surveyor_locations",
                              "supervisors",
                          ]

                          "targets": [
                              "target_uid",
                              "target_id",
                              "language",
                              "gender",
                              "custom_fields",
                              "completed_flag",
                              "refusal_flag",
                              "num_attempts",
                              "final_survey_status",
                              "final_survey_status_label",
                              "target_assignable",
                              "revisit_sections",
                              "target_locations",
                              "supervisors",
                          ]

                          Note that the following "special" column keys must be formatted as follows:

                          *Custom Fields*
                          custom_fields['<custom_field_label>'] e.g. custom_fields['Mobile No. Primary']
                          assigned_enumerator_custom_fields['<custom_field_label>'] e.g. assigned_enumerator_custom_fields['Mobile No. Primary']

                          *Locations*
                          surveyor_locations[<geo_level_index>].location_id or surveyor_locations[<geo_level_index>].location_name
                          target_locations[<geo_level_index>].location_id or target_locations[<geo_level_index>].location_name

                          Note that <geo_level_index> is the index (starting at zero) of the geo level in descending order. Take an example where 
                          the geo levels for the survey are District, Mandal, and Polling Station. The geo level index for District is 0, Mandal is 1, and Polling Station is 2.
                          So if you want to show the Mandal ID column in the surveyors table, you would set the column_key to surveyor_locations[1].location_id.

                          *Supervisors*
                          supervisors[<supervisor_index>].supervisor_name or supervisors[<supervisor_index>].supervisor_email

                          Note that <supervisor_index> is the index (starting at zero) of the supervisor in ascending order of their seniority. 
                          Take an example where roles defined in the system are Core User, Cluster Coordinator and Regional Coordinator. The supervisor 
                          index for Regional Coordinator is 0, Cluster Coordinator is 1, and Core User is 2. So if you want to show the Cluster Coordinator's 
                          name in the surveyors table, you would set the column_key to supervisors[1].supervisor_name.

                          *Form Productivity*
                          form_productivity.<scto_form_id>.total_assigned_targets
                          form_productivity.<scto_form_id>.total_pending_targets
                          form_productivity.<scto_form_id>.total_completed_targets

                          Note that <scto_form_id> is the SurveyCTO form ID of the form. This needs to be provided because productivity metrics are provided for each form in the given survey.

      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Enumerator or target not found
        "422":
          description: Form errors
  /assignments/table-config/available-columns:
    get:
      summary: Get available columns for table configuration
      description: >-
        Return the columns that can be included as part of the table configuration for the given form
      tags:
        - Assignments Table Configuration
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  assignments_main:
                    type: array
                    description: >
                      List of columns with labels and data
                      access keys

                      Corresponds to the main table on the assignments tab of
                      the web app
                    items:
                      type: object
                      properties:
                        column_label:
                          type: string
                          description: The label for the column
                        column_key:
                          type: string
                          description: >-
                            The column key that can be used to access the
                            column records in the data response
                  assignments_surveyors:
                    type: array
                    description: >
                      List of columns with labels and data
                      access keys

                      Corresponds to the surveyors modal table on the
                      assignments tab of the web app
                    items:
                      type: object
                      properties:
                        column_label:
                          type: string
                          description: The label for the column
                        column_key:
                          type: string
                          description: >-
                            The column key that can be used to access the
                            column records in the data response
                  assignments_review:
                    type: array
                    description: >
                      List of columns with labels and data
                      access keys

                      Corresponds to the assignments review modal table on the
                      assignments tab of the web app
                    items:
                      type: object
                      properties:
                        column_label:
                          type: string
                          description: The label for the column
                        column_key:
                          type: string
                          description: >-
                            The column key that can be used to access the
                            column records in the data response
                  surveyors:
                    type: array
                    description: >
                      List of columns with labels and data
                      access keys

                      Corresponds to the main table on the surveyors tab of the
                      web app
                    items:
                      type: object
                      properties:
                        column_label:
                          type: string
                          description: The label for the column
                        column_key:
                          type: string
                          description: >-
                            The column key that can be used to access the
                            column records in the data response
                  targets:
                    type: array
                    description: >
                      List of columns with labels and data
                      access keys

                      Corresponds to the main table on the targets tab of the
                      web app
                    items:
                      type: object
                      properties:
                        column_label:
                          type: string
                          description: The label for the column
                        column_key:
                          type: string
                          description: >-
                            The column key that can be used to access the
                            column records in the data response
  /module-questionnaire/{survey_uid}:
    get:
      tags:
        - Module Questionnaire
      summary: Get module questionnaire responses for a survey
      description: |
        Returns the module questionnaire responses for a given survey.
      parameters:
        - name: survey_uid
          in: path
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: >-
            Returns the saved responses for module questionnaire section for a
            given survey.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: >-
                      List of modules and their completion status for the given
                      survey
                    items:
                      type: object
                      properties:
                        survey_uid:
                          type: integer
                          description: The unique ID of the survey.
                        target_assignment_criteria:
                          type: array
                          description: >-
                            Array of selected criteria for target to enumerator
                            assignments
                          example:
                            - Location
                            - Gender
                        target_mapping_criteria:
                          type: array
                          description: >-
                            Array of selected criteria for supervisor to
                            target mapping
                          example:
                            - Location
                            - Gender
                        surveyor_mapping_criteria:
                          type: array
                          description: >-
                            Array of selected criteria for supervisor to
                            surveyor mapping
                          example:
                            - Location
                            - Gender
                        supervisor_hierarchy_exists:
                          type: boolean
                          description: Whether there is a hierarchy of supervisors
                        reassignment_required:
                          type: boolean
                          description: >-
                            Whether there will be reassignments during the
                            survey
                        assignment_process:
                          type: string
                          description: >-
                            Process used to perform the assignments of targets
                            to enumerators e.g. Random or Manual
                        supervisor_enumerator_relation:
                          type: string
                          description: >-
                            Mapping of supervisors to enumerators e.g. 1:many,
                            1:1 etc.
                        language_lacation_mapping:
                          type: boolean
                          description: Whether languages can be mapped via locations
        "404":
          description: The specified survey ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  message:
                    type: string
                    description: >-
                      Error message indicating that the specified survey ID was
                      not found.
    put:
      tags:
        - Module Questionnaire
      summary: Save module questionnaire responses for a survey
      description: >
        Saves the module questionnaire responses for a given survey to the
        database.
      parameters:
        - name: survey_uid
          in: path
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      requestBody:
        description: JSON object containing survey ID and list of module IDs
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_uid:
                  type: integer
                  description: The unique ID of the survey.
                target_assignment_criteria:
                  type: array
                  description: >-
                    Array of selected criteria for target to enumerator
                    assignments
                  example:
                    - Location
                    - Gender
                target_mapping_criteria:
                  type: array
                  description: >-
                    Array of selected criteria for supervisor to target
                    mapping
                  example:
                    - Location
                    - Gender
                surveyor_mapping_criteria:
                  type: array
                  description: >-
                    Array of selected criteria for supervisor to surveyor
                    mapping
                  example:
                    - Location
                    - Gender
                supervisor_hierarchy_exists:
                  type: boolean
                  description: Whether there is a hierarchy of supervisors
                reassignment_required:
                  type: boolean
                  description: Whether there will be reassignments during the survey
                assignment_process:
                  type: string
                  description: >-
                    Process used to perform the assignments of targets to
                    enumerators e.g. Random or Manual
                supervisor_enumerator_relation:
                  type: string
                  description: "Mapping of supervisors to enumerators e.g. 1:many, 1:1 etc."
                language_lacation_mapping:
                  type: boolean
                  description: Whether languages can be mapped via locations
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
  /roles:
    get:
      tags:
        - Roles
      summary: Get user roles for a survey
      description: |
        Returns the user roles for a given survey.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returns the user roles for a given survey.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: List of roles for the given survey
                    items:
                      type: object
                      properties:
                        role_uid:
                          type: integer
                          description: The unique ID of the role.
                        role_name:
                          type: string
                          description: The name of the role.
                        permissions:
                          type: array
                          description: An array of permissions for a role.
                        reporting_role_uid:
                          type: integer
                          description: >-
                            The unique role ID of role that supervises the given
                            role.
                        survey_uid:
                          type: integer
                          description: The unique ID of the given survey.
    put:
      tags:
        - Roles
      summary: Save the user roles for a survey
      description: >
        Saves the user roles for a given survey to the database. If a role_uid
        is provided, the role will be updated. If role_uid is `None`, a new role
        will be created. Existing roles in the database that are not in the
        payload (by `role_uid`) will be deleted.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      requestBody:
        description: JSON object containing the desired roles for the survey.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - roles
              properties:
                roles:
                  type: array
                  description: Full list of roles for the given survey
                  items:
                    type: object
                    required:
                      - role_uid
                      - role_name
                      - reporting_role_uid
                      - permissions
                    properties:
                      role_uid:
                        type: integer
                        nullable: true
                        description: >-
                          The unique ID of the role. If equal to None, a new
                          role will be created.
                      role_name:
                        type: string
                        nullable: false
                        description: The name of the role.
                      reporting_role_uid:
                        type: integer
                        nullable: true
                        description: >-
                          The unique role ID of role that supervises the given
                          role.
                      permissions:
                        type: array
                        nullable: true
                        description: List of permission_uid's for the role.
                validate_hierarchy:
                  type: boolean
                  description: >
                    Whether to validate the hierarchy of the roles. Set this as
                    true when updating the reporting_role_uid fields of the
                    roles.

                    This will check that the role hierarchy is a valid tree
                    structure.
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: >-
            Form errors Form errors When `validate_hierarchy` is set to true,
            any validation errors will be returned as an array under the
            `errors` key in the response.

  "/permissions":
    get:
      tags:
        - Permissions
      description: Get all permissions. Optionally, a
        `?survey_uid=<survey_uid>` query parameter can be provided to return
        permisions applicable for a specific survey based on modules selected.
      parameters:
        - in: query
          name: survey_uid
          schema:
            type: integer
          required: false
          description: Unique ID of the survey to return permissions for.
      responses:
        "200":
          description: Permissions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    permission_uid:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
    post:
      tags:
        - Permissions
      summary: Create permission
      description: Create a new permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name
                - description
      responses:
        "201":
          description: Permission created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  permission_uid:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
        "400":
          description: >-
            Name and description are required fields or Permission with this
            name already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  "/permissions/{permission_uid}":
    get:
      tags:
        - Permissions
      summary: Get permission details
      description: Get details of a specific permission
      parameters:
        - in: path
          name: permission_uid
          schema:
            type: integer
          required: true
          description: "Unique id for the permission"
      responses:
        "200":
          description: Permission details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  permission_uid:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
        "404":
          description: Permission not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      tags:
        - Permissions
      summary: Update permission
      description: Update a specific permission using a specific permission unique id
      parameters:
        - in: path
          name: permission_uid
          schema:
            type: integer
          required: true
          description: Unique id for the permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name
                - description
      responses:
        "200":
          description: Permission updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  permission_uid:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
        "400":
          description: >-
            Name and description are required fields or Updating to this name
            would violate uniqueness constraint
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Permission not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      tags:
        - Permissions
      summary: Delete permission
      description: Delete a specific permission using a specific permission unique id
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: path
          name: permission_uid
          schema:
            type: integer
          required: true
          description: "Unique id for ther permission"
      responses:
        "200":
          description: Permission deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Permission not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  "/user-hierarchy":
    get:
      tags:
        - User Hierarchy
      summary: Get user hierarchy details
      description: Get user hierarchy details for a survey and user
      parameters:
        - in: query
          name: survey_uid
          schema:
            type: string
          required: true
        - in: query
          name: user_uid
          schema:
            type: string
          required: true
      responses:
        "200":
          description: User hierarchy details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                  message:
                    type: string
        "404":
          description: User hierarchy not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      tags:
        - User Hierarchy
      summary: Update user hierarchy
      description: Update user hierarchy for a survey and user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_uid:
                  type: string
                user_uid:
                  type: string
                role_uid:
                  type: string
                parent_user_uid:
                  type: string
                X-CSRF-Token:
                  type: string
              required:
                - survey_uid
                - user_uid
                - role_uid
                - parent_user_uid
                - X-CSRF-Token
      responses:
        "200":
          description: User hierarchy updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user_hierarchy:
                    type: object
        "403":
          description: X-CSRF-Token required in header
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "422":
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
    delete:
      tags:
        - User Hierarchy
      summary: Delete user hierarchy
      description: Delete user hierarchy for a survey and user
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: query
          name: survey_uid
          schema:
            type: string
          required: true
          description: unique id for the survey
        - in: query
          name: user_uid
          schema:
            type: string
          required: true
          description: unique id for the user
      responses:
        "200":
          description: User hierarchy deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: User hierarchy not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /timezones:
    get:
      summary: Get the list of postgres timezones
      description: Get the list of postgres timezones
      tags:
        - Misc
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: List of postgres timezones
                    items:
                      type: object
                      description: Postgres timezone object
                      properties:
                        name:
                          type: string
                          description: Postgres timezone name
                        abbrev:
                          type: string
                          description: Postgres timezone abbreviation
                        utc_offset:
                          type: string
                          description: Postgres timezone UTC offset
  /locations/<survey_uid>/prime-geo-level:
    put:
      tags:
        - Locations
      summary: Save the prime geo level for a survey
      description: >
        Saves the prime geo levels for a given survey to the database.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      requestBody:
        description: JSON object containing the prime geo level for a survey
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - prime_geo_level_uid
              properties:
                prime_geo_level_uid:
                  type: integer
                  nullable: false
                  description: Unique Id of the location set as the prime geo level
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: >
            Form errors

            When `validate_hierarchy` is set to true, any validation errors will
            be returned as an array under the `errors` key in the response.

  /locations/geo-levels:
    get:
      tags:
        - Locations
      summary: Get geo levels for a survey
      description: |
        Returns the geo levels for a given survey.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returns the geo levels for a given survey.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: List of geo levels for the given survey
                    items:
                      type: object
                      properties:
                        geo_level_uid:
                          type: integer
                          description: The unique ID of the geo level.
                        geo_level_name:
                          type: string
                          description: The name of the geo level.
                        parent_geo_level_uid:
                          type: integer
                          description: >-
                            The unique ID of geo level that is the parent of the
                            given geo level.
                        survey_uid:
                          type: integer
                          description: The unique ID of the given survey.
    put:
      tags:
        - Locations
      summary: Save the geo levels for a survey
      description: >
        Saves the geo levels for a given survey to the database. If a
        geo_level_uid is provided, the geo level will be updated. If
        geo_level_uid is `None`, a new geo level will be created. Existing geo
        levels in the database that are not in the payload (by `geo_level_uid`)
        will be deleted.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      requestBody:
        description: JSON object containing the desired geo levels for the survey.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - geo_levels
              properties:
                geo_levels:
                  type: array
                  description: Full list of geo levels for the given survey
                  items:
                    type: object
                    properties:
                      geo_level_uid:
                        type: integer
                        nullable: true
                        description: >-
                          The unique ID of the geo level. If equal to None, a
                          new geo level will be created.
                      geo_level_name:
                        type: string
                        nullable: false
                        description: The name of the geo level.
                      parent_geo_level_uid:
                        type: integer
                        nullable: true
                        description: >-
                          The unique ID of geo level that is the parent of the
                          given geo level.
                validate_hierarchy:
                  type: boolean
                  description: >
                    Whether to validate the hierarchy of the geo levels. Set
                    this as true when updating the parent_geo_level_uid fields
                    of the geo levels.

                    This will check that the location type hierarchy is a valid
                    tree structure.
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: >
            Form errors

            When `validate_hierarchy` is set to true, any validation errors will
            be returned as an array under the `errors` key in the response.

  /locations:
    get:
      tags:
        - Locations
      summary: Get locations for a survey
      description: |
        Returns the locations for a given survey.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returns the locations for a given survey.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: object
                    properties:
                      ordered_columns:
                        type: array
                        description: >
                          List of columns to display in the table in the correct
                          order. 

                          These will be of the form [<geo level 1 name> ID, <geo
                          level 1 name> Name, <geo level 2 name> ID, <geo level
                          2 name> Name, ...]. 

                          For example, ["State ID", "State Name", "District ID",
                          "District Name", "Block ID", "Block Name"].

                          The order of geo levels will be descending from the
                          top level geo level to the lowest level geo level.

                          Will be empty if no geo levels have been configured
                          for the given survey.
                      records:
                        type: array
                        description: >
                          List of location objects for the given survey. Each
                          location object contains keys corresponding to the
                          columns in the `ordered_columns` array.

                          The columns are determined by the geo levels for the
                          given survey, so columns will vary from survey to
                          survey.

                          Will be empty of no geo levels or no locations have
                          been configured for the given survey.
        "500":
          description: >
            Error message indicating that the locations could not be retrieved.

            If the location type hierarchy is invalid, the `errors` key will
            contain a `geo_level_hierarchy` key with an error message string.
    post:
      tags:
        - Locations
      summary: Upload a locations CSV file for a survey
      description: >
        Upload a locations CSV file for a given survey to the database. A column
        mapping is required in the payload to map the columns in the CSV file to
        the geo levels for the given survey.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      requestBody:
        description: >-
          JSON object containing locations file content and geo level column
          mapping.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                geo_level_mapping:
                  type: array
                  description: >-
                    An array of objects mapping the columns in the CSV file to
                    the geo levels for the given survey.
                  items:
                    type: object
                    properties:
                      geo_level_uid:
                        type: integer
                        nullable: false
                        description: The unique ID of the geo level.
                      location_id_column:
                        type: string
                        nullable: false
                        description: >-
                          The name of the column in the CSV file that contains
                          the location id for the given geo level.
                      location_name_column:
                        type: integer
                        nullable: false
                        description: >-
                          The name of the column in the CSV file that contains
                          the location name for the given geo level.
                    required:
                      - geo_level_uid
                      - location_id_column
                      - location_name_column
                file:
                  type: string
                  description: Base64 encoded CSV file content
              required:
                - geo_level_mapping
                - file
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: >
            Form errors

            Validation errors for the geo level mapping will be returned as an
            array under the `geo_level_mapping` key in the `errors` key of the
            response.

            Validation errors for the file will be returned as an array under
            the `file` key in the `errors` key of the response.

            Validation errors for the location type hierarchy will be returned
            as an array under the `geo_level_hierarchy` key in the `errors` key
            of the response.

            Note that the file validation will only be run if the geo level
            mapping is valid.
    put:
      tags:
        - Locations
      summary: Append locations csv to existing locations database
      description: >
        Appends the locations csv to the existing locations data in database.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      requestBody:
        description: >-
          JSON object containing locations file content and geo level column
          mapping.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                geo_level_mapping:
                  type: array
                  description: >-
                    An array of objects mapping the columns in the CSV file to
                    the geo levels for the given survey.
                  items:
                    type: object
                    properties:
                      geo_level_uid:
                        type: integer
                        nullable: false
                        description: The unique ID of the geo level.
                      location_id_column:
                        type: string
                        nullable: false
                        description: >-
                          The name of the column in the CSV file that contains
                          the location id for the given geo level.
                      location_name_column:
                        type: integer
                        nullable: false
                        description: >-
                          The name of the column in the CSV file that contains
                          the location name for the given geo level.
                    required:
                      - geo_level_uid
                      - location_id_column
                      - location_name_column
                file:
                  type: string
                  description: Base64 encoded CSV file content
              required:
                - geo_level_mapping
                - file
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: >
            Form errors

            Validation errors for the geo level mapping will be returned as an
            array under the `geo_level_mapping` key in the `errors` key of the
            response.

            Validation errors for the file will be returned as an array under
            the `file` key in the `errors` key of the response.

            Validation errors for the location type hierarchy will be returned
            as an array under the `geo_level_hierarchy` key in the `errors` key
            of the response.

            Note that the file validation will only be run if the geo level
            mapping is valid.
  
  /locations/long:
    get:
      tags:
        - Locations
      summary: Get locations for a survey in long format
      description: |
        Returns the locations for a given survey in long format where each row is a location at a specific geo level
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
        - name: geo_level_uid
          in: query
          description: The unique ID of the geo level.
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Returns the locations for a given survey for a specific geo level if geo_level_uid parameter is provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: List of locations for the given survey
                    items:
                      type: object
                      properties:
                        geo_level_name:
                          type: string
                          description: The name of the geo level.
                        geo_level_uid:
                          type: integer
                          description: The unique ID of the geo level.
                        location_id:
                          type: string
                          description: The ID of the location.
                        location_name:
                          type: string
                          description: The name of the location.
                        location_uid:
                          type: integer
                          description: The unique ID of the location.
                        parent_geo_level_uid:
                          type: integer
                          description: >-
                            The unique ID of the parent geo level of the given
                            geo level.
                        parent_location_uid:
                          type: integer
                          description: >-
                            The unique ID of the parent location of the given
                            location.
        "500":
          description: >
            Error message indicating that the locations could not be retrieved.
  
  /locations/<int:location_uid>:
    put:
      tags:
          - Locations
      summary: Updates a location based on location_uid
      parameters:
        - in: path
          name: location_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the location
      requestBody:
        description: JSON object containing the location details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_uid:
                  type: integer
                  description: Unique ID of the survey
                location_name:
                  type: string
                  description: The name of the location
                location_uid:
                  type: string
                  description: The Unique ID of the location
                parent_location_uid:
                  type: integer
                  description: The unique ID of the parent location  

  /target-status-mapping:
    get:
      tags:
        - Target Status Mapping
      summary: Get target status mapping
      description: |
        Returns the target status mapping for a given form.
      parameters:
        - name: form_uid
          in: query
          description: The unique ID of a parent form.
          required: true
          schema:
            type: integer
        - name: surveying_method
          in: query
          description: The surveying method for the survey.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the target status mapping for a given form.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: List of target status mapping for the given survey
                    items:
                      type: object
                      properties:
                        survey_status:
                          type: integer
                          description: The unique ID of the survey status.
                        survey_status_label:
                          type: string
                          description: Label corresponding to the survey status.
                        completed_flag:
                          type: boolean
                          description: Boolean indicating if the survey status means survey for the target is complete.
                        refusal_flag:
                          type: boolean
                          description: Boolean indicating if the survey status means survey for the target has been refused.
                        target_assignable:
                          type: boolean
                          description: Boolean indicating if the survey status means target is assignable.
                        webapp_tag_color:
                          type: string
                          description: The color of the label tag when displayed on the webapp.

    put:
      tags:
        - Target Status Mapping
      summary: Save the target status mapping for a form
      description: >
        Saves the target status mapping for a given form to the database.
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        description: JSON object containing the target status mapping for the form.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - target_status_mapping
              properties:
                form_uid:
                  type: integer
                  description: Unique ID of the form
                target_status_mapping:
                  type: array
                  description: Full list of target status mapping for the given survey
                  items:
                    type: object
                    properties:
                      survey_status:
                        type: integer
                        nullable: true
                        description: >-
                          The unique ID of the survey status.
                      survey_status_label:
                        type: string
                        nullable: false
                        description: Label corresponding to the survey status.
                      completed_flag:
                        type: boolean
                        nullable: false
                        description: Boolean indicating if the survey status means survey for the target is complete.
                      refusal_flag:
                        type: boolean
                        nullable: false
                        description: Boolean indicating if the survey status means survey for the target has been refused.
                      target_assignable:
                        type: boolean
                        nullable: false
                        description: Boolean indicating if the survey status means target is assignable.
                      webapp_tag_color:
                        type: string
                        nullable: false
                        description: The color of the label tag when displayed on the webapp.
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
        "500":
          description: An unexpected error occurred

  /targets:
    get:
      summary: Get targets
      description: Return the logged in user's targets for the given form
      tags:
        - Targets
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
        - in: query
          name: page
          schema:
            type: integer
          description: >-
            The page number of the results to return. Results will be paginated
            only if `page` and `per_page` are both specified.
          required: false
        - in: query
          name: per_page
          schema:
            type: integer
          description: >-
            The number of results to return per page. Results will be paginated
            only if `page` and `per_page` are both specified.
          required: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        target_id:
                          type: string
                          description: The ID of the target
                        target_uid:
                          type: integer
                          description: The unique ID of the target
                        language:
                          type: string
                          description: The primary language of the target
                        gender:
                          type: string
                          description: The gender of the target
                        custom_fields:
                          type: object
                          description: >-
                            Any non-standard fields that should be displayed for
                            the target
                        location_uid:
                          type: integer
                          description: The unique ID of the target's location
                        target_locations:
                          type: array
                          description: >-
                            The geography of the target.  Each array item is an
                            object of the form {`location_id`: _location_id_,
                            `location_name`:  _location_name_, `location_uid`:
                            __location_uid__, `geo_level_name`:
                            __geo_level_name__, `geo_level_uid`:
                            __geo_level_uid__} in descending order from highest 
                            to lowest level location the target is location in.
                            Can be null if a location has not been specified for
                            the target.
                          items:
                            type: object
                            properties:
                              location_id:
                                type: integer
                                description: The user-defined unique ID of the location
                              location_name:
                                type: string
                                description: The name of the location
                              geo_level_name:
                                type: string
                                description: The name of the geo level
                        completed_flag:
                          type: boolean
                          description: >-
                            Whether the target has been marked as completed
                        refusal_flag:
                          type: boolean
                          description: >-
                            Whether the target has been flagged as a refusal
                        num_attempts:
                          type: integer
                          description: >-
                            The number of times the target has been attempted
                        last_attempt_survey_status:
                          type: integer
                          description: >-
                            The survey status from the target's most recent
                            SurveyCTO submission
                        last_attempt_survey_status_label:
                          type: string
                          description: >-
                            The label corresponding to the last_attempt_survey_status
                            code
                        final_survey_status:
                          type: integer
                          description: >-
                            The final survey status of the target, calculated based on the survey status 
                            in its most recent SurveyCTO submission and the completed and refusal flags 
                            information
                        final_survey_status_label:
                          type: string
                          description: >-
                            The label corresponding to the final_survey_status
                            code
                        target_assignable:
                          type: boolean
                          description: >-
                            Grouping of final_survey_status into assignable/not assignable
                            categories. Used to determine if the target is
                            assignable.
                        webapp_tag_color:
                          type: string
                          description: >-
                            The color that should be used to color the status
                            tag on the web flask_app
                        revisit_sections:
                          type: array
                          description: The revisit sections for the target
                          items:
                            type: string
                            description: Name of the revisit section for the target
                        scto_fields:
                          type: object
                          description: >-
                            The required fields from the target's most recent 
                            SurveyCTO submission
                        
                  paginate:
                    type: object
                    description: >-
                      Pagination details. Will only be included if `page` and
                      `per_page` are both specified in the query parameters.
                    properties:
                      page:
                        type: integer
                        description: The page number of the results
                      per_page:
                        type: integer
                        description: The number of results per page
                      count:
                        type: integer
                        description: The total number of results
                      pages:
                        type: integer
                        description: The total number of pages
        "400":
          description: Form ID is required
        "404":
          description: Invalid values for `page` or `per_page` query parameters
    post:
      summary: Upload a csv of targets
      description: |
        Upload a csv of new targets to be added to the given form
      tags:
        - Targets
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                column_mapping:
                  type: object
                  description: >-
                    An object mapping the column names in the csv to the
                    corresponding target properties
                  properties:
                    target_id:
                      type: string
                      description: The column name of the target ID
                    language:
                      type: string
                      description: The column name of the target's primary language
                    gender:
                      type: string
                      description: The column name of the target's gender
                    location_id_column:
                      type: string
                      description: >-
                        The column name of the target's location ID. This is the
                        bottom geo level location that the target is mapped to.
                    custom_fields:
                      type: array
                      description: >-
                        An array of custom fields to be added to the target
                        object
                      items:
                        type: object
                        properties:
                          field_label:
                            type: string
                            description: The user-defined label of the custom field
                          column_name:
                            type: string
                            description: The column name of the custom field
                        required:
                          - field_label
                          - column_name
                  required:
                    - target_id
                file:
                  type: string
                  format: Base64
                  description: >-
                    The csv file to be uploaded in base64 encoding

                    The csv must have a header row with the column names
                    specified in the `column_mapping` object.
                mode:
                  type: string
                  enum:
                    - overwrite
                    - merge
                  description: >-
                    The mode of the upload. In 'overwrite' mode, all targets
                    with the provided form_uid from  the query parameter will be
                    removed and replaced with the new targets from  the CSV
                    file. In 'merge' mode, the new targets from the CSV will
                    be added to the existing ones.  Any existing records
                    included in the upload will also be updated.
                load_successful:
                  type: boolean
                  default: False
                  description: >-
                    Whether in case of record level failures, load succesful 
                    records. The default behaviour is to fail upload for all 
                    records if validations for any record fails. If True, the
                    upload will load the successful records and return the
                    failed records in the response.
                load_from_scto:
                  type: boolean
                  default: False
                  description: >-
                    Whether to load the targets from SurveyCTO.
                    If True, the `file` parameter will be ignored.
                    Targets will be loaded from source defined in TargetConfig
              required:
                - column_mapping
                - file
                - mode
      responses:
        "200":
          description: Records added successfully
        "400":
          description: Query parameter errors
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Form not found
        "422":
          description: Form errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    description: >-
                      An object with information on errors related to the csv
                      file upload. Each key will only be present if there are
                      errors of that type.

                      In addition to the errors listed below, the `errors`
                      object may also contain errors related to an incorrectly
                      specified payload.
                    properties:
                      file_structure_errors:
                        type: array
                        description: >-
                          An array of errors in the file structure. Each array
                          item is a string containing the error message related
                          to an individual error.
                      column_mapping:
                        type: array
                        description: >-
                          An array of errors in the column. Each array item is a
                          string containing the error message related to an
                          individual error.
                      geo_level_hierarchy:
                        type: array
                        description: >-
                          An array of errors in the geo level hierarchy. Each
                          array item is a string containing the error message
                          related to an individual error.
                      record_errors:
                        type: object
                        description: >-
                          An object with information on validation errors in the
                          csv records.
                        properties:
                          summary:
                            type: object
                            description: >-
                              A summary of the validation errors in the csv
                              records
                            properties:
                              error_count:
                                type: integer
                                description: The total number of errors in the csv records
                              total_correct_rows:
                                type: integer
                                description: >-
                                  The total number of correct rows in the csv
                                  records
                              total_rows:
                                type: integer
                                description: The total number of rows in the csv records
                              total_rows_with_errors:
                                type: integer
                                description: >-
                                  The total number of rows with errors in the
                                  csv records
                          summary_by_error_type:
                            type: array
                            description: >-
                              An array of objects with information on validation
                              errors by error type in the csv records.
                            items:
                              type: object
                              properties:
                                error_count:
                                  type: integer
                                  description: >-
                                    The total number of errors of this type in
                                    the csv records
                                error_message:
                                  type: string
                                  description: The error message for this error type
                                error_type:
                                  type: string
                                  description: The error type
                                row_numbers_with_errors:
                                  type: array
                                  description: >-
                                    An array of row numbers with errors of this
                                    type in the csv records
                                  items:
                                    type: integer
                                    description: >-
                                      The row number with an error of this type
                                      in the csv records
                          invalid_records:
                            type: object
                            description: >-
                              An object with information on validation errors by
                              record in the csv records. This can be used to
                              identify the specific errors in each record and to
                              let users download a csv with the errors.
                            properties:
                              records:
                                type: array
                                description: >-
                                  An array of objects that represent the
                                  original records in the csv with the
                                  validation errors. A new `errors` field is
                                  added to each record that contains a
                                  semicolon-separated list of the validation
                                  errors for that record. A new `row_number`
                                  field is also added to each record that
                                  contains the row number of the record in the
                                  original csv.
                              ordered_columns:
                                type: array
                                description: >-
                                  An array of strings that represent the column
                                  names in the `records` array of objects in the
                                  order that they should  appear in a table or
                                  downloadable csv file.
                                items:
                                  type: string
                                  description: The column name in the csv
                  success:
                    type: boolean
                    description: Whether the upload was successful
    patch:
      summary: Bulk update targets for a provided set of fields
      description: >
        Bulk update targets for a provided set of fields. The targets to be
        updated are specified by their target IDs. Only the fields specified in
        the request body will be updated. If a field is not specified, it will
        not be updated. Only personal details and custom fields can be updated
        can be updated through this endpoint. To bulk update targets' locations,
        use the `PUT /targets/roles/locations` endpoint.

        **Note:** Only fields that are defined in the targets column config
        table and set as `bulk_editable` can be updated via this endpoint. See
        the `PUT /targets/column-config` endpoint for more details.
      tags:
        - Targets
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target_uids:
                  type: array
                  description: An array of target UIDs of the targets to be updated
                  items:
                    type: integer
                    description: The target UID of the target to be updated
                form_uid:
                  type: integer
                  description: The form UID of the targets to be updated.
                patch_key_example:
                  description: >-
                    An example of the field name and value to be updated for the
                    targets. Multiple fields to be updated can be specified in
                    the same object. The field name must be the same as the
                    field name in the target column config for the form and set
                    as `bulk_editable.` See the `PUT /targets/column-config` for
                    more details on defining the column config for a form.
              required:
                - target_uids
                - form_uid
      responses:
        "200":
          description: Targets updated successfully
        "400":
          description: Request errors
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Form not found
        "422":
          description: Form errors
    delete:
      summary: Delete targets
      description: Delete targets for given form_uid
      tags:
        - Targets
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  message:
                    type: string
                    description: Targets deleted
        "400":
          description: Form ID is required

   
  /targets/config:
    get:
      summary: Get the targets config for a form
      description: >
        Get the targets config for a form.
      tags:
        - Targets
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: The form UID of the target config to be updated.
          required: true
      responses:
        "200":
          description: Target config retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                  data:
                    type: object
                    properties:
                      form_uid:
                        type: integer
                        description: The form UID of the targets config
                      target_source:
                        type: string
                        description: The source of the targets- csv or scto
                      scto_input_type:
                        type: string
                        description: The type of SCTO input- form or dataset
                      scto_input_id:
                        type: string
                        description: The ID of the SCTO input, i.e. scto form id or dataset id
                      scto_encryption_flag:
                        type: boolean
                        description: The encryption flag for SCTO input- true or false\
                      targets_last_uploaded:
                        type: string
                        description: The timestamp of the last targets upload
                      preview_mode:
                        type: boolean
                        description: The preview mode flag for the targets, set true when dynamic targets are previewed via webapp
        "404":
          description: Target configuration not found for the form
    post:
      summary: Create the targets config for a form
      description: >
        Create the targets config for a form.
      tags:
        - Targets
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The form UID of the targets to be updated.
                target_source:
                  type: string
                  description: The source of the targets- csv or scto
                  values:
                    - csv
                    - scto
                scto_input_type:
                  type: string
                  description: The type of SCTO input- form or dataset
                  values:
                    - form
                    - dataset
                scto_input_id:
                  type: string
                  description: The ID of the SCTO input, i.e. scto form id or dataset id
                scto_encryption_flag:
                  type: boolean
                  description: The encryption flag for SCTO input- true or false
              required:
                - form_uid
                - target_source
      responses:
        "200":
          description: Target Config created successfully

    put:
      summary: Update the targets config for a form
      description: >
        Update the targets config for a form.
      tags:
        - Targets
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The form UID of the targets to be updated.
                target_source:
                  type: string
                  description: The source of the targets- csv or scto
                  values:
                    - csv
                    - scto
                scto_input_type:
                  type: string
                  description: The type of SCTO input- form or dataset
                  values:
                    - form
                    - dataset
                scto_input_id:
                  type: string
                  description: The ID of the SCTO input, i.e. scto form id or dataset id
                scto_encryption_flag:
                  type: boolean
                  description: The encryption flag for SCTO input- true or false
              required:
                - form_uid
                - target_source
      responses:
        "200":
          description: Target Config updated successfully
        "404":
          description: Target Config not found
  
  /targets/config/scto-columns:
    get:
      summary: Get surveycto input columns for targets
      description: Get surveycto input columns for targets.
      tags:
        - Targets
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
      responses:
        "200":
          description: Surveycto input columns retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: List of surveycto input columns
                    items:
                      type: string
    
    put:
      summary: Update surveycto input columns for targets
      description: >
        Update surveycto input columns for targets by
        refreshing target source form definition/dataset from surveycto
      tags:
        - Targets
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
      responses:
        "200":
          description: Surveycto input columns updated successfully
        "404":
          description: Form with form_uid={form_uid} not found
        "412":
          description: Refresh endpoint works only for target source set as scto
  /targets/column-config:
    put:
      summary: Update the targets column config for a form
      description: >
        Update the column config for targets for a form. The column config
        defines the fields that are available for bulk editing via the `PATCH
        /targets` endpoint  and specifies whether fields contain PII.
      tags:
        - Targets
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The form UID of the targets to be updated.
                column_config:
                  type: array
                  description: >-
                    An array of column config objects for the targets data. Each
                    object defines the column name, its type, and whether it is
                    bulk editable or not.

                    The location mapping column must be named
                    `bottom_geo_level_location` and its column_types must be
                    `location`.

                    The basic details columns must be named `target_id`,
                    `language` and `gender` and their column_types must be
                    `basic_details`.

                    The custom fields columns must match their corresponding
                    json keys in the `custom_fields` column of the `targets`
                    table and their column_types must be `custom_field`.
                  items:
                    type: object
                    properties:
                      column_name:
                        type: string
                        description: The field name of the column
                      column_type:
                        type: string
                        description: >-
                          The field type of the column. Can be one of
                          `basic_details`, `custom_field`, or `location`.
                      bulk_editable:
                        type: boolean
                        description: Whether the field is bulk editable or not
                    required:
                      - column_name
                      - column_type
                      - bulk_editable
                filters:
                  type: array
                  description: >-
                    An object containing the filter data for the Target config.
                    The filter data is used to filter the targets based on the
                    provided filter data.
                  items:
                    type: object
                    properties:
                      filter_group:
                        type: array
                        items:
                          type: object
                          properties:
                            variable_name:
                              type: string
                              example: "target_sample"
                            filter_operator:
                              type: string
                            filter_value:
                              type: string
              required:
                - form_uid
                - column_config
      responses:
        "200":
          description: Column config updated successfully
        "400":
          description: Request errors
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Form not found
        "422":
          description: Form errors
    get:
      summary: Get the targets column config for a form
      description: >
        Get the targets column config for a form. The column config defines the
        fields that are available for bulk editing via the `PATCH /targets`
        endpoint.
      tags:
        - Targets
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: The form UID of the target column config to be updated.
          required: true
      responses:
        "200":
          description: Column config retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful.
                  data:
                    type: object
                    properties:
                      file_columns:
                        type: array
                        description: An array of column config objects for the targets data.
                        items:
                          type: object
                          properties:
                            bulk_editable:
                              type: boolean
                              description: Whether the field is bulk editable or not.
                            column_name:
                              type: string
                              description: The field name of the column.
                            column_type:
                              type: string
                              description: >
                                The field type of the column. Can be one of
                                `basic_details`, `custom_fields`, or `location`.
                            contains_pii:
                              type: boolean
                              description: Whether the field contains PII or not.
                      location_columns:
                        type: array
                        description: An array of column config objects for the location columns.
                        items:
                          type: object
                          properties:
                            column_key:
                              type: string
                              description: The key for the location column.
                            column_label:
                              type: string
                              description: The label for the location column.
                      target_scto_filter_list:
                        type: array
                        description: >-
                          An object containing the filter data for the Target config.
                          The filter data is used to filter the targets based on the
                          provided filter data.
                        items:
                          type: object
                          properties:
                            filter_group:
                              type: array
                              items:
                                type: object
                                properties:
                                  variable_name:
                                    type: string
                                    example: "target_sample"
                                  filter_operator:
                                    type: string
                                  filter_value:
                                    type: string
        "400":
          description: Request errors
        "404":
          description: Form not found
  "/targets/{target_uid}":
    get:
      summary: Get details of an target
      description: |
        Get details of an target by their unique ID.
      tags:
        - Targets
      parameters:
        - in: path
          name: target_uid
          schema:
            type: integer
          description: Unique ID of the target
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: object
                    properties:
                      target_id:
                        type: string
                        description: The user-assigned unique ID of the target
                      target_uid:
                        type: integer
                        description: The system-assigned unique ID of the target
                      language:
                        type: string
                        description: The primary language of the target
                      gender:
                        type: string
                        description: The gender of the target
                      location_uid:
                        type: integer
                        description: The unique ID of the target's location
                      target_locations:
                        type: array
                        description: >-
                          The geography of the target.  Each array item is an
                          object of the form {`location_id`: _location_id_,
                          `location_name`:  _location_name_, `location_uid`:
                          __location_uid__, `geo_level_name`:
                          __geo_level_name__, `geo_level_uid`:
                          __geo_level_uid__} in descending order from highest 
                          to lowest level location the target is located in.

                          Can be null if a location has not been specified for
                          the target.
                        items:
                          type: object
                          properties:
                            location_id:
                              type: integer
                              description: The user-defined unique ID of the location
                            location_name:
                              type: string
                              description: The name of the location
                            geo_level_name:
                              type: string
                              description: The name of the geo level
                      custom_fields:
                        type: object
                        description: >-
                          Any non-standard fields that should be displayed for
                          the target. The keys are the user-defined labels of
                          the custom fields.
    put:
      summary: Update an target
      description: |
        Update a target's details by their unique ID.
      tags:
        - Targets
      parameters:
        - in: path
          name: target_uid
          schema:
            type: integer
          description: Unique ID of the target
          required: true
      requestBody:
        description: >-
          The updated record as it should be saved in the database. Note that
          values should be provided even if they are not being updated,
          otherwise they will be set to null.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target_id:
                  type: string
                  description: The user-assigned unique ID of the target
                language:
                  type: string
                  description: The language of the target
                gender:
                  type: string
                  description: The gender of the target
                location_uid:
                  type: integer
                  description: The unique ID of the target's location
                custom_fields:
                  type: object
                  description: >-
                    Any non-standard fields that should be displayed for the
                    target. The keys are the user-defined labels of the custom
                    fields.
              required:
                - target_id
                - language
                - gender
                - location_uid
                - custom_fields
      responses:
        "200":
          description: Successfully updated
        "403":
          description: X-CSRF-Token required in header
        "404":
          description: Target not found
        "422":
          description: Target errors
  /targets/target-status:
    put:
      summary: Update target status
      description: >-
        Update the target status for the given form containing details from 
        the last SurveyCTO submission for each target.
      tags:
        - Targets
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique ID of the form
                target_status:
                  type: array
                  description: >
                    List of all targets with a SurveyCTO submission and their submission stats 
                  items:
                    type: object
                    properties:
                      target_id:
                        type: string
                        description: The user-assigned unique ID of the target
                      completed_flag:
                        type: boolean
                        description: Whether the target has been marked as completed
                      refusal_flag:
                        type: boolean
                        description: Whether the target has been flagged as a refusal
                      num_attempts:
                        type: integer
                        description: The number of times the target has been attempted
                      last_attempt_survey_status:
                        type: integer
                        description: The survey status from the target's most recent SurveyCTO submission
                      last_attempt_survey_status_label:
                        type: string
                        description: The label corresponding to the last_attempt_survey_status code
                      final_survey_status:
                        type: integer
                        description: The final survey status of the target, calculated based on the survey status in its most recent SurveyCTO submission and the completed and refusal flags information
                      final_survey_status_label:
                        type: string
                        description: The label corresponding to the final_survey_status code
                      target_assignable:
                        type: boolean
                        description: Grouping of final_survey_status into assignable/not assignable categories. Used to determine if the target is assignable.
                      webapp_tag_color:
                        type: string
                        description: The color that should be used to color the status tag on the web flask_app
                      revisit_sections:
                        type: array
                        description: The revisit sections for the target
                        items:
                          type: string
                          description: Name of the revisit section for the target
                      scto_fields:
                        type: object
                        description: The required fields from the target's most recent SurveyCTO submission
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
        "500":
          description: An unexpected error occurred

  "/mapping/targets-mapping-config":
    get:
      summary: Get targets mapping configuration for a form
      description: >
        Returns the targets mapping configuration for a given form that is, how mapping criteria values of targets are mapped to mapping criteria values of supervisors and the status of the mapping for each mapping criteria value.
      tags:
        - Mapping
      parameters:
        - name: form_uid
          in: query
          description: The unique ID of a parent form.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returns the targets mapping config for a given form.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        config_uid:
                          type: integer
                          description: The unique ID of a custom targets mapping configuration. Value is null for auto mapped values.
                        target_mapping_criteria_values:
                          type: object
                          description: The target to supervisor mapping criteria values for the target
                          properties:
                            criteria:
                              type: object
                              description: Value for each target to supervisor mapping criteria for the target. Key is the criteria name (`Gender`, `Location`, `Language` or `Manual`) and value is the criteria value
                            other:
                              type: object
                              description: When Location is in the mapping criteria, this will have the `location_id` and `location_name`
                        target_count:
                          type: integer
                          description: The number of targets that match the target mapping criteria
                        supervisor_mapping_criteria_values:
                          type: object
                          description: The target to supervisor mapping criteria values for the supervisor
                          properties:
                            criteria:
                              type: object
                              description: Value for each target to supervisor mapping criteria for the supervisor. Key is the criteria name (`Gender`, `Location`, `Language` or `Manual`) and value is the criteria value
                            other:
                              type: object
                              description: When Location is in the mapping criteria, this will have the `location_id` and `location_name`
                        supervisor_count:
                          type: integer
                          description: The number of supervisors that match the supervisor mapping criteria
                        mapping_status:
                          type: string
                          description: The status of the mapping. Can be one of `Complete` or `Pending` depending on whether the mapping has been completed or not.
        "422":
          description: Mapping errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    description: >-
                      An object with information on errors related to mapping. 
                    properties:
                      mapping_errors:
                        type: array
                        description: >-
                          An array of errors encountered in mapping. Each array
                          item is a string containing the error message related
                          to an individual error.
    post:
      summary: Save the targets mapping configuration for a form
      description: >
        Saves the configuration for linking a mapping criteria 
        value of targets to a mapping criteria value of a supervisor.
      tags:
        - Mapping
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        description: JSON object containing the targets mapping configuration for the form.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique ID of the form
                mapping_config:
                  type: array
                  description: Full list mapping configurations
                  items:
                    type: object
                    properties:
                      mapping_values:
                        type: array
                        description: The target mapping criteria values
                        items:
                          type: object
                          properties:
                            criteria:
                              type: string
                              description: Mapping criteria. Can be one of "Gender", "Language", "Location", "Manual"
                            value:
                              type: string
                              description: The value of the target mapping criteria
                      mapped_to:
                        type: array
                        description: The supervisor mapping criteria values to which the target mapping criteria values will be mapped
                        items:
                          type: object
                          properties:
                            criteria:
                              type: string
                              description: Mapping criteria. Can be one of "Gender", "Language", "Location", "Manual"
                            value:
                              type: string
                              description: The corresponding value of the supervisor mapping criteria
              required:
                - form_uid
                - mapping_config
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
        "500":
          description: An unexpected error occurred
    delete:
      summary: Delete a specific custom targets mapping configuration for a form
      description: >
        Deletes a specific custom targets mapping configuration for a given form
      tags:
        - Mapping
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
        - in: query
          name: config_uid
          schema:
            type: integer
          description: >-
            Unique ID of the custom targets mapping configuration to be deleted
          required: true
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
        "500":
          description: An unexpected error occurred
  "/mapping/targets-mapping-config/reset":
    delete:
      summary: Resets the targets mapping configuration for a form
      description: >
        Deletes all the targets mapping, both criteria level as well as target level, for a given form from 
        the database. This resets the state to auto generated mappings based on the mapping criteria.
      tags:
        - Mapping
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
        "500":
          description: An unexpected error occurred
  
  "/mapping/targets-mapping":
    get:
      summary: Get target to supervisor mapping for a form
      description: |
        Returns the target to supervisor mapping for a given form.
      tags:
        - Mapping
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: The unique ID of a parent form.
          required: true
        - in: query
          name: page
          schema:
            type: integer
          description: >-
            The page number of the results to return. Results will be paginated only if `page` and `per_page` are both specified.
          required: false
        - in: query
          name: per_page
          schema:
            type: integer
          description: >-
            The number of results to return per page. Results will be paginated only if `page` and `per_page` are both specified.
          required: false
      responses:
        "200":
          description: Returns the target to supervisor mappings for a given form.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        target_uid:
                          type: integer
                          description: The system-assigned unique ID of the target
                        target_id:
                          type: string
                          description: The user-assigned unique ID of the target
                        gender:
                          type: string
                          description: The gender of the target
                        language:
                          type: string
                          description: The primary language of the target
                        location_id:
                          type: integer
                          description: The unique ID of the target's prime geo level location
                        location_name:
                          type: string
                          description: The name of the target's prime geo level location
                        target_mapping_criteria_values:
                          type: object
                          description: The target to supervisor mapping criteria values for the target
                          properties:
                            criteria:
                              type: object
                              description: Value for each target to supervisor mapping criteria for the target. Key is the criteria name (`Gender`, `Location`, `Language` or `Manual`) and value is the criteria value
                            other:
                              type: object
                              description: When Location is in the mapping criteria, this will have the `location_id` and `location_name`
                        supervisor_uid:
                          type: integer
                          description: The system-assigned unique ID of the supervisor
                        supervisor_email:
                          type: string
                          description: The email of the supervisor
                        supervisor_name:
                          type: string
                          description: The full name of the supervisor
                        supervisor_mapping_criteria_values:
                          type: object
                          description: The target to supervisor mapping criteria values for the supervisor
                          properties:
                            criteria:
                              type: object
                              description: Value for each target to supervisor mapping criteria for the supervisor. Key is the criteria name (`Gender`, `Location`, `Language` or `Manual`) and value is the criteria value
                            other:
                              type: object
                              description: When Location is in the mapping criteria, this will have the `location_id` and `location_name`
                  paginate:
                    type: object
                    description: >-
                      Pagination details. Will only be included if `page` and
                      `per_page` are both specified in the query parameters.
                    properties:
                      page:
                        type: integer
                        description: The page number of the results
                      per_page:
                        type: integer
                        description: The number of results per page
                      count:
                        type: integer
                        description: The total number of results
                      pages:
                        type: integer
                        description: The total number of pages
        "422":
          description: Mapping errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    description: >-
                      An object with information on errors related to mapping. 
                    properties:
                      mapping_errors:
                        type: array
                        description: >-
                          An array of errors encountered in mapping. Each array
                          item is a string containing the error message related
                          to an individual error.
    post:
      summary: Save the target to supervisor mappings for a form
      description: >
        Save the targets to supervisor mapping for a given form to the database.
      tags:
        - Mapping
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        description: JSON object containing the target to supervisor mapping for the form.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique ID of the form
                mappings:
                  type: array
                  description: List of target to supervisor mappings for the given survey
                  items:
                    type: object
                    properties:
                      target_uid:
                        type: integer
                        description: The system-assigned unique ID of the target
                      supervisor_uid:
                        type: integer
                        description: The system-assigned unique ID of the supervisor
              required:
                - form_uid
                - mappings
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
        "500":
          description: An unexpected error occurred 
  
  "/mapping/surveyors-mapping-config":
    get:
      summary: Get surveyors mapping configuration for a form
      description: >
        Returns the surveyors mapping configuration for a given form that is, how mapping criteria values of surveyors are mapped to mapping criteria values of supervisors and the status of the mapping for each mapping criteria value.
      tags:
        - Mapping
      parameters:
        - name: form_uid
          in: query
          description: The unique ID of a parent form.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Returns the surveyors mapping config for a given form.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        config_uid:
                          type: integer
                          description: The unique ID of a custom surveyors mapping configuration. Value is null for auto mapped values.
                        surveyor_mapping_criteria_values:
                          type: object
                          description: The surveyor to supervisor mapping criteria values for the surveyor
                          properties:
                            criteria:
                              type: object
                              description: Value for each surveyor to supervisor mapping criteria for the surveyor. Key is the criteria name (`Gender`, `Location`, `Language` or `Manual`) and value is the criteria value
                            other:
                              type: object
                              description: When Location is in the mapping criteria, this will have the `location_id` and `location_name`
                        surveyor_count:
                          type: integer
                          description: The number of surveyors that match the surveyor mapping criteria
                        supervisor_mapping_criteria_values:
                          type: object
                          description: The surveyor to supervisor mapping criteria values for the supervisor
                          properties:
                            criteria:
                              type: object
                              description: Value for each surveyor to supervisor mapping criteria for the supervisor. Key is the criteria name (`Gender`, `Location`, `Language` or `Manual`) and value is the criteria value
                            other:
                              type: object
                              description: When Location is in the mapping criteria, this will have the `location_id` and `location_name`
                        supervisor_count:
                          type: integer
                          description: The number of supervisors that match the supervisor mapping criteria
                        mapping_status:
                          type: string
                          description: The status of the mapping. Can be one of `Complete` or `Pending` depending on whether the mapping has been completed or not.
        "422":
          description: Mapping errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    description: >-
                      An object with information on errors related to mapping. 
                    properties:
                      mapping_errors:
                        type: array
                        description: >-
                          An array of errors encountered in mapping. Each array
                          item is a string containing the error message related
                          to an individual error.
    post:
      summary: Save the surveyors mapping configuration for a form
      description: >
        Saves the configuration for linking a mapping criteria 
        value of surveyors to a mapping criteria value of a supervisor.
      tags:
        - Mapping
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        description: JSON object containing the surveyors mapping configuration for the form.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique ID of the form
                mapping_config:
                  type: array
                  description: Full list mapping configurations
                  items:
                    type: object
                    properties:
                      mapping_values:
                        type: array
                        description: The surveyor mapping criteria values
                        items:
                          type: object
                          properties:
                            criteria:
                              type: string
                              description: Mapping criteria. Can be one of "Gender", "Language", "Location", "Manual"
                            value:
                              type: string
                              description: The value of the surveyor mapping criteria
                      mapped_to:
                        type: array
                        description: The supervisor mapping criteria values to which the surveyor mapping criteria values will be mapped
                        items:
                          type: object
                          properties:
                            criteria:
                              type: string
                              description: Mapping criteria. Can be one of "Gender", "Language", "Location", "Manual"
                            value:
                              type: string
                              description: The corresponding value of the supervisor mapping criteria
              required:
                - form_uid
                - mapping_config
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
        "500":
          description: An unexpected error occurred
    delete:
      summary: Delete a specific surveyors mapping configuration for a form
      description: >
        Deletes a specific custom surveyors mapping configuration for a given form
      tags:
        - Mapping
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
        - in: query
          name: config_uid
          schema:
            type: integer
          description: >-
            Unique ID of the custom surveyors mapping configuration to be deleted
          required: true
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
        "500":
          description: An unexpected error occurred
  "/mapping/surveyors-mapping-config/reset":
    delete:
      summary: Resets the surveyors mapping configuration for a form
      description: >
        Deletes all the surveyors mapping, both criteria level as well as surveyor level, for a given form from 
        the database. This resets the state to auto generated mappings based on the mapping criteria.
      tags:
        - Mapping
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
          required: true
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
        "500":
          description: An unexpected error occurred
  
  "/mapping/surveyors-mapping":
    get:
      summary: Get surveyor to supervisor mapping for a form
      description: |
        Returns the surveyor to supervisor mapping for a given form.
      tags:
        - Mapping
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: The unique ID of a parent form.
          required: true
        - in: query
          name: page
          schema:
            type: integer
          description: >-
            The page number of the results to return. Results will be paginated only if `page` and `per_page` are both specified.
          required: false
        - in: query
          name: per_page
          schema:
            type: integer
          description: >-
            The number of results to return per page. Results will be paginated only if `page` and `per_page` are both specified.
          required: false
      responses:
        "200":
          description: Returns the surveyor to supervisor mappings for a given form.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        enumerator_uid:
                          type: integer
                          description: The system-assigned unique ID of the surveyor
                        enumerator_id:
                          type: string
                          description: The user-assigned unique ID of the surveyor
                        name:
                          type: string
                          description: The full name of the surveyor
                        gender:
                          type: string
                          description: The gender of the surveyor
                        language:
                          type: string
                          description: The primary language of the surveyor
                        location_id:
                          type: array
                          description: List of unique IDs of the surveyor's prime geo level locations
                        location_name:
                          type: array
                          description: List of names of the surveyor's prime geo level locations
                        surveyor_mapping_criteria_values:
                          type: object
                          description: The surveyor to supervisor mapping criteria values for the surveyor
                          properties:
                            criteria:
                              type: object
                              description: Value for each surveyor to supervisor mapping criteria for the surveyor. Key is the criteria name (`Gender`, `Location`, `Language` or `Manual`) and value is the criteria value
                            other:
                              type: object
                              description: When Location is in the mapping criteria, this will have the `location_id` and `location_name`
                        supervisor_uid:
                          type: integer
                          description: The system-assigned unique ID of the supervisor
                        supervisor_email:
                          type: string
                          description: The email of the supervisor
                        supervisor_name:
                          type: string
                          description: The full name of the supervisor
                        supervisor_mapping_criteria_values:
                          type: object
                          description: The surveyor to supervisor mapping criteria values for the supervisor
                          properties:
                            criteria:
                              type: object
                              description: Value for each surveyor to supervisor mapping criteria for the supervisor. Key is the criteria name (`Gender`, `Location`, `Language` or `Manual`) and value is the criteria value
                            other:
                              type: object
                              description: When Location is in the mapping criteria, this will have the `location_id` and `location_name`
                  paginate:
                    type: object
                    description: >-
                      Pagination details. Will only be included if `page` and
                      `per_page` are both specified in the query parameters.
                    properties:
                      page:
                        type: integer
                        description: The page number of the results
                      per_page:
                        type: integer
                        description: The number of results per page
                      count:
                        type: integer
                        description: The total number of results
                      pages:
                        type: integer
                        description: The total number of pages
        "422":
          description: Mapping errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    description: >-
                      An object with information on errors related to mapping. 
                    properties:
                      mapping_errors:
                        type: array
                        description: >-
                          An array of errors encountered in mapping. Each array
                          item is a string containing the error message related
                          to an individual error.
    post:
      summary: Save the surveyor to supervisor mappings for a form
      description: >
        Save the surveyors to supervisor mapping for a given form to the database.
      tags:
        - Mapping
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        description: JSON object containing the surveyor to supervisor mapping for the form.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique ID of the form
                mappings:
                  type: array
                  description: List of surveyor to supervisor mappings for the given survey
                  items:
                    type: object
                    properties:
                      enumerator_uid:
                        type: integer
                        description: The system-assigned unique ID of the surveyor
                      supervisor_uid:
                        type: integer
                        description: The system-assigned unique ID of the supervisor
              required:
                - form_uid
                - mappings
      responses:
        "200":
          description: Success
        "403":
          description: X-CSRF-Token required in header
        "422":
          description: Form errors
        "500":
          description: An unexpected error occurred 

  /emails:
    get:
      tags:
        - emails
      summary: Get Email Configurations
      description: Retrieve email configurations for a specified form including related schedules and templates.
      parameters:
        - in: query
          name: form_uid
          required: true
          description: Form UID
          schema:
            type: integer
            example: 123
      responses:
        '200':
          description: Successful response with email configurations.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        email_config_uid:
                          type: integer
                          example: 123
                        config_name:
                          type: string
                          example: "assignments"
                        form_uid:
                          type: integer
                          example: 456
                        report_users:
                          type: array
                          items:
                            type: integer
                          example: [ 1, 2, 3 ]
                        email_source:
                          type: string
                          example: "SurveyStream Data"
                        email_source_gsheet_link:
                          type: string
                          example: "Link to Google sheet"
                        email_source_gsheet_tab:
                          type: string
                          example: "Sheet1"
                        email_source_tablename:
                          type: string
                          example: "some_table"
                        email_source_columns:
                          type: array
                          items:
                            type: string
                          example: [ "column1", "column2" ]
                        cc_user:
                          type: array
                          example: [1, 2, 3]
                        pdf_attachment:
                          type: boolean
                          example: true
                        pdf_encryption:
                          type: boolean
                          example: true
                        pdf_encryption_password_type:
                          type: string
                          example: "Password"
                        schedules:
                          type: array
                          items:
                            type: object
                            properties:
                              email_schedule_uid:
                                type: integer
                                example: 789
                              email_config_uid:
                                type: integer
                                example: 123
                              email_schedule_name:
                                type: string
                                example: "Morning"
                              dates:
                                type: array
                                items:
                                  type: string
                                  format: date
                                example: [ "2023-06-06", "2023-06-07" ]
                              time:
                                type: string
                                format: time
                                example: "12:00:00"
                              filter_list:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    table_name:
                                      type: string
                                      example: "Assignments"
                                    filter_list:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          filter_group:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                table_name:
                                                  type: string
                                                filter_variable:
                                                  type: string
                                                  example: "="
                                                filter_operator:
                                                  type: string
                                                filter_value:
                                                  type: string
                        templates:
                          type: array
                          items:
                            type: object
                            properties:
                              email_template_uid:
                                type: integer
                                example: 101
                              subject:
                                type: string
                                example: "Template Subject"
                              language:
                                type: string
                                example: "en"
                              content:
                                type: string
                                example: "Email template content here"
                              email_config_uid:
                                type: integer
                                example: 123
                        manual_triggers:
                          type: array
                          items:
                            type: object
                            properties:
                              manual_email_trigger_uid:
                                type: integer
                                example: 202
                              email_config_uid:
                                type: integer
                                example: 123
                              date:
                                type: string
                                format: date
                                example: "2023-06-06"
                              time:
                                type: string
                                format: time
                                example: "14:00:00"
                              recipients:
                                type: array
                                items:
                                  type: integer
                                example: [ 1, 2, 3 ]
                              status:
                                type: string
                                example: "queued"
        '404':
          description: Email configurations not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Email configs not found"

  /emails/config:
    post:
      tags:
        - emails
      summary: Create a new email config
      operationId: createEmailConfig
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: string
                  description: UID of the form
                  example: 123
                config_name:
                  type: string
                  description: Name of the email config
                  example: "assignments"
                report_users:
                  type: array
                  description: List of user UIDs to send the success/failure report of email
                  items:
                    type: string
                  example: [1,2,3]
                email_source:
                  type: string
                  description: Source of the email data
                  enum:
                    - Google Sheet
                    - SurveyStream Data
                email_source_gsheet_link:
                  type: string
                  description: Google Sheet Link
                  example: "https://docs.google.com/spreadsheets/d/1x1sTwmjUAhpZgBb0gi-hUOarfaVUfnElM7zItQr_jKs/edit#gid=0"
                email_source_gsheet_tab:
                  type: string
                  description: Google Sheet Tab name
                  example: "Sheet1"
                email_source_tablename:
                  type: string
                  description: Tablename for emails (Redshift email table), If not provided, default to assignments data
                  example: "survey_id_email_stats"
                cc_user:
                  type: array
                  description: List of user UIDs to CC the email
                  example: [1, 2, 3]
                pdf_attachment:
                  type: boolean
                  description: Whether to attach a PDF of tables to the email
                  example: true
                pdf_encryption:
                  type: boolean
                  description: Whether to encrypt the PDF attachment
                  example: true
                pdf_encryption_password_type:
                  type: string
                  description: Type of password to use for PDF encryption- Pattern or Password
                  example: "Password"
              required:
                - config_name
                - form_uid
                - email_source
      responses:
        "201":
          description: Email schedule created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      email_config_uid:
                        type: integer
                        description: UID of the email config
                        example: 123
                      config_name:
                        type: string
                        description: Name of the email config
                        example: "assignments"
                      form_uid:
                        type: integer
                        description: UID of the form
                        example: 123
                      report_users:
                        type: array
                        description: List of user UIDs to send the success/failure report of email
                        items:
                          type: string
                        example: [1,2,3]
                      email_source:
                        type: string
                        description: Source of the email data
                        enum:
                          - Google Sheet
                          - SurveyStream Data
                      email_source_gsheet_link:
                        type: string
                        description: Google Sheet Link
                        example: "https://docs.google.com/spreadsheets/d/1x1sTwmjUAhpZgBb0gi-hUOarfaVUfnElM7zItQr_jKs/edit#gid=0"
                      email_source_gsheet_tab:
                        type: string
                        description: Google Sheet Tab name
                        example: "Sheet1"
                      email_source_tablename:
                        type: string
                        description: Tablename for emails (Redshift email table), If not provided, default to assignments data
                        example: "survey_id_email_stats"
                      cc_user:
                        type: array
                        description: List of user UIDs to CC the email
                        example: [1, 2, 3]
                      pdf_attachment:
                        type: boolean
                        description: Whether to attach a PDF of tables to the email
                        example: true
                      pdf_encryption:
                        type: boolean
                        description: Whether to encrypt the PDF attachment
                        example: true
                      pdf_encryption_password_type:
                        type: string
                        description: Type of password to use for PDF encryption- Pattern or Password
                        example: "Password"
                required:
                  - success
                  - data
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Email Config already exists, Use PUT methood for update"
                required:
                  - error
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Internal Server Error"
                  message:
                    type: string
                    description: Description of the error
                    example: "An error occurred while creating the email config"
                required:
                  - error
                  - message

    get:
      tags:
        - emails
      summary: Get email schedules per form
      operationId: getEmailConfigs
      parameters:
        - in: query
          name: form_uid
          required: true
          description: Form UID
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        email_config_uid:
                          type: integer
                          description: UID of the email config
                          example: 123
                        config_name:
                          type: string
                          description: Name of the email config
                          example: "assignments"
                        form_uid:
                          type: integer
                          description: UID of the form
                          example: 123
                        report_users:
                          type: array
                          description: List of user UIDs to send the success/failure report of email
                          items:
                            type: string
                          example: [1,2,3]
                        email_source:
                          type: string
                          description: Source of the email data
                          enum:
                            - Google Sheet
                            - SurveyStream Data
                        email_source_gsheet_link:
                          type: string
                          description: Google Sheet Link
                          example: "https://docs.google.com/spreadsheets/d/1x1sTwmjUAhpZgBb0gi-hUOarfaVUfnElM7zItQr_jKs/edit#gid=0"
                        email_source_gsheet_tab:
                          type: string
                          description: Google Sheet Tab name
                          example: "Sheet1"
                        email_source_tablename:
                          type: string
                          description: Tablename for emails (Redshift email table), If not provided, default to assignments data
                          example: "survey_id_email_stats"
                        cc_user:
                          type: array
                          description: List of user UIDs to CC the email
                          example: [1, 2, 3]
                        pdf_attachment:
                          type: boolean
                          description: Whether to attach a PDF of tables to the email
                          example: true
                        pdf_encryption:
                          type: boolean
                          description: Whether to encrypt the PDF attachment
                          example: true
                        pdf_encryption_password_type:
                          type: string
                          description: Type of password to use for PDF encryption- Pattern or Password
                          example: "Password"             
                required:
                  - success
                  - data
        "404":
          description: Email configs not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Not Found"
                  message:
                    type: string
                    description: Description of the error
                    example: "Email configs not found"
                required:
                  - error
                  - message

  /emails/config/{email_config_uid}:
    get:
      tags:
        - emails
      summary: Get a particular email config given the email config UID
      operationId: getEmailConfig
      parameters:
        - in: path
          name: email_config_uid
          required: true
          description: Email Config UID
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      email_config_uid:
                        type: integer
                        description: UID of the email config
                        example: 123
                      config_name:
                        type: string
                        description: Name of the email config
                        example: "assignments"
                      form_uid:
                        type: integer
                        description: UID of the form
                        example: 123
                      report_users:
                        type: array
                        description: List of user UIDs to send the success/failure report of email
                        items:
                          type: string
                        example: [1,2,3]
                      email_source:
                        type: string
                        description: Source of the email data
                        enum:
                          - Google Sheet
                          - SurveyStream Data
                      email_source_gsheet_link:
                        type: string
                        description: Google Sheet Link
                        example: "https://docs.google.com/spreadsheets/d/1x1sTwmjUAhpZgBb0gi-hUOarfaVUfnElM7zItQr_jKs/edit#gid=0"
                      email_source_gsheet_tab:
                        type: string
                        description: Google Sheet Tab name
                        example: "Sheet1"
                      email_source_tablename:
                        type: string
                        description: Tablename for emails (Redshift email table), If not provided, default to assignments data
                        example: "survey_id_email_stats"
                      cc_user:
                        type: array
                        description: List of user UIDs to CC the email
                        example: [1, 2, 3]
                      pdf_attachment:
                        type: boolean
                        description: Whether to attach a PDF of tables to the email
                        example: true
                      pdf_encryption:
                        type: boolean
                        description: Whether to encrypt the PDF attachment
                        example: true
                      pdf_encryption_password_type:
                        type: string
                        description: Type of password to use for PDF encryption- Pattern or Password
                        example: "Password"
                required:
                  - success
                  - data
        "404":
          description: Email config not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Not Found"
                  message:
                    type: string
                    description: Description of the error
                    example: "Email config not found"
                required:
                  - error
                  - message
    put:
      tags:
        - emails
      summary: Update an email config
      operationId: updateEmailConfig
      parameters:
        - in: path
          name: email_config_uid
          required: true
          description: Email Config UID
          schema:
            type: integer
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config_name:
                  type: string
                  description: Name of the email config
                  example: "assignments"
                form_uid:
                  type: integer
                  description: UID of the form
                  example: 123
                report_users:
                  type: array
                  description: List of user UIDs to send the success/failure report of email
                  items:
                    type: string
                  example: [1,2,3]
                email_source:
                  type: string
                  description: Source of the email data
                  enum:
                    - Google Sheet
                    - SurveyStream Data
                email_source_gsheet_link:
                  type: string
                  description: Google Sheet Link
                  example: "https://docs.google.com/spreadsheets/d/1x1sTwmjUAhpZgBb0gi-hUOarfaVUfnElM7zItQr_jKs/edit#gid=0"
                email_source_gsheet_tab:
                  type: string
                  description: Google Sheet Tab name
                  example: "Sheet1"
                email_source_tablename:
                  type: string
                  description: Tablename for emails (Redshift email table), If not provided, default to assignments data
                  example: "survey_id_email_stats"
              required:
                - config_name
                - form_uid
      responses:
        "200":
          description: Email config updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Email config updated successfully"
                  data:
                    type: object
                    properties:
                      email_config_uid:
                        type: integer
                        description: UID of the email config
                        example: 123
                      config_name:
                        type: string
                        description: Name of the email config
                        example: "assignments"
                      form_uid:
                        type: integer
                        description: UID of the form
                        example: 123
                      report_users:
                        type: array
                        description: List of user UIDs to send the success/failure report of email
                        items:
                          type: string
                        example: [1,2,3]
                      email_source:
                        type: string
                        description: Source of the email data
                        enum:
                          - Google Sheet
                          - SurveyStream Data
                      email_source_gsheet_link:
                        type: string
                        description: Google Sheet Link
                        example: "https://docs.google.com/spreadsheets/d/1x1sTwmjUAhpZgBb0gi-hUOarfaVUfnElM7zItQr_jKs/edit#gid=0"
                      email_source_gsheet_tab:
                        type: string
                        description: Google Sheet Tab name
                        example: "Sheet1"
                      email_source_tablename:
                        type: string
                        description: Tablename for emails (Redshift email table), If not provided, default to assignments data
                        example: "survey_id_email_stats"
                      cc_user:
                        type: array
                        description: List of user UIDs to CC the email
                        example: [1, 2, 3]
                      pdf_attachment:
                        type: boolean
                        description: Whether to attach a PDF of tables to the email
                        example: true
                      pdf_encryption:
                        type: boolean
                        description: Whether to encrypt the PDF attachment
                        example: true
                      pdf_encryption_password_type:
                        type: string
                        description: Type of password to use for PDF encryption- Pattern or Password
                        example: "Password"
                required:
                  - success
                  - message
                  - data
        "404":
          description: Email config not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Not Found"
                  message:
                    type: string
                    description: Description of the error
                    example: "Email config not found"
                required:
                  - error
                  - message
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Internal Server Error"
                  message:
                    type: string
                    description: Description of the error
                    example: "An error occurred while updating the email config"
                required:
                  - error
                  - message
    delete:
      tags:
        - emails
      summary: Delete an email config
      operationId: deleteEmailConfig
      parameters:
        - in: path
          name: email_config_uid
          required: true
          description: Email Config UID
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: Email config deleted successfully

  /emails/schedule:
    post:
      summary: Create a new email schedule
      tags:
        - Emails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                email_schedule_name:
                  type: string
                dates:
                  type: array
                  items:
                    type: string
                    format: date
                time:
                  type: string
                  format: time
                filter_list:
                  type: array
                  items:
                    type: object
                    properties:
                      filter_group:
                        type: array
                        items:
                          type: object
                          properties:
                            table_name:
                              type: string
                            filter_variable:
                              type: string
                            filter_operator:
                              type: string
                            filter_value:
                              type: string
              required:
                - email_config_uid
                - dates
                - time
      responses:
        "201":
          description: Email schedule created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  email_schedule_name:
                    type: string
                  dates:
                    type: array
                    items:
                      type: string
                      format: date
                  time:
                    type: string
                    format: time
                  filter_list:
                    type: array
                    items:
                      type: object
                      properties:
                        filter_group:
                          type: array
                          items:
                            type: object
                            properties:
                              table_name:
                                type: string                        
                              filter_variable:
                                type: string
                              filter_operator:
                                type: string
                              filter_value:
                                type: string
                required:
                  - email_config_uid
                  - dates
                  - time
    get:
      summary: Get email schedules for a specific config
      tags:
        - Emails
      parameters:
        - name: email_config_uid
          in: query
          description: Unique identifier for the config
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Email schedules retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    email_config_uid:
                      type: integer
                    email_schedule_name:
                      type: string
                    dates:
                      type: array
                      items:
                        type: string
                        format: date
                    time:
                      type: string
                      format: time
                    filter_list:
                      type: array
                      items:
                        type: object
                        properties:
                          filter_group:
                            type: array
                            items:
                              type: object
                              properties:
                                table_name:
                                  type: string
                                filter_variable:
                                  type: string
                                filter_operator:
                                  type: string
                                filter_value:
                                  type: string
                                

  /emails/schedule/{email_schedule_uid}:
    get:
      summary: Get a specific email schedule
      tags:
        - Emails
      parameters:
        - name: email_schedule_uid
          in: path
          description: Unique identifier for the email schedule
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Email schedule retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  email_schedule_name:
                    type: string
                  dates:
                    type: array
                    items:
                      type: string
                      format: date
                  time:
                    type: string
                    format: time
                  filter_list:
                    type: array
                    items:
                      type: object
                      properties:
                        filter_group:
                          type: array
                          items:
                            type: object
                            properties:
                              table_name:
                                type: string
                              filter_variable:
                                type: string
                              filter_operator:
                                type: string
                              filter_value:
                                type: string
    put:
      summary: Update a specific email schedule
      tags:
        - Emails
      parameters:
        - name: email_schedule_uid
          in: path
          description: Unique identifier for the email schedule
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                email_schedule_name:
                  type: string
                dates:
                  type: array
                  items:
                    type: string
                    format: date
                time:
                  type: string
                  format: time
                filter_list:
                  type: array
                  items:
                    type: object
                    properties:
                      filter_group:
                        type: array
                        items:
                          type: object
                          properties:
                            table_name:
                              type: string
                            filter_variable:
                              type: string
                            filter_operator:
                              type: string
                            filter_value:
                              type: string
              required:
                - email_config_uid
                - dates
                - time
      responses:
        "200":
          description: Email schedule updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  email_schedule_name:
                    type: string
                  dates:
                    type: array
                    items:
                      type: string
                      format: date
                  time:
                    type: string
                    format: time
                  filter_list:
                    type: array
                    items:
                      type: object
                      properties:
                        filter_group:
                          type: array
                          items:
                            type: object
                            properties:
                              table_name:
                                type: string
                              filter_variable:
                                type: string
                              filter_operator:
                                type: string
                              filter_value:
                                type: string
                required:
                  - email_config_uid
                  - dates
                  - time
    delete:
      summary: Delete a specific email schedule
      tags:
        - Emails
      parameters:
        - name: email_schedule_uid
          in: path
          description: Unique identifier for the email schedule
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Email schedule deleted successfully
  /emails/manual-trigger:
    post:
      summary: Create a new manual email trigger
      tags:
        - Emails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                date:
                  type: string
                  format: date
                time:
                  type: string
                  format: time
                recipients:
                  type: array
                  items:
                    type: integer
                status:
                  type: string
                  enum:
                    - queued
                    - sent
                    - failed
                    - running
                    - progress
              required:
                - email_config_uid
                - date
                - time
                - recipients
                - status
      responses:
        "201":
          description: Manual email trigger created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  date:
                    type: string
                    format: date
                  time:
                    type: string
                    format: time
                  recipients:
                    type: array
                    items:
                      type: integer
                  status:
                    type: string
                    enum:
                      - queued
                      - sent
                      - failed
                      - running
                      - progress
                required:
                  - email_config_uid
                  - date
                  - time
                  - status
    get:
      summary: Get manual email triggers for a specific form
      tags:
        - Emails
      parameters:
        - name: email_config_uid
          in: query
          description: Unique identifier for the form
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Manual email triggers retrieved successfully
          content:
            application/json:
              schema:
                type: array
                description: a list of email triggers
                items:
                  type: object
                  properties:
                    email_config_uid:
                      type: integer
                    date:
                      type: string
                      format: date
                    time:
                      type: string
                      format: time
                    recipients:
                      type: array
                      items:
                        type: integer
                    status:
                      type: string
                      enum:
                        - queued
                        - sent
                        - failed
                  required:
                    - form_uid
                    - date
                    - time
                    - recipients

  /emails/manual-trigger/{manual_email_trigger_uid}:
    patch:
      summary: Update an email trigger status
      tags:
        - Emails
      parameters:
        - name: manual_email_trigger_uid
          in: path
          description: Unique identifier for the manual trigger
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                status:
                  type: string
                  enum:
                    - queued
                    - sent
                    - failed
                    - running
                    - progress
              required:
                - email_config_uid
                - status
      responses:
        "201":
          description: Manual email trigger status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  date:
                    type: string
                    format: date
                  time:
                    type: string
                    format: time
                  recipients:
                    type: array
                    items:
                      type: integer
                  status:
                    type: string
                    enum:
                      - queued
                      - sent
                      - failed
                      - running
                      - progress
                required:
                  - email_config_uid
                  - status
    put:
      summary: Update an email trigger
      tags:
        - Emails
      parameters:
        - name: manual_email_trigger_uid
          in: path
          description: Unique identifier for the manual trigger
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                date:
                  type: string
                  format: date
                time:
                  type: string
                  format: time
                recipients:
                  type: array
                  items:
                    type: integer
                status:
                  type: string
                  enum:
                    - queued
                    - sent
                    - failed
                    - running
                    - progress
              required:
                - email_config_uid
                - date
                - time
                - recipients
                - status
      responses:
        "201":
          description: Manual email trigger updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  date:
                    type: string
                    format: date
                  time:
                    type: string
                    format: time
                  recipients:
                    type: array
                    items:
                      type: integer
                  status:
                    type: string
                    enum:
                      - queued
                      - sent
                      - failed
                required:
                  - email_config_uid
                  - date
                  - time
                  - status
  /emails/templates:
    post:
      summary: Create multiple new email templates
      tags:
        - Emails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                templates:
                  type: array
                  items:
                    type: object
                    properties:
                      language:
                        type: string
                      subject:
                        type: string
                      content:
                        type: string
                      variable_list:
                        type: array
                        items:
                          type: object
                          properties:
                            variable_name:
                              type: string
                            source_table:
                              type: string
                            variable_expression:
                              type: string
                      table_list:
                        type: array
                        items:
                          type: object
                          properties:
                            table_name:
                              type: string
                            column_list:
                              type: object
                            sort_list:
                              type: object
                            variable_name:
                              type: string
                            filter_list:
                              type: array
                              items:
                                type: object
                                properties:
                                  filter_group:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        filter_variable:
                                          type: string
                                        filter_operator:
                                          type: string
                                        filter_value:
                                          type: string
              required:
                - language
                - email_config_uid
                - subject
                - content
      responses:
        "201":
          description: Email templates created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    email_config_uid:
                      type: integer
                    subject:
                      type: string
                    language:
                      type: string
                    content:
                      type: string
                    variable_list:
                      type: array
                      items:
                        type: object
                        properties:
                          variable_name:
                            type: string
                          source_table:
                            type: string
                          variable_expression:
                            type: string
                    table_list:
                      type: array
                      items:
                        type: object
                        properties:
                          table_name:
                            type: string
                          column_list:
                            type: object
                          sort_list:
                            type: object
                          variable_name:
                            type: string
                          filter_list:
                            type: array
                            items:
                              type: object
                              properties:
                                filter_group:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      filter_variable:
                                        type: string
                                      filter_operator:
                                        type: string
                                      filter_value:
                                        type: string
    
  /emails/template:
    post:
      summary: Create a new email template
      tags:
        - Emails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                language:
                  type: string
                subject:
                  type: string
                content:
                  type: string
                variable_list:
                  type: array
                  items:
                    type: object
                    properties:
                      variable_name:
                        type: string
                      source_table:
                        type: string
                      variable_expression:
                        type: string
                table_list:
                  type: array
                  items:
                    type: object
                    properties:
                      table_name:
                        type: string
                      column_list:
                        type: object
                      sort_list:
                        type: object
                      variable_name:
                        type: string
                      filter_list:
                        type: array
                        items:
                          type: object
                          properties:
                            filter_group:
                              type: array
                              items:
                                type: object
                                properties:
                                  filter_variable:
                                    type: string
                                  filter_operator:
                                    type: string
                                  filter_value:
                                    type: string
              required:
                - language
                - email_config_uid
                - subject
                - content
      responses:
        "201":
          description: Email template created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  subject:
                    type: string
                  language:
                    type: string
                  content:
                    type: string
                  variable_list:
                    type: array
                    items:
                      type: object
                      properties:
                        variable_name:
                          type: string
                        source_table:
                          type: string
                        variable_expression:
                          type: string
                  table_list:
                    type: array
                    items:
                      type: object
                      properties:
                        table_name:
                          type: string
                        column_list:
                          type: object
                        sort_list:
                          type: object
                        variable_name:
                          type: string
                        filter_list:
                          type: array
                          items:
                            type: object
                            properties:
                              filter_group:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    filter_variable:
                                      type: string
                                    filter_operator:
                                      type: string
                                    filter_value:
                                      type: string
                required:
                  - email_config_uid
                  - subject
                  - language
                  - content
    get:
      summary: Get all email templates
      tags:
        - Emails
      parameters:
        - name: email_config_uid
          in: query
          description: Unique identifier for the email config associated with the template
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Email templates retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    email_config_uid:
                      type: integer
                    subject:
                      type: string
                    language:
                      type: string
                    content:
                      type: string
                    variable_list:
                      type: array
                      items:
                        type: object
                        properties:
                          variable_name:
                            type: string
                          source_table:
                            type: string
                          variable_expression:
                            type: string
                    table_list:
                      type: array
                      items:
                        type: object
                        properties:
                          table_name:
                            type: string
                          column_list:
                            type: object
                          sort_list:
                            type: object
                          variable_name:
                            type: string
                          filter_list:
                            type: array
                            items:
                              type: object
                              properties:
                                filter_group:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      filter_variable:
                                        type: string
                                      filter_operator:
                                        type: string
                                      filter_value:
                                        type: string
                  required:
                    - email_config_uid
                    - subject
                    - language
                    - content
  /emails/template/{template_id}:
    get:
      summary: Get a specific email template
      tags:
        - Emails
      parameters:
        - name: template_id
          in: path
          description: Unique identifier for the email template
          required: true
          schema:
            type: integer
        - name: email_config_uid
          in: query
          description: Unique identifier for the email config associated with the template
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Email template retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  subject:
                    type: string
                  language:
                    type: string
                  content:
                    type: string
                  variable_list:
                    type: array
                    items:
                      type: object
                      properties:
                        variable_name:
                          type: string
                        source_table:
                          type: string
                        variable_expression:
                          type: string
                  table_list:
                    type: array
                    items:
                      type: object
                      properties:
                        table_name:
                          type: string
                        column_list:
                          type: object
                        sort_list:
                          type: object
                        variable_name:
                          type: string
                        filter_list:
                          type: array
                          items:
                            type: object
                            properties:
                              filter_group:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    filter_variable:
                                      type: string
                                    filter_operator:
                                      type: string
                                    filter_value:
                                      type: string
                                    
                required:
                  - email_config_uid
                  - subject
                  - language
                  - content
    put:
      summary: Update a specific email template
      tags:
        - Emails
      parameters:
        - name: template_id
          in: path
          description: Unique identifier for the email template
          required: true
          schema:
            type: integer
        - name: email_config_uid
          in: query
          description: Unique identifier for the email config associated with the template
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                subject:
                  type: string
                language:
                  type: string
                content:
                  type: string
                variable_list:
                  type: array
                  items:
                    type: object
                    properties:
                      variable_name:
                        type: string
                      source_table:
                        type: string
                      variable_expression:
                        type: string
                table_list:
                  type: array
                  items:
                    type: object
                    properties:
                      table_name:
                        type: string
                      column_list:
                        type: object
                      sort_list:
                        type: object
                      variable_name:
                        type: string
                      filter_list:
                        type: array
                        items:
                          type: object
                          properties:
                            filter_group:
                              type: array
                              items:
                                type: object
                                properties:
                                  filter_variable:
                                    type: string
                                  filter_operator:
                                    type: string
                                  filter_value:
                                    type: string
                                  
              required:
                - email_config_uid
                - subject
                - language
                - content
      responses:
        "200":
          description: Email template updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_config_uid:
                    type: integer
                  subject:
                    type: string
                  language:
                    type: string
                  content:
                    type: string
                  variable_list:
                    type: array
                    items:
                      type: object
                      properties:
                        variable_name:
                          type: string
                        source_table:
                          type: string
                        variable_expression:
                          type: string
                  table_list:
                    type: array
                    items:
                      type: object
                      properties:
                        table_name:
                          type: string
                        column_list:
                          type: object
                        sort_list:
                          type: object
                        variable_name:
                          type: string
                        filter_list:
                          type: array
                          items:
                            type: object
                            properties:
                              filter_group:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    filter_variable:
                                      type: string
                                    filter_operator:
                                      type: string
                                    filter_value:
                                      type: string
                                    
                required:
                  - email_config_uid
                  - subject
                  - language
                  - content
    delete:
      summary: Delete a specific email template
      tags:
        - Emails
      parameters:
        - name: template_id
          in: path
          description: Unique identifier for the email template
          required: true
          schema:
            type: integer
        - name: email_config_uid
          in: query
          description: Unique identifier for the email config associated with the template
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Email template deleted successfully
  
  /emails/gsheet:
    post:
      summary: Get Google Sheet column Headers
      tags:
        - Emails
      parameters:
        - name: form_uid
          in: path
          description: Unique identifier for the form
          required: true
          schema:
            type: integer
        - name: email_source_gsheet_link
          in: query
          description: Link to Google Sheet
          required: true
          schema:
            type: string
        - name: email_source_gsheet_tab
          in: query
          description: Google Sheet Tab name
          required: true
          schema:
            type: string
        - name: email_source_gsheet_header_row
          in: query
          description: Google Sheet Header Row Number
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Google Sheet column Headers retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: [ "column1", "column2" ]
        "404":
          description: Google Sheet not found, kindly check sheet link and tab name
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Google Sheet not found, kindly check sheet link and tab name"
        "403":
          description: Google Sheet access forbidden, kindly check sheet permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Google Sheet access forbidden, kindly check sheet permissions"
        
    patch:
      summary: Update Google Sheet column Headers for specific config id
      tags:
          - Emails
      parameters:
        - name: email_config_uid
          in: query
          description: Unique identifier for the Email Config
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Google Sheet column Headers retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: [ "column1", "column2" ]
        "404":
          description: Google Sheet not found, kindly check sheet link and tab name
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Google Sheet not found, kindly check sheet link and tab name"
        "403":
          description: Google Sheet access forbidden, kindly check sheet permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Google Sheet access forbidden, kindly check sheet permissions"
        
  /emails/tablecatalog:
    get:
      tags:
        - Emails
      summary: Get all table catalog for a specific email config
      parameters:
        - name: email_config_uid
          in: query
          description: Unique identifier for the email config
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        survey_uid:
                          type: integer
                          description: Unique identifier of the survey
                          example: 123
                        table_name:
                          type: string
                          description: Name of the table
                          example: "table_name"
                        column_list:
                          type: array
                          items:
                            type: string
                            description: List of columns in the table
                            example: ["column1", "column2"]
    put:
      tags:
        - Emails
      summary: Create/Update a table catalog entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_uid:
                  type: integer
                  description: Unique identifier for the survey
                  example: 123
                table_catalog:
                  type: array
                  items:
                    type: object
                    properties:
                      table_name:
                        type: string
                        description: Name of the table
                        example: "table_name"
                      column_name:
                        type: string
                        description: Name of the column
                        example: "district_name"
                      column_description:
                        type: string
                        description: Description of the column
                        example: "Name of district"
                      column_type:
                        type: string
                        description: Type of the column
                        example: "integer"
              required:
                - survey_uid
                - table_catalog
                  - table_name
                  - column_name
                  - column_type
      responses:
        "201":
          description: Table catalog entry created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      survey_uid:
                        type: integer
                        description: Unique identifier of the survey
                        example: 123
                      table_name:
                        type: string
                        description: Name of the table
                        example: "table_name"
                      table_description:
                        type: string
                        description: Description of the table
                        example: "table_description"
                      column_name:
                        type: string
                        description: Name of the column
                        example: "column_name"
                      column_description:
                        type: string
                        description: Description of the column
                        example: "column_description"
                      column_type:
                        type: string
                        description: Type of the column
                        example: "column_type"
                required:
                  - success
                  - data

  /emails/report:
    post:
      summary: Create a new email delivery report
      tags:
        - Emails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_config_uid:
                  type: integer
                email_schedule_uid:
                  type: integer
                manual_trigger_uid:
                  type: integer
                slot_type:
                  type: string
                  enum:
                    - schedule
                    - trigger
                slot_date:
                  type: string
                  format: date
                slot_time:
                  type: string
                  format: time
                delivery_time:
                  type: string
                  format: datetime
                enumerator_status:
                  type: array
                  items:
                    type: object
                    properties:
                      enumerator_id:
                        type: string
                      status:
                        type: string
                        enum:
                          - sent
                          - failed
                      error_description:
                        type: string
      responses:
        "200":
          description: Email Delivery Report created successfully
        "404":
          description: Invalid slot type

    get:
      tags:
        - Emails
      summary: Get email delivery reports for a specific email schedule/trigger
      parameters:
        - name: email_config_uid
          in: query
          description: Unique identifier for the email config
          required: true
          schema:
            type: integer
        - name: email_schedule_uid
          in: query
          description: Unique identifier for the email schedule
          required: true
          schema:
            type: integer
        - name: manual_trigger_uid
          in: query
          description: Unique identifier for the manual trigger
          required: true
          schema:
            type: integer
        - name: slot_type
          in: query
          description: Type of slot - schedule or trigger
          required: true
          schema:
            type: string
            enum:
              - schedule
              - trigger
      responses:
        "200":
          description: Email delivery reports retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    email_schedule_uid:
                      type: integer
                    manual_trigger_uid:
                      type: integer
                    slot_type:
                      type: string
                      enum:
                        - schedule
                        - trigger
                    slot_date:
                      type: string
                      format: date
                    slot_time:
                      type: string
                      format: time
                    delivery_time:
                      type: string
                      format: datetime
                    enumerator_status:
                      type: array
                      items:
                        type: object
                        properties:
                          enumerator_id:
                            type: string
                          enumerator_name:
                            type: string
                          enumerator_email:
                            type: string
                          supervisor_name:
                            type: string
                          supervisor_email:
                            type: string
                          status:
                            type: string
                            enum:
                              - sent
                              - failed
                          error_message:
                            type: string
        "404":
          description: Email delivery reports not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Not Found"
                  message:
                    type: string
                    description: Description of the error
                    example: "Email delivery reports not found"
                required:
                  - error
                  - message


                                
  /emails/tablecatalog/schedules:
      get:
        tags:
          - Emails
        summary: Get table catalog for a specific email config containing only tables which have been used in config templates
        parameters:
          - name: email_config_uid
            in: query
            description: Unique identifier for the email config
            required: true
        responses:
        "200":
        description: Success
        content:
          application/json:
            schema:
              type: object
              properties:
          schema:
            type: integer
            success:
              type: boolean
              example: true
            data:
              type: array
              items:
                type: object
                properties:
                  survey_uid:
                    type: integer
                    description: Unique identifier of the survey
                    example: 123
                  table_name:
                    type: string
                    description: Name of the table
                    example: "table_name"
                  column_list:
                    type: array
                    items:
                      type: string
                      description: List of columns in the table
                      example: ["column1", "column2"]
                            
  /media-files:
    post:
      tags:
        - Media Files
      summary: Create a new media files config
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique identifier for the form
                  example: 123
                file_type:
                  type: string
                  description: Type of media file - photo or audio
                source:
                  type: string
                  description: Source of the media file - SurveyCTO or Exotel
                scto_fields:
                  type: array
                  description: >-
                    An array of SurveyCTO field names that are to be included in the media files output
                  items:
                    type: string
                mapping_criteria:
                  type: string
                  description: >-
                    Criteria used to split the media files into different Google Sheets. Values can be
                    'location', 'language' or NULL
              required:
                - form_uid
                - file_type
                - source
                - scto_fields
      responses:
        "201":
          description: Media files config added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      media_files_config_uid:
                        type: integer
                        description: UID of the media files config
                        example: 123
                      form_uid:
                        type: integer
                        description: UID of the form
                        example: 123
                      file_type:
                        type: string
                        description: Type of media file - photo or audio
                      source:
                        type: string
                        description: Source of the media file - SurveyCTO or Exotel
                      scto_fields:
                        type: array
                        description: >-
                          An array of SurveyCTO field names that are to be included in the media files output
                        items:
                          type: string
                      mapping_criteria:
                        type: string
                        description: >-
                          Criteria used to split the media files into different Google Sheets. Values can be
                          'location', 'language' or NULL
                required:
                  - success
                  - data
        "500":
          description: >-
            A config already exists for this survey with the same scto_form_id, type and source
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: >-
                      Error message indicating that the config could not be
                      created.
    get:
      tags:
        - Media Files
      summary: Get all media files configs per survey
      parameters:
        - in: query
          name: survey_uid
          required: true
          description: Unique identifier for the survey
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        media_files_config_uid:
                          type: integer
                          description: Unique identifier of the media files config
                          example: 123
                        form_uid:
                          type: integer
                          description: Unique identifier of the form
                          example: 123
                        scto_form_id:
                          type: string
                          description: SurveyCTO form ID
                        file_type:
                          type: string
                          description: Type of media file - photo or audio
                        source:
                          type: string
                          description: Source of the media file - SurveyCTO or Exotel
                        scto_fields:
                          type: array
                          description: >-
                            An array of SurveyCTO field names that are to be included in the media files output
                          items:
                            type: string
                        mapping_criteria:
                          type: string
                          description: >-
                            Criteria used to split the media files into different Google Sheets. Values can be
                            'location', 'language' or NULL
                        google_sheet_key:
                          type: string
                          description: Unique key for the output Google Sheet where the media file links are published
                        mapping_google_sheet_key:
                          type: string
                          description: >-
                            Unique key for the Google Sheet  which has the list of mapping criteria values (location/language)
                            depending on the mapping criteria selected and the corresponding Google Sheet keys
                required:
                  - success
                  - data
        "404":
          description: Media files config not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Not Found"
                  message:
                    type: string
                    description: Description of the error
                    example: "Media files config not found"
                required:
                  - error
                  - message

  /media-files/{media_files_config_uid}:
    get:
      tags:
        - Media Files
      summary: Get a particular media files config given the media files config UID
      parameters:
        - in: path
          name: media_files_config_uid
          required: true
          description: Unique identifier for the media files config
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      media_files_config_uid:
                        type: integer
                        description: Unique identifier of the media files config
                        example: 123
                      form_uid:
                        type: integer
                        description: Unique identifier of the form
                        example: 123
                      file_type:
                        type: string
                        description: Type of media file - photo or audio
                      source:
                        type: string
                        description: Source of the media file - SurveyCTO or Exotel
                      scto_fields:
                        type: array
                        description: >-
                          An array of SurveyCTO field names that are to be included in the media files output
                        items:
                          type: string
                      mapping_criteria:
                        type: string
                        description: >-
                          Criteria used to split the media files into different Google Sheets. Values can be
                          'location', 'language' or NULL
                      google_sheet_key:
                        type: string
                        description: Unique key for the output Google Sheet where the media file links are published
                      mapping_google_sheet_key:
                        type: string
                        description: >-
                          Unique key for the Google Sheet  which has the list of mapping criteria values (location/language)
                          depending on the mapping criteria selected and the corresponding Google Sheet keys
                required:
                  - success
                  - data
        "404":
          description: Media files config not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Not Found"
                  message:
                    type: string
                    description: Description of the error
                    example: "Media files config not found"
                required:
                  - error
                  - message
    put:
      tags:
        - Media Files
      summary: Update a media files config
      parameters:
        - in: path
          name: media_files_config_uid
          required: true
          description: Unique identifier for the media files config
          schema:
            type: integer
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                file_type:
                  type: string
                  description: Type of media file - photo or audio
                source:
                  type: string
                  description: Source of the media file - SurveyCTO or Exotel
                scto_fields:
                  type: array
                  description: >-
                    An array of SurveyCTO field names that are to be included in the media files output
                  items:
                    type: string
                mapping_criteria:
                  type: string
                  description: >-
                    Criteria used to split the media files into different Google Sheets. Values can be
                    'location', 'language' or NULL
              required:
                - file_type
                - source
                - scto_fields
      responses:
        "200":
          description: Media files config updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Media files config updated successfully"
                  data:
                    type: object
                    properties:
                      media_files_config_uid:
                        type: integer
                        description: Unique identifier of the media files config
                        example: 123
                      form_uid:
                        type: integer
                        description: Unique identifier of the form
                        example: 123
                      file_type:
                        type: string
                        description: Type of media file - photo or audio
                      source:
                        type: string
                        description: Source of the media file - SurveyCTO or Exotel
                      scto_fields:
                        type: array
                        description: >-
                          An array of SurveyCTO field names that are to be included in the media files output
                        items:
                          type: string
                      mapping_criteria:
                        type: string
                        description: >-
                          Criteria used to split the media files into different Google Sheets. Values can be
                          'location', 'language' or NULL
                      google_sheet_key:
                        type: string
                        description: Unique key for the output Google Sheet where the media file links are published
                      mapping_google_sheet_key:
                        type: string
                        description: >-
                          Unique key for the Google Sheet  which has the list of mapping criteria values (location/language)
                          depending on the mapping criteria selected and the corresponding Google Sheet keys
                required:
                  - success
                  - message
                  - data
        "404":
          description: Media files config not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Not Found"
                  message:
                    type: string
                    description: Description of the error
                    example: "Media files config not found"
                required:
                  - error
                  - message
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
                    example: "Internal Server Error"
                  message:
                    type: string
                    description: Description of the error
                    example: "An error occurred while updating the media files config"
                required:
                  - error
                  - message
    delete:
      tags:
        - Media Files
      summary: Delete a media files config
      parameters:
        - in: path
          name: media_files_config_uid
          required: true
          description: Unique identifier for the media files config
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: Media files config deleted successfully

  /dq/check-types:
    get:
      summary: Get all DQ check types
      description: Retrieve a list of all available Data Quality (DQ) check types.
      tags:
        - Data Quality
      responses:
        "200":
          description: Successfully returns a list of DQ check types
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type_id:
                          type: integer
                          description: Unique identifier for the DQ check type
                          example: 1
                        name:
                          type: string
                          description: Name of the DQ check type
                          example: "Missing"
                        abbr:
                          type: list
                          description: List of abbreviations linked to the DQ check type
                          example: ["M"]
        "404":
          description: DQ check types not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  data:
                    type: null
                    example: null
                  message:
                    type: string
                    example: "DQ check types not found"

  /dq/config:
    get:
      summary: Get DQ configuration for a form
      description: Retrieve the DQ configuration for a specific form.
      tags:
        - Data Quality
      parameters:
        - name: form_uid
          in: query
          description: Unique identifier for the form
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully returns the DQ configuration for the form
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        form_uid:
                          type: integer
                          description: Unique identifier for the form
                          example: 123
                        survey_status_filter:
                          type: list
                          description: List of survey statuses to filter the data
                          example: ["1", "2"]
                        group_by_module_name:
                          type: boolean
                          description: Indicates if the DQ checks are grouped by module name
                          example: true
                        dq_checks:
                          type: array
                          description: List of DQ checks configured for the form
                          items:
                            type: object
                            properties:
                              type_id:
                                type: integer
                                description: Unique identifier for the DQ check type
                                example: 1
                              num_configured:
                                type: string
                                description: Number of checks configured for the DQ check type. Value is "All" if check is applies on all variables in the form
                              num_active:
                                type: integer
                                description: Number of checks that are active for the DQ check type. Value is "All" if check is applies on all variables in the form
        "404":
          description: No DQ configs found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  data:
                    type: null
                    example: null
                  message:
                    type: string
                    example: "DQ configs not found"

    put:
      summary: Create/update new DQ configuration for a form
      description: Create or update the DQ configuration for a specific form.
      tags:
        - Data Quality
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique identifier for the form
                  example: 123
                survey_status_filter:
                  type: list
                  description: List of survey statuses to filter the data
                  example: ["1", "2"]
                group_by_module_name:
                  type: boolean
                  description: Indicates if the DQ checks are grouped by module name. Default is false.
                  example: true
              required:
                - form_uid
                - survey_status_filter
      responses:
        "201":
          description: DQ configuration created/updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "DQ configuration created/updated successfully"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "An error occurred while creating/updating the DQ configuration"
                  
  /dq/checks:
    get:
      summary: Get DQ checks for a form and type
      description: Retrieve the DQ checks for a specific form and check type.
      tags:
        - Data Quality
      parameters:
        - name: form_uid
          in: query
          description: Unique identifier for the form
          required: true
          schema:
            type: integer
        - name: type_id
          in: query
          description: Unique identifier for the DQ check type
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully returns the DQ checks for the form
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        form_uid:
                          type: integer
                          description: Unique identifier for the form
                          example: 123
                        type_id:
                          type: integer
                          description: Unique identifier for the DQ check type
                          example: 1
                        dq_check_uid:
                          type: integer
                          description: Unique identifier for the DQ check
                          example: 123
                        all_questions:
                          type: boolean
                          description: Indicates if the DQ check applies to all questions in the form
                          example: true
                        question_name:
                          type: string
                          description: Name of the question the DQ check applies to. Value is None if check applies to all questions
                          example: "district_name"
                        is_repeat_group:
                          type: boolean
                          description: Indicates if the question is a repeat group
                          example: true
                        dq_scto_form_uid:
                          type: integer
                          description: Unique identifier for the Data Quality SurveyCTO form. This is provided for Mismatch, protocol violations and spotcheck score checks
                          example: 123
                        flag_description:
                          type: string
                          description: Description of the flag
                          example: "Flags if the district name is missing"
                        module_name:
                          type: string
                          description: Name of the module used for grouping the DQ check output
                          example: "Agriculture"
                        filters:
                          type: array
                          description: List of filters groups to be applied to the DQ check joined by an OR condition
                          items:
                            type: object
                            description: Filter group
                            properties:
                              filter_group:
                                type: array
                                description: List of filters in the filter group joined by an AND condition
                                items:
                                  type: object
                                  properties:
                                    question_name:
                                      type: string
                                      description: Name of the question to apply filter on
                                      example: "age"
                                    filter_operator:
                                      type: string
                                      description: Operator for the filter. Values can be 'Is','Is not','Contains','Does not contain','Is Empty','Is not empty', 'Greater than', 'Smaller than'
                                      example: "Is empty"
                                    filter_value:
                                      type: string
                                      description: Value to filter on
                                    is_repeat_group:
                                      type: boolean
                                      description: Indicates if the filter question is a repeat group
                                      example: true
                        check_components:
                          type: object
                          description: JSON object containing the check components based on the DQ check type
                          properties:
                            value:
                              type: array
                              description: List of values for checking missing, don't know and refusal checks
                              items:
                                type: string
                                example: ["Is empty", "is NA"]
                            hard_min:
                              type: decimal
                              description: Minimum value for the constraint check
                              example: 0
                            hard_max:
                              type: decimal
                              description: Maximum value for the constraint check
                              example: 100
                            soft_min:
                              type: decimal
                              description: Minimum value for the soft constraint check
                              example: 2.5
                            soft_max:
                              type: decimal
                              description: Maximum value for the soft constraint check
                              example: 100
                            outlier_metric:
                              type: string
                              description: Metric used for outlier check. Values can be 'interquartile_range', 'standard_deviation', 'percentile'
                            outlier_value:
                              type: decimal
                              description: Value for the outlier check
                              example: 1.5
                            spotcheck_score_name:
                              type: string
                              description: For spotcheck score checks, this field is used to combine question level scores into a single score
                              example: "probing_score"
                            gps_type:
                              type: string
                              description: For GPS checks to specify the gps type, Values can be 'point2point', 'point2shape'
                              example: "point2point"
                            threshold:
                              type: decimal
                              description: For GPS checks to match value within the threshold value
                              example: 10
                            gps_variable:
                              type: string
                              description: SCTO question name for GPS variable
                              example: "district_name"
                            grid_id:
                              type: string
                              description: SCTO question name for grid id variable
                              example: "district_name"
                            logic_check_questions:
                              type: array
                              description: List of questions to be used for logic checks
                              items:
                                type: object
                                properties:
                                  question_name:
                                    type: string
                                    description: Name of the question
                                    example: "age"
                                  alias:
                                    type: string
                                    description: Alias for the question
                                    example: "A"
                                  is_repeat_group:
                                    type: boolean
                                    description: Indicates if the question is a repeat group
                                    example: true
                            logic_check_assertions:
                              type: array
                              description: List of groups of assertions for logic checks joined by an OR condition
                              items:
                                type: object
                                description: Assert group
                                properties:
                                  assert_group:
                                    type: array
                                    description: List of assert statements joined by an AND condition
                                    items:
                                      type: object
                                      properties:
                                        assert_group_id:
                                          type: integer
                                          description: Unique identifier for the assert group
                                          example: 1
                                        assertion: 
                                          type: string
                                          description: Assertion to be checked
                                          example: "A > B"
                        active:
                          type: boolean
                          description: Indicates if the DQ check is active or not
                          example: true
                        note:
                          type: string
                          description: Additional notes for the DQ check added by the system
                          example: "Question not found in form definition"
        "404":
          description: No DQ checks found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  data:
                    type: null
                    example: null
                  message:
                    type: string
                    example: "DQ checks not found"

    post:
      summary: Create new DQ check for a form
      description: Create a new DQ check for a specific form.
      tags:
        - Data Quality
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique identifier for the form
                  example: 123
                type_id:
                  type: integer
                  description: Unique identifier for the DQ check type
                  example: 1
                all_questions:
                  type: boolean
                  description: Indicates if the DQ check applies to all questions in the form
                  example: true
                question_name:
                  type: string
                  description: Name of the question the DQ check applies to. Value is None if check applies to all questions
                  example: "district_name"
                module_name:
                  type: string
                  description: Name of the module used for grouping the DQ check output
                  example: "Agriculture"
                flag_description:
                  type: string
                  description: Description of the flag
                  example: "Flags if the district name is missing"
                filters:
                  type: array
                  description: List of filters groups to be applied to the DQ check joined by an OR condition
                  items:
                    type: object
                    description: Filter group
                    properties:
                      filter_group:
                        type: array
                        description: List of filters in the filter group joined by an AND condition
                        items:
                          type: object
                          properties:
                            question_name:
                              type: string
                              description: Name of the question to apply filter on
                              example: "age"
                            filter_operator:
                              type: string
                              description: Operator for the filter. Values can be 'Is','Is not','Contains','Does not contain','Is Empty','Is not empty', 'Greater than', 'Smaller than'
                              example: "Is empty"
                            filter_value:
                              type: string
                              description: Value to filter on
                check_components:
                  type: object
                  description: JSON object containing the check components based on the DQ check type
                  properties:
                    value:
                      type: array
                      description: List of values for checking missing, don't know and refusal checks
                      items:
                        type: string
                        example: ["Is empty", "is NA"]
                    hard_min:
                      type: decimal
                      description: Minimum value for the constraint check
                      example: 0
                    hard_max:
                      type: decimal
                      description: Maximum value for the constraint check
                      example: 100
                    soft_min:
                      type: decimal
                      description: Minimum value for the soft constraint check
                      example: 2.5
                    soft_max:
                      type: decimal
                      description: Maximum value for the soft constraint check
                      example: 100
                    outlier_metric:
                      type: string
                      description: Metric used for outlier check. Values can be 'interquartile_range', 'standard_deviation', 'percentile'
                    outlier_value:
                      type: decimal
                      description: Value for the outlier check
                      example: 1.5
                    spotcheck_score_name:
                      type: string
                      description: For spotcheck score checks, this field is used to combine question level scores into a single score
                      example: "probing_score"
                    gps_type:
                      type: string
                      description: For GPS checks to specify the gps type, Values can be 'point2point', 'point2shape'
                      example: "point2point"
                    threshold:
                      type: decimal
                      description: For GPS checks to match value within the threshold value
                      example: 10
                    gps_variable:
                      type: string
                      description: SCTO question name for expected GPS variable
                      example: "district_name"
                    grid_id:
                      type: string
                      description: SCTO question name for grid id variable
                      example: "district_name"
                    logic_check_questions:
                      type: array
                      description: List of questions to be used for logic checks
                      items:
                        type: object
                        properties:
                          question_name:
                            type: string
                            description: Name of the question
                            example: "age"
                          alias:
                            type: string
                            description: Alias for the question
                            example: "A"
                    logic_check_assertions:
                      type: array
                      description: List of groups of assertions for logic checks joined by an OR condition
                      items:
                        type: object
                        description: Assert group
                        properties:
                          assert_group:
                            type: array
                            description: List of assert statements joined by an AND condition
                            items:
                              type: object
                              properties:
                                assertion: 
                                  type: string
                                  description: Assertion to be checked
                                  example: "A > B"
                active:
                  type: boolean
                  description: Indicates if the DQ check is active or not
                  example: true

              required:
                - form_uid
                - type_id

      responses:
        "200":
          description: DQ check created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "DQ check created successfully"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "An error occurred while creating the DQ check"

    delete:
      summary: Delete DQ checks for a form
      description: Delete DQ checks for a specific form.
      tags:
        - Data Quality
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique identifier for the form
                  example: 123
                type_id:
                  type: integer
                  description: Unique identifier for the DQ check type
                  example: 1
                check_uids:
                  type: array
                  description: List of unique identifiers for the DQ checks to be deleted
                  items:
                    type: integer
                    example: 123
              required:
                - form_uid
                - type_id
                - check_uids
      responses:
        "200":
          description: DQ check deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "DQ check deleted successfully"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "An error occurred while deleting the DQ check"

  /dq/checks/{dq_check_uid}:
    put:
      summary: Update DQ check for a form
      description: Update a DQ check for a specific form.
      tags:
        - Data Quality
      parameters:
        - in: path
          name: dq_check_uid
          required: true
          description: Unique identifier for the DQ check
          schema:
            type: integer
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique identifier for the form
                  example: 123
                type_id:
                  type: integer
                  description: Unique identifier for the DQ check type
                  example: 1
                all_questions:
                  type: boolean
                  description: Indicates if the DQ check applies to all questions in the form
                  example: true
                question_name:
                  type: string
                  description: Name of the question the DQ check applies to. Value is None if check applies to all questions
                  example: "district_name"
                module_name:
                  type: string
                  description: Name of the module used for grouping the DQ check output
                  example: "Agriculture"
                flag_description:
                  type: string
                  description: Description of the flag
                  example: "Flags if the district name is missing"
                filters:
                  type: array
                  description: List of filters groups to be applied to the DQ check joined by an OR condition
                  items:
                    type: object
                    description: Filter group
                    properties:
                      filter_group:
                        type: array
                        description: List of filters in the filter group joined by an AND condition
                        items:
                          type: object
                          properties:
                            question_name:
                              type: string
                              description: Name of the question to apply filter on
                              example: "age"
                            filter_operator:
                              type: string
                              description: Operator for the filter. Values can be 'Is','Is not','Contains','Does not contain','Is Empty','Is not empty', 'Greater than', 'Smaller than'
                              example: "Is empty"
                            filter_value:
                              type: string
                              description: Value to filter on
                check_components:
                  type: object
                  description: JSON object containing the check components based on the DQ check type
                  properties:
                    value:
                      type: array
                      description: List of values for checking missing, don't know and refusal checks
                      items:
                        type: string
                        example: ["Is empty", "is NA"]
                    hard_min:
                      type: decimal
                      description: Minimum value for the constraint check
                      example: 0
                    hard_max:
                      type: decimal
                      description: Maximum value for the constraint check
                      example: 100
                    soft_min:
                      type: decimal
                      description: Minimum value for the soft constraint check
                      example: 2.5
                    soft_max:
                      type: decimal
                      description: Maximum value for the soft constraint check
                      example: 100
                    outlier_metric:
                      type: string
                      description: Metric used for outlier check. Values can be 'interquartile_range', 'standard_deviation', 'percentile'
                    outlier_value:
                      type: decimal
                      description: Value for the outlier check
                      example: 1.5
                    spotcheck_score_name:
                      type: string
                      description: For spotcheck score checks, this field is used to combine question level scores into a single score
                      example: "probing_score"
                    gps_type:
                      type: string
                      description: For GPS checks to specify the gps type, Values can be 'point2point', 'point2shape'
                      example: "point2point"
                    threshold:
                      type: decimal
                      description: For GPS checks to match value within the threshold value
                      example: 10
                    gps_variable:
                      type: string
                      description: SCTO question name for expected GPS variable
                      example: "district_name"
                    grid_id:
                      type: string
                      description: SCTO question name for grid id variable
                      example: "district_name"
                    logic_check_questions:
                      type: array
                      description: List of questions to be used for logic checks
                      items:
                        type: object
                        properties:
                          question_name:
                            type: string
                            description: Name of the question
                            example: "age"
                          alias:
                            type: string
                            description: Alias for the question
                            example: "A"
                    logic_check_assertions:
                      type: array
                      description: List of groups of assertions for logic checks joined by an OR condition
                      items:
                        type: object
                        description: Assert group
                        properties:
                          assert_group:
                            type: array
                            description: List of assert statements joined by an AND condition
                            items:
                              type: object
                              properties:
                                assertion: 
                                  type: string
                                  description: Assertion to be checked
                                  example: "A > B"

                active:
                  type: boolean

              required:
                - form_uid
                - type_id
      responses:
        "200":
          description: DQ check updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "DQ check updated successfully"
        "404":
          description: DQ check not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "DQ check not found"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "An error occurred while updating the DQ check"
  
  /dq/checks/activate:
    put:
      summary: Activate DQ checks for a form
      description: Activate DQ checks for a specific form.
      tags:
        - Data Quality
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique identifier for the form
                  example: 123
                type_id:
                  type: integer
                  description: Unique identifier for the DQ check type
                  example: 1
                check_uids:
                  type: array
                  description: List of unique identifiers for the DQ checks to be activated
                  items:
                    type: integer
                    example: 123
              required:
                - form_uid
                - type_id
                - check_uids
      responses:
        "200":
          description: DQ checks activated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "DQ checks activated successfully"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "An error occurred while activating the DQ checks"
  
  /dq/checks/deactivate:
    put:
      summary: Deactivate DQ checks for a form
      description: Deactivate DQ checks for a specific form.
      tags:
        - Data Quality
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: Unique identifier for the form
                  example: 123
                type_id:
                  type: integer
                  description: Unique identifier for the DQ check type
                  example: 1
                check_uids:
                  type: array
                  description: List of unique identifiers for the DQ checks to be deactivated
                  items:
                    type: integer
                    example: 123
              required:
                - form_uid
                - type_id
                - check_uids
      responses:
        "200":
          description: DQ checks deactivated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "DQ checks deactivated successfully"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "An error occurred while deactivating the DQ checks"
  
  /dq/checks/module-names:
    get:
      summary: Get module names added for DQ checks for a form
      description: Retrieve a list of all available module names added for DQ checks for a specific form.
      tags:
        - Data Quality
      parameters:
        - name: form_uid
          in: query
          description: Unique identifier for the form
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully returns a list of module names
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: string
                      description: Name of the module
                      example: "Agriculture"
        "404":
          description: DQ module names not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  data:
                    type: null
                    example: null
                  message:
                    type: string
                    example: "DQ module names not found"

  /notifications:
    get:
      summary: Get Notifications for a user, sorted by created_time descending
      tags:
        - Notifications
      parameters:
        - name : user_uid
          in: query
          description: Unique identifier for the user
          required: true
          schema:
            type: integer
      responses:
        "200":
            description: Successfully returns list of notifications
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            description: Notification Type - user or survey
                            example: "user"
                          notification_uid:
                            type: integer
                            description: Survey Notification UID
                            example: 1
                          survey_id:
                            type: string
                            description: Survey ID
                            example: "test_survey"
                          survey_uid:
                            type: integer
                            description: Survey UID
                            example: 1
                          module_id:
                            type: integer
                            description: Module ID
                            example: 1
                          module_name:
                            type: string
                            description: Module Name
                            example: "Audio Audits"
                          severity:
                            type: string
                            description: severity of Notification- alert / warning / error
                            example: "error"
                          resolution_status:
                            type: string
                            description: Status of Notification- in progress / done
                            example: "done"
                          message:
                            type: string
                            description: Notification message
                            example: "Emails have been delivered"
                          created_at:
                            type: Datetime
                            description: Notification timestamp in UTC
        "404":
          description: Survey UID or USER UID Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
    
    post:
      summary: Create Notifications for a user/survey
      tags:
        - Notifications
      parameters:
        - name: type
          in: body
          description: Notification Type - user or survey
          required: true
          schema:
            type: string
        - name : user_uid
          in: body
          description: Unique identifier for the user
          required: false
          schema:
            type: integer
        - name : survey_uid
          in: body
          description: Unique identifier for the survey
          required: false
          schema:
            type: integer
        - name : module_id
          in: body
          description: Unique identifier for the module
          required: false
          schema:
            type: integer
        - name : resolution_status
          in: body
          description: Resolution status - in progress OR done
          required: true
          schema:
            type: string
            default: in progress
        - name : severity
          in: body
          description: Notification severity
          required: true
          schema:
            type: string
            default: alert
        - name : message
          in: body
          description: Notification Message
          required: true
          schema:
            type: string
      responses:
        "200":
            description: Successfully created notification
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example:  "Notification created successfully"
                    data:
                      type: object
                      items:
                        notification_uid:
                          type: integer
                          description: notification_uid depending on the notification type
                          example: 1
                        severity:
                          type: string
                          description: severity of Notification- alert / warning / error
                          example: "error"
                        resolution_status:
                          type: string
                          description: Status of Notification- in progress / done
                          example: "done"
                        message:
                          type: string
                          description: Notification message- Emails have been delivered
                          example: "done"
                        created_at:
                          type: Datetime
                          description: Notification timestamp in UTC

    put:
      summary: Update Notifications for a user/survey
      tags:
        - Notifications
      parameters:
        - name: type
          in: body
          description: Notification Type - user or survey
          required: true
          schema:
            type: string
        - name : notification_uid
          in: body
          description: Unique identifier for the notification_uid
          required: false
          schema:
            type: integer
        - name : resolution_status
          in: body
          description: Resolution status - in progress OR done
          required: true
          schema:
            type: string
            default: in progress
        - name : severity
          in: body
          description: Notification severity
          required: true
          schema:
            type: string
            default: alert
        - name : message
          in: body
          description: Notification Message
          required: true
          schema:
            type: string
      responses:
        "200":
            description: Successfully updated notification
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example:  "Notification updated successfully"
                    data:
                      type: object
                      items:
                        notification_uid:
                          type: integer
                          description: notification_uid depending on the notification type
                          example: 1
                        severity:
                          type: string
                          description: Type of Notification- alert / warning / error
                          example: "error"
                        resolution_status:
                          type: string
                          description: Status of Notification- in progress / done
                          example: "done"
                        message:
                          type: string
                          description: Notification message- Emails have been delivered
                          example: "done"
                        created_at:
                          type: Datetime
                          description: Notification timestamp in UTC
    patch:
      summary: Resolve Notifications for a user/survey
      tags:
        - Notifications
      parameters:
        - name: type
          in: body
          description: Notification Type - user or survey
          required: true
          schema:
            type: string
        - name : notification_uid
          in: body
          description: Unique identifier for the notification_uid
          required: false
          schema:
            type: integer
        - name : resolution_status
          in: body
          description: Resolution status - in progress OR done
          required: true
          schema:
            type: string
            default: in progress
        - name: survey_uid
          in: body
          description: Unique identifier for the survey
          required: false
          schema:
            type: integer
        - name: module_id
          in: body
          description: Unique identifier for the module
          required: false
          schema:
            type: integer
      responses:
        "200":
            description: Successfully updated notification
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example:  "Notification resolved successfully"
        "404":
          description: Notification UID Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false

  /notifications/action:
    post:
      summary: Create Notifications for a user/survey based on the action
      tags:
        - Notifications
      parameters:
        - name : survey_uid
          in: body
          description: Unique identifier for the survey
          required: true
          schema:
            type: integer
        - name: action
          in: body
          description: Action taken on the survey
          required: true
          schema:
            type: string
        - name: form_uid
          in: body
          description: Unique identifier for the form
          required: false
          schema:
            type: integer
        
      responses:
        "200":
          description: Notification created successfully
        "404":
          description: Survey UID Not found
        "422":
          description: No notification created for the action, conditions not met
         
