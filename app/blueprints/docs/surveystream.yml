openapi: 3.0.2
info:
  title: SurveyStream API
  description: >
    Internal endpoints for the SurveyStream web application

    ### Context

    SurveyStream is a survey management software application for IDinsight’s
    Data on Demand initiative.  SurveyStream is the centralized hub for managing
    DoD’s survey operations in real time, enabling fast,  cheap, high quality
    data collection.


    The SurveyStream web application enables DoD supervisors to view survey
    targets,  view and manage enumerator information, and make assignments
    between targets and enumerators.
  version: '1.0'
servers:
  - url: 'https://surveystream.idinsight.io/api'
    description: Production server
components:
  securitySchemes:
    cookieAuth:
      description: >
        ### Basic Setup

        - Cookie-based auth is used for protected endpoints

        - Upon successful login a session cookie is saved on the user's device
        and is used to authenticate subsequent requests

        - The user will be automatically logged out after 7 days


        ### CSRF Token

        - To prevent CSRF attacks, a CSRF token must be included in the
        `X-CSRF-TOKEN` header for all POST, PUT, and PATCH requests

        - The token can be obtained from the CSRF-TOKEN cookie set by the `GET
        /get-csrf` action
      type: apiKey
      in: cookie
      name: session
security:
  - ApiKeyAuth: []
tags:
  - name: User Authentication
    description: Endpoints related to authenticating users
  - name: Password Management
    description: Endpoints related to managing users' passwords
  - name: User Registration
    description: Endpoints related to creating new users
  - name: Profile
    description: Endpoints related to the user's profile
  - name: Surveys
    description: Endpoints related to the user's surveys
  - name: Forms
    description: Endpoints related to the user's forms
  - name: Enumerators
    description: Endpoints related to the user's enumerators
  - name: Targets
    description: Endpoints related to the user's targets
  - name: Assignments
    description: Endpoints related to the user's assignments
  - name: Table Configuration
    description: Endpoints related to the configuration of tables on the web flask_app
  - name: Misc
    description: Endpoints related to miscellaneous functionalities
  - name: Module Questionnaire
    description: Endpoints related to module questionnaire
  - name: Roles
    description: Endpoints related to user roles
  - name: Locations
    description: Endpoints related to locations
x-tagGroups:
  - name: User Management
    tags:
      - User Authentication
      - Password Management
      - User Registration
  - name: Profile
    tags:
      - Profile
  - name: Surveys & Forms
    tags:
      - Surveys
      - Forms
  - name: Module Selection
    tags:
      - Module Selection
  - name: Enumerators
    tags:
      - Enumerators
  - name: Targets
    tags:
      - Targets
  - name: Assignments
    tags:
      - Assignments
  - name: Table Configuration
    tags:
      - Table Configuration
  - name: Misc
    tags:
      - Misc
  - name: Module Questionnaire
    tags:
      - Module Questionnaire
  - name: Roles
    tags:
      - Roles
  - name: Locations
    tags:
      - Locations
paths:
  /healthcheck:
    get:
      summary: Test database connection
      security: []
      tags:
        - Misc
      responses:
        '200':
          description: Healthy
        '500':
          description: Failed DB connection
  /get-csrf:
    get:
      summary: Set CSRF-TOKEN cookie
      description: >-
        The value of the CSRF-TOKEN cookie must be included in the X-CSRF-Token
        header for all POST, PUT, and PATCH requests
      security: []
      tags:
        - User Authentication
      responses:
        '200':
          description: Success
  /login:
    post:
      summary: Log a user in
      description: Authenticate a user to access protected endpoints
      security: []
      tags:
        - User Authentication
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: 'Success: logged in'
        '400':
          description: User must not be already logged in
        '401':
          description: Unauthorized
        '403':
          description: X-CSRF-Token required in header
        '422':
          description: Form errors
  /logout:
    get:
      summary: Log a user out
      description: Log a user out so they can no longer access protected endpoints
      tags:
        - User Authentication
      responses:
        '200':
          description: 'Success: logged out'
  /register:
    post:
      summary: Create new user
      description: Allow a logged in admin user to create a new user
      tags:
        - User Registration
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: 'Success: registered'
        '401':
          description: Unauthorized
        '403':
          description: X-CSRF-Token required in header
        '422':
          description: Form errors | User already exists
  /change-password:
    post:
      summary: Update password for logged in user
      description: Allow a logged in user to update their password
      tags:
        - Password Management
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cur_password:
                  type: string
                  description: Current password
                new_password:
                  type: string
                  description: New password
                confirm:
                  type: string
                  description: Confirm new password
              required:
                - cur_password
                - new_password
                - confirm
      responses:
        '200':
          description: 'Success: password changed'
        '403':
          description: Wrong password | X-CSRF-Token required in header
        '422':
          description: Form errors
  /forgot-password:
    post:
      summary: Trigger password reset email
      security: []
      tags:
        - Password Management
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        '200':
          description: Request processed
        '400':
          description: Already logged in - use /change-password
        '403':
          description: X-CSRF-Token required in header
        '422':
          description: Form errors
  /welcome-user:
    post:
      summary: Trigger welcome email
      description: >-
        Allows a logged in admin user to trigger a welcome email to a user with
        a reset password link
      tags:
        - User Registration
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        '200':
          description: Request processed
        '400':
          description: Already logged in - use /change-password
        '401':
          description: Unauthorized
        '403':
          description: X-CSRF-Token required in header
        '404':
          description: Record not found
        '422':
          description: Form errors
  /reset-password:
    post:
      summary: Reset password
      description: Reset the user's password using the reset password email link
      security: []
      tags:
        - Password Management
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rpt_id:
                  type: string
                  description: Reset password ID from the reset password email link
                rpt_token:
                  type: string
                  description: Reset password token from the reset password email link
                new_password:
                  type: string
                  description: New password
                confirm:
                  type: string
                  description: Confirm new password
              required:
                - rpt_id
                - rpt_token
                - new_password
                - confirm
      responses:
        '200':
          description: 'Success: password reset'
        '400':
          description: Already logged in - use /change-password
        '403':
          description: X-CSRF-Token required in header
        '404':
          description: Invalid link
        '422':
          description: Form errors
  /profile:
    get:
      summary: Get user profile
      description: Return the logged in user's profile information
      tags:
        - Profile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  first_name:
                    type: string
                    description: The first name of the user
                  middle_name:
                    type: string
                    description: The middle name of the user
                  last_name:
                    type: string
                    description: The last name of the user
                  email:
                    type: string
                    description: The email address of the user
                  phone_primary:
                    type: string
                    description: The primary phone number of the user
                  home_state_name:
                    type: string
                    description: The home state of the user
                  home_district_name:
                    type: string
                    description: The home district of the user
  /profile/avatar:
    get:
      summary: Get avatar URL
      description: Return a URL for the profile avatar image of the logged in user
      tags:
        - Profile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  image_url:
                    description: >-
                      A presigned url that will give access to the user's
                      profile avatar image for 60 seconds
                    type: string
    put:
      summary: Update avatar
      description: Update the profile avatar image of the logged in user
      tags:
        - Profile
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          image/png:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Success
        '403':
          description: X-CSRF-Token required in header
        '422':
          description: Form errors
  /profile/avatar/remove:
    post:
      summary: Delete avatar
      description: Delete the user's profile avatar image
      tags:
        - Profile
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Success
        '403':
          description: X-CSRF-Token required in header
        '422':
          description: Form errors
  /surveys?user_uid={user_uid}:
    get:
      summary: Get surveys
      description: Returns information about surveys associated with the logged in user.
      tags:
        - Surveys
      parameters:
        - in: query
          name: user_uid
          schema:
            type: integer
          description: >-
            Optional user ID to retrieve surveys for. If not provided, surveys
            for the logged in user will be returned.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: >-
                      An array of surveys belonging to the specified user or all
                      users if no user_uid is provided.
                    items:
                      type: object
                      properties:
                        survey_uid:
                          type: integer
                          description: The unique ID of the survey.
                        survey_id:
                          type: string
                          description: The ID of the survey.
                        survey_name:
                          type: string
                          description: The name of the survey.
                        project_name:
                          type: string
                          description: The name of the project that the survey belongs to.
                        survey_description:
                          type: string
                          description: A description of the survey.
                        surveying_method:
                          type: string
                          description: 'The method of surveying, e.g. in-person, phone.'
                        irb_approval:
                          type: string
                          description: >-
                            The status of the IRB approval, e.g. Yes, No,
                            Pending.
                        planned_start_date:
                          type: string
                          description: >-
                            The planned start date of the survey in ISO 8601
                            format.
                        planned_end_date:
                          type: string
                          description: >-
                            The planned end date of the survey in ISO 8601
                            format.
                        state:
                          type: string
                          description: 'The state of the survey, e.g. Draft, Active, Past.'
                        last_updated_at:
                          type: string
                          description: >-
                            The date and time that the survey was last updated
                            in ISO 8601 format.
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
        '404':
          description: No surveys found for the specified user or all users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating that no surveys were found.
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
  /surveys:
    post:
      summary: Create a new survey
      tags:
        - Surveys
      description: Create a new survey with the basic information details. The survey_id must be
        unique.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_id:
                  type: string
                  example: AgriFieldneet
                  description: The unique identifier for the survey
                survey_name:
                  type: string
                  example: Agrifieldneet Main Survey Form
                  description: The name of the survey
                project_name:
                  type: string
                  example: AgriFieldneet Survey
                  description: The name of the project the survey belongs to
                survey_description:
                  type: string
                  example: 'AgriFieldnet survey starting on 1st Jan, 2023'
                  description: A description of the survey
                surveying_method:
                  type: string
                  example: in-person
                  description: The method used to survey respondents
                  enum:
                    - phone
                    - in-person
                irb_approval:
                  type: string
                  example: Pending
                  description: >-
                    The status of the Institutional Review Board (IRB)
                    approval
                  enum:
                    - 'Yes'
                    - 'No'
                    - Pending
                planned_start_date:
                  type: string
                  example: 2023-01-01T00:00:00.000Z
                  format: date
                  description: The planned start date for the survey
                planned_end_date:
                  type: string
                  example: 2023-06-30T00:00:00.000Z
                  format: date
                  description: The planned end date for the survey
                config_status:
                  type: string
                  example: In Progress - Configuration
                  description: The status of the survey's configuration
                  enum:
                    - In Progress - Configuration
                    - In Progress - Backend Setup
                    - Done
                state:
                  type: string
                  example: Draft
                  description: The current state of the survey
                  enum:
                    - Draft
                    - Active
                    - Past
                created_by_user_uid:
                  type: integer
                  example: 10669
                  description: The user ID of the user who created the survey
              required:
                - survey_id
                - survey_name
                - project_name
                - surveying_method
                - irb_approval
                - planned_start_date
                - planned_end_date
                - config_status
                - state
                - created_by_user_uid
      responses:
        '200':
          description: The survey was created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: success
                      survey:
                        type: object
                        properties:
                          survey_uid:
                            type: integer
                            example: 19
                            description: The database-assigned unique identifier for the survey
                          survey_id:
                            type: string
                            example: AgriFieldnet
                            description: The unique identifier for the survey
                          survey_name:
                            type: string
                            example: Agrifieldnet Main Survey Form
                            description: The name of the survey
                          project_name:
                            type: string
                            example: AgriFieldnet Survey
                            description: The name of the project the survey belongs to
                          survey_description:
                            type: string
                            example: 'AgriFieldnet survey starting on 1st Jan, 2023'
                            description: A description
                          surveying_method:
                            type: string
                            enum:
                              - phone
                              - in-person
                            example: in-person
                          irb_approval:
                            type: string
                            enum:
                              - 'Yes'
                              - 'No'
                              - Pending
                            example: Pending
                          planned_start_date:
                            type: string
                            format: date
                            example: 2023-01-01T00:00:00.000Z
                          planned_end_date:
                            type: string
                            format: date
                            example: 2023-06-30T00:00:00.000Z
                          config_status:
                            type: string
                            enum:
                              - In Progress - Configuration
                              - In Progress - Backend Setup
                              - Done
                            example: In Progress - Configuration
                          state:
                            type: string
                            enum:
                              - Draft
                              - Active
                              - Past
                            example: Draft
                          last_updated_at:
                            type: string
                            format: date-time
                            example: 2023-04-18T00:00:00.000Z
        '400':
          description: A survey with the same survey_id already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: survey_id already exists
  /surveys/<survey_uid>/basic-information:
    get:
      summary: Get basic information for a specific survey
      description: Returns basic information about a specific survey
      tags:
        - Surveys
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: Basic information related to a specific survey
                    items:
                      type: object
                      properties:
                        survey_uid:
                          type: integer
                          description: The unique ID of the survey.
                        survey_id:
                          type: string
                          description: The ID of the survey.
                        survey_name:
                          type: string
                          description: The name of the survey.
                        project_name:
                          type: string
                          description: The name of the project that the survey belongs to.
                        survey_description:
                          type: string
                          description: A description of the survey.
                        surveying_method:
                          type: string
                          description: 'The method of surveying, e.g. in-person, phone.'
                        irb_approval:
                          type: string
                          description: >-
                            The status of the IRB approval, e.g. Yes, No,
                            Pending.
                        planned_start_date:
                          type: string
                          description: >-
                            The planned start date of the survey in ISO 8601
                            format.
                        planned_end_date:
                          type: string
                          description: >-
                            The planned end date of the survey in ISO 8601
                            format.
                        state:
                          type: string
                          description: 'The state of the survey, e.g. Draft, Active, Past.'
                        last_updated_at:
                          type: string
                          description: >-
                            The date and time that the survey was last updated
                            in ISO 8601 format.
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
        '404':
          description: No surveys found for the specified user or all users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating that no surveys were found.
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
  /surveys/<survey_uid>/config-status:
    get:
      summary: Get configuration status for each module for a specific survey
      description: Returns module configuration status for a specific survey
      tags:
        - Surveys
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: Configuration status for a specific survey
                    items:
                      type: object
                      properties:
                        Basic information:
                          type: object
                          description: Status of basic information module of the survey
                          items:
                            type: object
                            properties:
                              status:
                                type: string
                                description: Configration Status (Not started/ In progress/ Done)
                        Survey information:
                          type: array
                          description: Status of modules in the survey information section of the survey
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                description: Name of the module like SurveyCTO information, Field supervisor roles etc.
                              status:
                                type: string
                                description: Configration Status (Not started/ In progress/ Done)
                        Module selection:
                          type: object
                          description: Status of module selection for the survey
                          items:
                            type: object
                            properties:
                              status:
                                type: string
                                description: Configration Status (Not started/ In progress/ Done)
                        overall_status:
                          type: string
                          description: Overall Status (In progress - Configuration/ In Progress - Backend Setup/ Done)
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
        '404':
          description: No surveys found for the specified user or all users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating that no surveys were found.
                  success:
                    type: boolean
                    description: Indicates whether the request was successful.
  /modules:
    get:
      tags:
        - Module Selection
      summary: Get all modules
      description: Get a list of all modules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        module_id:
                          type: integer
                          format: int64
                          description: ID of the module
                        name:
                          type: string
                          description: Name of the module
                        optional:
                          type: boolean
                          description: Indicates if the module is optional
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: No modules found.
  /module-status:
    post:
      tags:
        - Module Selection
      summary: Add selected modules for a particular survey
      description: Add selected modules for a particular survey, with a default config_status of `not started`.
      requestBody:
        description: JSON object containing survey ID and list of module IDs
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_id:
                  type: integer
                  description: ID of the survey to add module status for
                modules:
                  type: array
                  description: List of module IDs
                  example: [ 1,2,3 ]
      responses:
        '200':
          description: Module added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful
                    example: true
                  message:
                    type: string
                    description: Module status added successfully
                    example: { }
        '400':
          description: Invalid request body or missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the request was successful
                    example: false
                  message:
                    type: string
                    description: Error message
                    example: "Both survey_id and modules are required."
  /modules/{module_id}/status/{survey_uid}:
    put:
      tags:
        - Module Selection
      summary: Update status of a module for a specific survey
      parameters:
        - in: path
          name: module_id
          schema:
            type: integer
          required: true
          description: The ID of the module to update the status for
        - in: path
          name: survey_uid
          schema:
            type: integer
          required: true
          description: The ID of the survey to update the status for
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config_status:
                  type: string
                  enum: [ Done, In Progress, Not Started, Error ]
      responses:
        '200':
          description: Successfully updated module status for survey
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    example:
                      survey_uid: 1
                      module_id: 2
                      config_status: Done
        '400':
          description: Bad request. Either module_id or survey_uid or status missing in the request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Both module_id and survey_uid and status are required.
        '404':
          description: The requested module or survey was not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: The requested module or survey was not found
  /module-status/{survey_uid}:
    get:
      tags:
        - Module Selection
      summary: Get module status for a survey
      description: |
        Returns the completion status of all modules for a given survey.
        - `survey_uid`: ID of the survey for which to retrieve module status.
        **Note**: If the survey ID is not found, a 404 error will be returned.
      parameters:
        - name: survey_uid
          in: path
          description: ID of the survey
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: Returns the completion status of all modules for a given survey.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: List of modules and their completion status for the given survey
                    items:
                      type: object
                      properties:
                        module_id:
                          type: integer
                          description: ID of the module
                        survey_uid:
                          type: integer
                          description: ID of the survey
                        config_status:
                          type: string
                          description: Completion status of the module for the given survey
                          enum: [ 'Done', 'In Progress', 'Not Started', 'Error' ]
        '404':
          description: The specified survey ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  message:
                    type: string
                    description: Error message indicating that the specified survey ID was not found.
  /forms:
    post:
      summary: Create a new form
      tags:
        - Forms
      description: Create a new form
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_uid:
                  type: string
                  description: The unique identifier for the survey
                form_name:
                  type: string
                  description: The name of the form to display as a label on the web app
                scto_form_id:
                  type: string
                  description: The form's SurveyCTO form ID
                tz_name:
                  type: string
                  description: The timezone in which data collection will happen for the form
                scto_server_name:
                  type: string
                  description: The SurveyCTO server name for the form
                encryption_key_shared:
                  type: boolean
                  description:
                    Whether the encryption key for the form has been shared with the SurveyStream team
                server_access_role_granted:
                  type: boolean
                  description:
                    Whether the SurveyStream team has been granted access to the SurveyCTO server for the form
                server_access_allowed:
                  type: boolean
                  description:
                    Whether the SurveyStream team has been granted access to the SurveyCTO server for the form
              required:
                - survey_uid
                - scto_form_id
                - form_name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey_uid:
                    type: string
                    description: The unique ID of the survey
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  form_name:
                    type: string
                    description: The name of the form
                  scto_form_id:
                    type: string
                    description: The form's SurveyCTO form ID
                  tz_name:
                    type: string
                    description: The timezone in which data collection will happen for the form
                  scto_server_name:
                    type: string
                    description: The SurveyCTO server name for the form
                  encryption_key_shared:
                    type: boolean
                    description:
                      Whether the encryption key for the form has been shared with the SurveyStream team
                  server_access_role_granted:
                    type: boolean
                    description:
                      Whether the SurveyStream team has been granted access to the SurveyCTO server for the form
                  server_access_allowed:
                    type: boolean
                    description:
                      Whether the SurveyStream team has been granted access to the SurveyCTO server for the form
                  last_ingested_at:
                    type: string
                    description: >-
                      Date when form submissions were last ingested from
                      SurveyCTO in isoformat
        '400':
          description: A form with the same survey_uid and scto_form_id already exists, or a form with the same survey_uid and form_name already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: Error message indicating that the form could not be created.
  /forms/{form_uid}:
    get:
      summary: Get forms
      description: Return the information for the requested form. If path parameter is not provided, return all forms for the logged in user.
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
        - in: query
          name: survey_uid
          schema:
            type: integer
          required: false
          description: Unique ID of the survey to return forms for. Cannot be used in conjuction with the `form_uid` path parameter.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey_uid:
                    type: string
                    description: The unique ID of the survey
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  form_name:
                    type: string
                    description: The name of the form
                  scto_form_id:
                    type: string
                    description: The form's SurveyCTO form ID
                  tz_name:
                    type: string
                    description: The timezone in which data collection will happen for the form
                  scto_server_name:
                    type: string
                    description: The SurveyCTO server name for the form
                  encryption_key_shared:
                    type: boolean
                    description:
                      Whether the encryption key for the form has been shared with the SurveyStream team
                  server_access_role_granted:
                    type: boolean
                    description:
                      Whether the SurveyStream team has been granted access to the SurveyCTO server for the form
                  server_access_allowed:
                    type: boolean
                    description:
                      Whether the SurveyStream team has been granted access to the SurveyCTO server for the form
                  last_ingested_at:
                    type: string
                    description: >-
                      Date when form submissions were last ingested from
                      SurveyCTO in isoformat
        '404':
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: Error message indicating that the specified form ID was not found.
    put:
      summary: Update an existing form
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      description: Update an existing form
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The unique identifier for the form
                survey_uid:
                  type: string
                  description: The unique identifier for the survey
                form_name:
                  type: string
                  description: The name of the form to display as a label on the web app
                scto_form_id:
                  type: string
                  description: The form's SurveyCTO form ID
                tz_name:
                  type: string
                  description: The timezone in which data collection will happen for the form
                scto_server_name:
                  type: string
                  description: The SurveyCTO server name for the form
                encryption_key_shared:
                  type: boolean
                  description:
                    Whether the encryption key for the form has been shared with the SurveyStream team
                server_access_role_granted:
                  type: boolean
                  description:
                    Whether the SurveyStream team has been granted access to the SurveyCTO server for the form
                server_access_allowed:
                  type: boolean
                  description:
                    Whether the SurveyStream team has been granted access to the SurveyCTO server for the form
              required:
                - survey_uid
                - scto_form_id
                - form_name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  survey_uid:
                    type: string
                    description: The unique ID of the survey
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  form_name:
                    type: string
                    description: The name of the form
                  scto_form_id:
                    type: string
                    description: The form's SurveyCTO form ID
                  tz_name:
                    type: string
                    description: The timezone in which data collection will happen for the form
                  scto_server_name:
                    type: string
                    description: The SurveyCTO server name for the form
                  encryption_key_shared:
                    type: boolean
                    description:
                      Whether the encryption key for the form has been shared with the SurveyStream team
                  server_access_role_granted:
                    type: boolean
                    description:
                      Whether the SurveyStream team has been granted access to the SurveyCTO server for the form
                  server_access_allowed:
                    type: boolean
                    description:
                      Whether the SurveyStream team has been granted access to the SurveyCTO server for the form
                  last_ingested_at:
                    type: string
                    description: >-
                      Date when form submissions were last ingested from
                      SurveyCTO in isoformat
        '404':
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: Error message indicating that the specified form ID was not found.
    delete:
      summary: Delete a form
      tags:
        - Forms
      description: Delete a form
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      responses:
        '200':
          description: OK
        '404':
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: Error message indicating that the specified form ID was not found.
  /forms/{form_uid}/scto-question-mapping:
    get:
      summary: Get SurveyCTO question mapping for a form
      description: >-
        Return the SurveyCTO question mapping information for the requested form. 
        The SurveyCTO question mapping information is used to map SurveyStream variables to SurveyCTO questions.
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  survey_status:
                    type: string
                    description: The status of the survey
                  revisit_section:
                    type: string
                    description: The form's revisit section
                  enumerator_id:
                    type: string
                    description: The form's enumerator ID
                  target_id:
                    type: string
                    description: The form's target ID
                  locations:
                    type: object
                    description:
                      The mapping of SurveyStream variables to SurveyCTO questions for the form locations
        '404':
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: Error message indicating that the specified form ID was not found.
    post:
      summary: Create a SurveyCTO question mapping
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      description: Create a SurveyCTO question mapping
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The unique ID of the form
                survey_status:
                  type: string
                  description: The status of the survey
                revisit_section:
                  type: string
                  description: The form's revisit section
                enumerator_id:
                  type: string
                  description: The form's enumerator ID
                target_id:
                  type: string
                  description: The form's target ID
                locations:
                  type: object
                  description:
                    The mapping of SurveyStream variables to SurveyCTO questions for the form locations
              required:
                - form_uid
                - survey_status
                - revisit_section
                - enumerator_id
                - target_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  "success":
                    type: boolean
                    description: Indicates whether the request was successful
        '404':
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: Error message indicating that the specified form ID was not found.
    put:
      summary: Update an existing SurveyCTO question mapping
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      description: Update an existing SurveyCTO question mapping
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                  description: The unique ID of the form
                survey_status:
                  type: string
                  description: The status of the survey
                revisit_section:
                  type: string
                  description: The form's revisit section
                enumerator_id:
                  type: string
                  description: The form's enumerator ID
                target_id:
                  type: string
                  description: The form's target ID
                locations:
                  type: object
                  description:
                    The mapping of SurveyStream variables to SurveyCTO questions for the form locations
              required:
                - form_uid
                - survey_status
                - revisit_section
                - enumerator_id
                - target_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  form_uid:
                    type: integer
                    description: The unique ID of the form
                  survey_status:
                    type: string
                    description: The status of the survey
                  revisit_section:
                    type: string
                    description: The form's revisit section
                  enumerator_id:
                    type: string
                    description: The form's enumerator ID
                  target_id:
                    type: string
                    description: The form's target ID
                  locations:
                    type: object
                    description:
                      The mapping of SurveyStream variables to SurveyCTO questions for the form locations
        '404':
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: Error message indicating that the specified form ID was not found.
    delete:
      summary: Delete an existing SurveyCTO question mapping
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      description: Delete an existing SurveyCTO question mapping
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  "success":
                    type: boolean
                    description: Indicates whether the request was successful
        '404':
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: Error message indicating that the specified form ID was not found.
  /forms/{form_uid}/scto-form-definition/refresh:
    post:
      summary: Refresh the SurveyCTO form definition
      tags:
        - Forms
      description: >-
        Refresh the SurveyCTO form definition from the SurveyCTO server and store it in the database. 
        The old form definition will be deleted and a new one created, which will increment the `question_uid` and `list_uid`.
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      responses:
        '200':
          description: OK
        '404':
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: Error message indicating that the specified form ID was not found.
  /forms/{form_uid}/scto-form-definition:
    get:
      summary: Get the SurveyCTO form definition for a form
      tags:
        - Forms
      description: Get the SurveyCTO form definition for a form
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: object
                    description: The SurveyCTO form definition for the form
                    properties:
                      questions:
                        description: >-
                          The SurveyCTO form questions from the `Survey` tab
                        type: array
                        items:
                          type: object
                          properties:
                            question_uid:
                              type: integer
                              description: ID of the question
                            form_uid:
                              type: integer
                              description: ID of the form
                            question_name:
                              type: string
                              description: Name of the question
                            question_type:
                              type: string
                              description: Type of the question
                            list_uid:
                              type: integer
                              description: ID of the choice list
                            is_repeat_group:
                              type: boolean
                              description: Indicates if the question is a repeat group
                      settings:
                        type: object
                        description: The SurveyCTO form settings from the `Settings` tab
                        properties:
                          form_uid:
                            type: integer
                            description: ID of the form
                          form_title:
                            type: string
                            description: Name of the form
                          version:
                            type: string
                            description: Version of the form
                          submission_url:
                            type: string
                            description: URL to submit the form to
                          public_key:
                            type: string
                            description: The form's public key
                          default_language:
                            type: string
                            description: The form's default language
        '404':
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: Error message indicating that the specified form ID was not found.
    delete:
      summary: Delete an existing SurveyCTO form definition
      tags:
        - Forms
      parameters:
        - in: path
          name: form_uid
          schema:
            type: integer
          required: true
          description: Unique ID of the form
      description: Delete an existing SurveyCTO form definition
      responses:
        '204':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  "success":
                    type: boolean
                    description: Indicates whether the request was successful
        '404':
          description: The specified form ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  error:
                    type: string
                    description: Error message indicating that the specified form ID was not found.
  /enumerators:
    get:
      summary: Get enumerators
      description: Return the logged in user's enumerators for the given form
      tags:
        - Enumerators
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    enumerator_id:
                      type: string
                      description: The ID of the enumerator
                    enumerator_uid:
                      type: integer
                      description: The unique ID of the enumerator
                    name:
                      type: string
                      description: The name of the enumerator
                    language:
                      type: string
                      description: The primary language of the enumerator
                    gender:
                      type: string
                      description: The gender of the enumerator
                    home_state:
                      type: string
                      description: The home state of the enumerator
                    home_district:
                      type: string
                      description: The home district of the enumerator
                    home_block:
                      type: string
                      description: The home block of the enumerator
                    home_address:
                      type: string
                      description: The home address of the enumerator
                    phone_primary:
                      type: string
                      description: The primary phone number of the enumerator
                    phone_secondary:
                      type: string
                      description: The secondary phone number of the enumerator
                    status:
                      type: string
                      enum:
                        - Active
                        - Temp. inactive
                        - Dropout
                      description: The working status of the enumerator
                    locations:
                      type: array
                      description: >-
                        An array of locations associated with the enumerator.
                        Each array item is an object of the form {`location`_id:
                        _location_id_, `location`_name: _location_name_} in
                        descending order from highest to lowest level location.
                    supervisors:
                      type: array
                      description: >-
                        An array of supervisors associated with the enumerator.
                        Array items are in descending order from highest to
                        lowest level supervisor working under the logged in
                        user.
                      items:
                        type: object
                        properties:
                          role_name:
                            type: string
                            description: >-
                              The role of the supervisor, .e.g. regional
                              coordinator, cluster coordinator
                          level:
                            type: number
                            description: >-
                              The level of the supervisor. Counting starts at 0
                              with the core team and ascends for each
                              successively lower level of the supervisor
                              hierarchy.
                          supervisor_name:
                            type: string
                            description: The name of the supervisor
                          supervisor_email:
                            type: string
                            description: The email of the supervisor
                    forms:
                      type: array
                      description: >-
                        An array of form names of the forms in the given survey
                        the enumerator is working on
                      items:
                        type: string
                    form_productivity:
                      type: array
                      description: >-
                        An array of productivity details for each form the
                        enumerator is working on in the given survey
                      items:
                        type: object
                        properties:
                          form_name:
                            type: string
                            description: The name of the form
                          total_complete:
                            type: integer
                            description: >-
                              The enumerator's total completed targets for the
                              form
                          total_assigned:
                            type: integer
                            description: >-
                              The enumerator's total assigned targets for the
                              form
  /enumerators/{enumerator_uid}:
    patch:
      summary: Update enumerator status
      description: >
        Set the status of an enumerator to Active, Temp. Inactive, or Dropout 


        The status update is applied to all forms the enumerator is working on
        in the given form's survey 


        If the status is set to "Dropout" all the enumerator's assignments on
        the given form's survey will be released
      tags:
        - Enumerators
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form_uid:
                  type: integer
                status:
                  type: string
                  enum:
                    - Active
                    - Temp. inactive
                    - Dropout
              required:
                - form_uid
                - status
      responses:
        '200':
          description: Record updated
        '400':
          description: Record not found
        '403':
          description: X-CSRF-Token required in header
        '422':
          description: Form errors
  /targets:
    get:
      summary: Get targets
      description: Return the logged in user's targets for the given form
      tags:
        - Targets
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    target_id:
                      type: string
                      description: The ID of the target
                    respondent_names:
                      type: array
                      description: The names of the respondents
                      items:
                        type: string
                        description: Respondent name
                    respondent_phone_primary:
                      type: string
                      description: The primary phone number of the target
                    respondent_phone_secondary:
                      type: string
                      description: The secondary phone number of the target
                    address:
                      type: string
                      description: The address of the target
                    gps_latitude:
                      type: string
                      description: The latitude of the target
                    gps_longitude:
                      type: string
                      description: The longitude of the target
                    custom_fields:
                      type: object
                      description: >-
                        Any non-standard fields that should be displayed for the
                        target
                    final_status:
                      type: string
                      description: >-
                        Grouping of final_survey_status into pending/done
                        categories. Used to determine if the target is
                        assignable.
                      enum:
                        - Pending
                        - Done
                    final_survey_status:
                      type: integer
                      description: >-
                        The survey status from the target's most recent
                        SurveyCTO submission
                    final_survey_status_label:
                      type: string
                      description: The label corresponding to the final_survey_status code
                    webapp_tag_color:
                      type: string
                      description: >-
                        The color that should be used to color the status tag on
                        the web flask_app
                    revisit_sections:
                      type: array
                      description: The revisit sections for the target
                      items:
                        type: string
                        description: Name of the revisit section for the target
                    locations:
                      type: array
                      description: >-
                        An array of locations associated with the target. Each
                        array item is an object of the form {`location`_id:
                        _location_id_, `location`_name: _location_name_} in
                        descending order from highest to lowest level location.
                    supervisors:
                      type: array
                      description: >-
                        An array of supervisors associated with the target.
                        Array items are in descending order from highest to
                        lowest level supervisor working under the logged in
                        user.
                      items:
                        type: object
                        properties:
                          role_name:
                            type: string
                            description: >-
                              The role of the supervisor, .e.g. regional
                              coordinator, cluster coordinator
                          level:
                            type: number
                            description: >-
                              The level of the supervisor. Counting starts at 0
                              with the core team and ascends for each
                              successively lower level of the supervisor
                              hierarchy.
                          supervisor_name:
                            type: string
                            description: The name of the supervisor
                          supervisor_email:
                            type: string
                            description: The email of the supervisor
  /assignments:
    get:
      summary: Get assignments
      description: Return the logged in user's assignment details for the given form
      tags:
        - Assignments
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  assignments:
                    type: array
                    description: >
                      Targets with their assigned surveyors (if any)

                      Corresponds to the main table on the assignments tab of
                      the web app
                    items:
                      type: object
                      properties:
                        assigned_enumerator_id:
                          type: string
                          description: The ID of the surveyor
                        assigned_enumerator_uid:
                          type: integer
                          description: The unique ID of the surveyor
                        assigned_enumerator_name:
                          type: string
                          description: The name of the surveyor
                        target_id:
                          type: string
                          description: The ID of the target
                        target_uid:
                          type: integer
                          description: The unique ID of the target
                        respondent_names:
                          type: array
                          description: The names of the respondents
                          items:
                            type: string
                            description: Respondent name
                        respondent_phone_primary:
                          type: string
                          description: The primary phone number of the target
                        respondent_phone_secondary:
                          type: string
                          description: The secondary phone number of the target
                        address:
                          type: string
                          description: The address of the target
                        gps_latitude:
                          type: string
                          description: The latitude of the target
                        gps_longitude:
                          type: string
                          description: The longitude of the target
                        custom_fields:
                          type: object
                          description: >-
                            Any non-standard fields that should be displayed for
                            the target
                        final_status:
                          type: string
                          description: >-
                            Grouping of final_survey_status into pending/done
                            categories. Used to determine if the target is
                            assignable.
                          enum:
                            - Pending
                            - Done
                        final_survey_status:
                          type: integer
                          description: >-
                            The survey status from the target's most recent
                            SurveyCTO submission
                        final_survey_status_label:
                          type: string
                          description: >-
                            The label corresponding to the final_survey_status
                            code
                        webapp_tag_color:
                          type: string
                          description: >-
                            The color that should be used to color the status
                            tag on the web flask_app
                        revisit_sections:
                          type: array
                          description: The revisit sections for the target
                          items:
                            type: string
                            description: Name of the revisit section for the target
                        locations:
                          type: array
                          description: >-
                            An array of locations associated with the target.
                            Each array item is an object of the form
                            {`location`_id: _location_id_, `location`_name:
                            _location_name_} in descending order from highest to
                            lowest level location.
                        supervisors:
                          type: array
                          description: >-
                            An array of supervisors associated with the target.
                            Array items are in descending order from highest to
                            lowest level supervisor working under the logged in
                            user.
                          items:
                            type: object
                            properties:
                              role_name:
                                type: string
                                description: >-
                                  The role of the supervisor, .e.g. regional
                                  coordinator, cluster coordinator
                              level:
                                type: number
                                description: >-
                                  The level of the supervisor. Counting starts
                                  at 0 with the core team and ascends for each
                                  successively lower level of the supervisor
                                  hierarchy.
                              supervisor_name:
                                type: string
                                description: The name of the supervisor
                              supervisor_email:
                                type: string
                                description: The email of the supervisor
                  surveyors:
                    type: array
                    description: >-
                      The assignable surveyors (status is not "Dropout").
                      Corresponds to the table on the modal screen on the
                      assignments tab of the web flask_app.
                    items:
                      type: object
                      properties:
                        enumerator_id:
                          type: string
                          description: The ID of the enumerator
                        enumerator_uid:
                          type: integer
                          description: The unique ID of the enumerator
                        enumerator_name:
                          type: string
                          description: The name of the enumerator
                        language:
                          type: string
                          description: The primary language of the enumerator
                        gender:
                          type: string
                          description: The gender of the enumerator
                        home_state:
                          type: string
                          description: The home state of the enumerator
                        home_district:
                          type: string
                          description: The home district of the enumerator
                        home_block:
                          type: string
                          description: The home block of the enumerator
                        phone_primary:
                          type: string
                          description: The primary phone number of the enumerator
                        phone_secondary:
                          type: string
                          description: The secondary phone number of the enumerator
                        surveyor_status:
                          type: string
                          enum:
                            - Active
                            - Temp. inactive
                            - Dropout
                          description: The working status of the enumerator
                        locations:
                          type: array
                          description: >-
                            An array of locations associated with the
                            enumerator. Each array item is an object of the form
                            {`location`_id: _location_id_, `location`_name:
                            _location_name_} in descending order from highest to
                            lowest level location.
                        total_pending_targets:
                          type: integer
                          description: Total pending targets for the given survey
                        total_complete_targets:
                          type: integer
                          description: Total complete targets for the given survey
                        form_productivity:
                          type: array
                          description: >-
                            An array of productivity details for each form the
                            enumerator is working on in the given survey
                          items:
                            type: object
                            properties:
                              form_name:
                                type: string
                                description: The name of the form
                              total_complete:
                                type: integer
                                description: >-
                                  The enumerator's total completed targets for
                                  the form
                              total_pending:
                                type: integer
                                description: >-
                                  The enumerator's total pending targets for the
                                  form
    put:
      summary: Update assignments
      description: >
        Update the mapping of enumerators to targets


        Each target can have 0 or 1 enumerators assigned to it, so assigning an
        enumerator to an already-assigned target will overwrite the previous
        assignment


        To unassign an enumerator from a target, include the target_uid value
        and pass a null value for the enumerator_uid
      tags:
        - Assignments
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          description: The value of the CSRF-TOKEN cookie set by `GET /get-csrf`
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              description: A list of target/enumerator pairs
              items:
                type: object
                properties:
                  target_uid:
                    type: integer
                  enumerator_uid:
                    type: integer
                required:
                  - target_uid
                  - enumerator_uid
      responses:
        '200':
          description: Success
        '403':
          description: X-CSRF-Token required in header
        '422':
          description: Form errors
  /table-config:
    get:
      summary: Get table configuration
      description: >-
        Return the web flask_app table configuration details for the given
        form
      tags:
        - Table Configuration
      parameters:
        - in: query
          name: form_uid
          schema:
            type: integer
          description: Unique ID of the form
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  assignments_main:
                    type: array
                    description: >
                      List of column groups and columns with labels and data
                      access keys

                      Corresponds to the main table on the assignments tab of
                      the web app
                    items:
                      type: object
                      properties:
                        group_label:
                          type: string
                          description: The label for the column group
                        columns:
                          type: array
                          description: An array of columns to display for this column group
                          items:
                            type: object
                            properties:
                              column_label:
                                type: string
                                description: The label for the column
                              column_key:
                                type: string
                                description: >-
                                  The column key that can be used to access the
                                  column records in the data response
                  assignments_surveyors:
                    type: array
                    description: >
                      List of column groups and columns with labels and data
                      access keys

                      Corresponds to the surveyors modal table on the
                      assignments tab of the web app
                    items:
                      type: object
                      properties:
                        group_label:
                          type: string
                          description: The label for the column group
                        columns:
                          type: array
                          description: An array of columns to display for this column group
                          items:
                            type: object
                            properties:
                              column_label:
                                type: string
                                description: The label for the column
                              column_key:
                                type: string
                                description: >-
                                  The column key that can be used to access the
                                  column records in the data response
                  assignments_review:
                    type: array
                    description: >
                      List of column groups and columns with labels and data
                      access keys

                      Corresponds to the assignments review modal table on the
                      assignments tab of the web app
                    items:
                      type: object
                      properties:
                        group_label:
                          type: string
                          description: The label for the column group
                        columns:
                          type: array
                          description: An array of columns to display for this column group
                          items:
                            type: object
                            properties:
                              column_label:
                                type: string
                                description: The label for the column
                              column_key:
                                type: string
                                description: >-
                                  The column key that can be used to access the
                                  column records in the data response
                  surveyors:
                    type: array
                    description: >
                      List of column groups and columns with labels and data
                      access keys

                      Corresponds to the main table on the surveyors tab of the
                      web app
                    items:
                      type: object
                      properties:
                        group_label:
                          type: string
                          description: The label for the column group
                        columns:
                          type: array
                          description: An array of columns to display for this column group
                          items:
                            type: object
                            properties:
                              column_label:
                                type: string
                                description: The label for the column
                              column_key:
                                type: string
                                description: >-
                                  The column key that can be used to access the
                                  column records in the data response
                  targets:
                    type: array
                    description: >
                      List of column groups and columns with labels and data
                      access keys

                      Corresponds to the main table on the targets tab of the
                      web app
                    items:
                      type: object
                      properties:
                        group_label:
                          type: string
                          description: The label for the column group
                        columns:
                          type: array
                          description: An array of columns to display for this column group
                          items:
                            type: object
                            properties:
                              column_label:
                                type: string
                                description: The label for the column
                              column_key:
                                type: string
                                description: >-
                                  The column key that can be used to access the
                                  column records in the data response
  '/module-questionnaire/{survey_uid}':
    get:
      tags:
        - Module Questionnaire
      summary: Get module questionnaire responses for a survey
      description: |
        Returns the module questionnaire responses for a given survey.
      parameters:
        - name: survey_uid
          in: path
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: Returns the saved responses for module questionnaire section for a given survey.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: List of modules and their completion status for the given survey
                    items:
                      type: object
                      properties:
                        survey_uid:
                          type: integer
                          description: The unique ID of the survey.
                        target_assignment_criteria:
                          type: array
                          description: Array of selected criteria for target to enumerator assignments
                          example: ['Location', 'Gender']
                        supervisor_assignment_criteria:
                          type: array
                          description: Array of selected criteria for supervisor to enumerator assignments
                          example: ['Location', 'Gender']
                        supervisor_hierarchy_exists:
                          type: boolean
                          description: Whether there is a hierarchy of supervisors
                        reassignment_required:
                          type: boolean
                          description: Whether there will be reassignments during the survey
                        assignment_process:
                          type: string
                          description: 'Process used to perform the assignments of targets to enumerators e.g. Random or Manual'
                        supervisor_enumerator_relation:
                          type: string
                          description: 'Mapping of supervisors to enumerators e.g. 1:many, 1:1 etc.'
                        language_lacation_mapping:
                          type: boolean
                          description: Whether languages can be mapped via locations

        '404':
          description: The specified survey ID was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  message:
                    type: string
                    description: Error message indicating that the specified survey ID was not found.
    put:
      tags:
        - Module Questionnaire
      summary: Save module questionnaire responses for a survey
      description: |
        Saves the module questionnaire responses for a given survey to the database.
        - `survey_uid`: ID of the survey
      requestBody:
        description: JSON object containing survey ID and list of module IDs
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                survey_uid:
                  type: integer
                  description: The unique ID of the survey.
                target_assignment_criteria:
                  type: array
                  description: Array of selected criteria for target to enumerator assignments
                  example: ['Location', 'Gender']
                supervisor_assignment_criteria:
                  type: array
                  description: Array of selected criteria for supervisor to enumerator assignments
                  example: ['Location', 'Gender']
                supervisor_hierarchy_exists:
                  type: boolean
                  description: Whether there is a hierarchy of supervisors
                reassignment_required:
                  type: boolean
                  description: Whether there will be reassignments during the survey
                assignment_process:
                  type: string
                  description: 'Process used to perform the assignments of targets to enumerators e.g. Random or Manual'
                supervisor_enumerator_relation:
                  type: string
                  description: 'Mapping of supervisors to enumerators e.g. 1:many, 1:1 etc.'
                language_lacation_mapping:
                  type: boolean
                  description: Whether languages can be mapped via locations
      responses:
        '200':
          description: Success
        '403':
          description: X-CSRF-Token required in header
        '422':
          description: Form errors
  '/roles':
    get:
      tags:
        - Roles
      summary: Get user roles for a survey
      description: |
        Returns the user roles for a given survey.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: Returns the user roles for a given survey.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: List of roles for the given survey
                    items:
                      type: object
                      properties:
                        role_uid:
                          type: integer
                          description: The unique ID of the role.
                        role_name:
                          type: string
                          description: The name of the role.
                        reporting_role_uid:
                          type: integer
                          description: The unique role ID of role that supervises the given role.
                        survey_uid:
                          type: integer
                          description: The unique ID of the given survey.
    put:
      tags:
        - Roles
      summary: Save the user roles for a survey
      description: |
        Saves the user roles for a given survey to the database. If a role_uid is provided, the role will be updated. If role_uid is `None`, a new role will be created. Existing roles in the database that are not in the payload (by `role_uid`) will be deleted.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      requestBody:
        description: JSON object containing the desired roles for the survey.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                  - roles
              properties:
                roles:
                  type: array
                  description: Full list of roles for the given survey
                  items:
                    type: object
                    required:
                      - role_uid
                      - role_name
                      - reporting_role_uid
                    properties:
                      role_uid:
                        type: integer
                        nullable: true
                        description: The unique ID of the role. If equal to None, a new role will be created. 
                      role_name:
                        type: string
                        nullable: false
                        description: The name of the role. 
                      reporting_role_uid:
                        type: integer
                        nullable: true
                        description: The unique role ID of role that supervises the given role.
                validate_hierarchy:
                  type: boolean
                  description: |
                    Whether to validate the hierarchy of the roles. Set this as true when updating the reporting_role_uid fields of the roles.
                    This will check that the role hierarchy is a valid tree structure.
      responses:
        '200':
          description: Success
        '403':
          description: X-CSRF-Token required in header
        '422':
          description: Form errors
            Form errors
            When `validate_hierarchy` is set to true, any validation errors will be returned as an array under the `errors` key in the response.
  /timezones:
    get:
      summary: Get the list of postgres timezones
      tags:
        - Misc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: List of postgres timezones
                    items:
                      type: object
                      description: Postgres timezone object
                      properties:
                        name:
                          type: string
                          description: Postgres timezone name
                        abbrev:
                          type: string
                          description: Postgres timezone abbreviation
                        utc_offset:
                          type: string
                          description: Postgres timezone UTC offset
  '/locations/geo-levels':
    get:
      tags:
        - Locations
      summary: Get geo levels for a survey
      description: |
        Returns the geo levels for a given survey.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer

      responses:
        '200':
          description: Returns the geo levels for a given survey.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: array
                    description: List of geo levels for the given survey
                    items:
                      type: object
                      properties:
                        geo_level_uid:
                          type: integer
                          description: The unique ID of the geo level.
                        geo_level_name:
                          type: string
                          description: The name of the geo level.
                        parent_geo_level_uid:
                          type: integer
                          description: The unique ID of geo level that is the parent of the given geo level.
                        survey_uid:
                          type: integer
                          description: The unique ID of the given survey.
    put:
      tags:
        - Locations
      summary: Save the geo levels for a survey
      description: |
        Saves the geo levels for a given survey to the database. If a geo_level_uid is provided, the geo level will be updated. If geo_level_uid is `None`, a new geo level will be created. Existing geo levels in the database that are not in the payload (by `geo_level_uid`) will be deleted.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      requestBody:
        description: JSON object containing the desired geo levels for the survey.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                  - geo_levels
              properties:
                geo_levels:
                  type: array
                  description: Full list of geo levels for the given survey
                  items:
                    type: object
                    properties:
                      geo_level_uid:
                        type: integer
                        nullable: true
                        description: The unique ID of the geo level. If equal to None, a new geo level will be created.
                      geo_level_name:
                        type: string
                        nullable: false
                        description: The name of the geo level.
                      parent_geo_level_uid:
                        type: integer
                        nullable: true
                        description: The unique ID of geo level that is the parent of the given geo level.
                validate_hierarchy:
                  type: boolean
                  description: |
                    Whether to validate the hierarchy of the geo levels. Set this as true when updating the parent_geo_level_uid fields of the geo levels.
                    This will check that the location type hierarchy is a valid tree structure.


      responses:
        '200':
          description: Success
        '403':
          description: X-CSRF-Token required in header
        '422':
          description: |
            Form errors
            When `validate_hierarchy` is set to true, any validation errors will be returned as an array under the `errors` key in the response.
  '/locations':
    get:
      tags:
        - Locations
      summary: Get locations for a survey
      description: |
        Returns the locations for a given survey.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the locations for a given survey.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates whether the request was successful
                  data:
                    type: object
                    properties:
                      ordered_columns:
                        type: array
                        description: |
                          List of columns to display in the table in the correct order. 
                          These will be of the form [<geo level 1 name> ID, <geo level 1 name> Name, <geo level 2 name> ID, <geo level 2 name> Name, ...]. 
                          For example, ["State ID", "State Name", "District ID", "District Name", "Block ID", "Block Name"].
                          The order of geo levels will be descending from the top level geo level to the lowest level geo level.
                          Will be empty if no geo levels have been configured for the given survey.
                      records:
                        type: array
                        description: |
                          List of location objects for the given survey. Each location object contains keys corresponding to the columns in the `ordered_columns` array.
                          The columns are determined by the geo levels for the given survey, so columns will vary from survey to survey.
                          Will be empty of no geo levels or no locations have been configured for the given survey.
        '500':
          description: |
            Error message indicating that the locations could not be retrieved.
            If the location type hierarchy is invalid, the `errors` key will contain a `geo_level_hierarchy` key with an error message string.
 
    post:
      tags:
        - Locations
      summary: Upload a locations CSV file for a survey
      description: |
        Upload a locations CSV file for a given survey to the database. A column mapping is required in the payload to map the columns in the CSV file to the geo levels for the given survey.
      parameters:
        - name: survey_uid
          in: query
          description: The unique ID of the survey.
          required: true
          schema:
            type: integer
      requestBody:
        description: JSON object containing locations file content and geo level column mapping.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                geo_level_mapping:
                  type: array
                  description: An array of objects mapping the columns in the CSV file to the geo levels for the given survey.
                  items:
                    type: object
                    properties:
                      geo_level_uid:
                        type: integer
                        nullable: false
                        description: The unique ID of the geo level.
                      location_id_column:
                        type: string
                        nullable: false
                        description: The name of the column in the CSV file that contains the location id for the given geo level.
                      location_name_column:
                        type: integer
                        nullable: false
                        description: The name of the column in the CSV file that contains the location name for the given geo level.
                    required:
                      - geo_level_uid
                      - location_id_column
                      - location_name_column
                file:
                  type: string
                  description: Base64 encoded CSV file content
              required:
                - geo_level_mapping
                - file


      responses:
        '200':
          description: Success
        '403':
          description: X-CSRF-Token required in header
        '422':
          description: |
            Form errors
            Validation errors for the geo level mapping will be returned as an array under the `geo_level_mapping` key in the `errors` key of the response.
            Validation errors for the file will be returned as an array under the `file` key in the `errors` key of the response.
            Validation errors for the location type hierarchy will be returned as an array under the `geo_level_hierarchy` key in the `errors` key of the response.
            Note that the file validation will only be run if the geo level mapping is valid.