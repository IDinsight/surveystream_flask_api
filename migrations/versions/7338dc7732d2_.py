"""Removing primary key constraint on choice labels table and adding choice_label_uid as primary key.
This migration is necessary to handle the fact that SurveyCTO does not enforce uniqueness on (list_uid, choice_value, language)
and allows duplicate entries. The new choice_label_uid will serve as the primary key for the table.

Revision ID: 7338dc7732d2
Revises: 9381e3a4dabc
Create Date: 2025-08-22 19:15:31.437099

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7338dc7732d2'
down_revision = '9381e3a4dabc'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Step 1: Create a new sequence for choice_label_uid
    op.execute("""
        CREATE SEQUENCE webapp.scto_form_choice_labels_choice_label_uid_seq;
    """)

    # Step 2: Add the new choice_label_uid column, nullable initially
    with op.batch_alter_table('scto_form_choice_labels', schema='webapp') as batch_op:
        batch_op.add_column(
            sa.Column('choice_label_uid', sa.Integer(), nullable=True)
        )

    # Step 3: backfill existing rows with unique values
    op.execute("""
        UPDATE webapp.scto_form_choice_labels
        SET choice_label_uid = nextval('webapp.scto_form_choice_labels_choice_label_uid_seq')
        WHERE choice_label_uid IS NULL
    """)

    # Step 4: Set the default on the new column
    op.execute("""
        ALTER TABLE webapp.scto_form_choice_labels
        ALTER COLUMN choice_label_uid
        SET DEFAULT nextval('webapp.scto_form_choice_labels_choice_label_uid_seq')
    """)

    # Step 5: Make column NOT NULL, update the primary key constraint
    with op.batch_alter_table('scto_form_choice_labels', schema='webapp') as batch_op:
        batch_op.alter_column('choice_label_uid', nullable=False)

        batch_op.drop_constraint(
            'pk_scto_form_choice_labels', type_='primary',
        )
        batch_op.create_primary_key(
            'pk_scto_form_choice_labels', ['choice_label_uid']
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('scto_form_choice_labels', schema='webapp') as batch_op:
        
        batch_op.drop_constraint(
            'pk_scto_form_choice_labels', type_='primary',
        )
        batch_op.drop_column('choice_label_uid')
        batch_op.create_primary_key(
            'pk_scto_form_choice_labels', ['list_uid', 'choice_value', 'language']
        )

    # Drop the sequence (if it exists)
    op.execute("""
        DROP SEQUENCE IF EXISTS webapp.scto_form_choice_labels_choice_label_uid_seq CASCADE
    """)

    # ### end Alembic commands ###
