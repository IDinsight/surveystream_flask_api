"""Update survey method constraint

Revision ID: bf548e097b10
Revises: 33b8ce72b8e9
Create Date: 2023-09-08 12:26:45.172707

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bf548e097b10'
down_revision = '33b8ce72b8e9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "modules",
        sa.Column("module_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("optional", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("module_id", name=op.f("pk_modules")),
        sa.UniqueConstraint("name", name=op.f("uq_modules_name")),
        schema="webapp",
    )
    op.create_table(
        "users",
        sa.Column("user_uid", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password_secure", sa.String(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("middle_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("home_state", sa.String(), nullable=True),
        sa.Column("home_district", sa.String(), nullable=True),
        sa.Column("phone_primary", sa.String(), nullable=True),
        sa.Column("phone_secondary", sa.String(), nullable=True),
        sa.Column("avatar_s3_filekey", sa.String(), nullable=True),
        sa.Column("active", sa.Boolean(), server_default="t", nullable=False),
        sa.PrimaryKeyConstraint("user_uid", name=op.f("pk_users")),
        sa.UniqueConstraint("email", name=op.f("uq_users_email")),
        schema="webapp",
    )
    op.create_table(
        "reset_password_tokens",
        sa.Column("reset_uid", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_uid", sa.Integer(), nullable=False),
        sa.Column("secret_token", sa.String(), nullable=False),
        sa.Column("generated_utc", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_uid"],
            ["webapp.users.user_uid"],
            name=op.f("fk_reset_password_tokens_user_uid_users"),
        ),
        sa.PrimaryKeyConstraint("reset_uid", name=op.f("pk_reset_password_tokens")),
        sa.UniqueConstraint("user_uid", name=op.f("uq_reset_password_tokens_user_uid")),
        schema="webapp",
    )
    op.create_table(
        "surveys",
        sa.Column("survey_uid", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("survey_id", sa.String(length=64), nullable=False),
        sa.Column("survey_name", sa.String(length=256), nullable=False),
        sa.Column("project_name", sa.String(length=256), nullable=True),
        sa.Column("survey_description", sa.String(length=1024), nullable=True),
        sa.Column(
            "surveying_method",
            sa.String(length=16),
            sa.CheckConstraint(
                "surveying_method IN ('phone', 'in-person', 'mixed-mode')",
                name="ck_surveys_surveying_method",
            ),
            nullable=False,
        ),
        sa.Column("planned_start_date", sa.Date(), nullable=False),
        sa.Column("planned_end_date", sa.Date(), nullable=False),
        sa.Column(
            "irb_approval",
            sa.String(length=8),
            sa.CheckConstraint(
                "irb_approval IN ('Yes','No','Pending')",
                name="ck_surveys_irb_approval",
            ),
            nullable=False,
        ),
        sa.Column(
            "config_status",
            sa.String(length=32),
            sa.CheckConstraint(
                "config_status IN ('In Progress - Configuration','In Progress - Backend Setup','Done')",
                name="ck_surveys_config_status",
            ),
            nullable=True,
        ),
        sa.Column(
            "state",
            sa.String(length=16),
            sa.CheckConstraint(
                "state IN ('Draft','Active','Past')", name="ck_surveys_state"
            ),
            nullable=True,
        ),
        sa.Column("created_by_user_uid", sa.Integer(), nullable=True),
        sa.Column("last_updated_at", sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by_user_uid"],
            ["webapp.users.user_uid"],
            name=op.f("fk_surveys_created_by_user_uid_users"),
        ),
        sa.PrimaryKeyConstraint("survey_uid", name=op.f("pk_surveys")),
        sa.UniqueConstraint("survey_id", name=op.f("uq_surveys_survey_id")),
        sa.UniqueConstraint("survey_name", name=op.f("uq_surveys_survey_name")),
        schema="webapp",
    )
    op.create_table(
        "geo_levels",
        sa.Column("geo_level_uid", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("survey_uid", sa.Integer(), nullable=False),
        sa.Column("geo_level_name", sa.String(), nullable=False),
        sa.Column("parent_geo_level_uid", sa.Integer(), nullable=True),
        sa.Column("user_uid", sa.Integer(), nullable=True),
        sa.Column("to_delete", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_geo_level_uid"],
            ["webapp.geo_levels.geo_level_uid"],
            name=op.f("fk_geo_levels_parent_geo_level_uid_geo_levels"),
        ),
        sa.ForeignKeyConstraint(
            ["survey_uid"],
            ["webapp.surveys.survey_uid"],
            name=op.f("fk_geo_levels_survey_uid_surveys"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("geo_level_uid", name=op.f("pk_geo_levels")),
        sa.UniqueConstraint(
            "survey_uid",
            "geo_level_name",
            deferrable="True",
            name="_survey_uid_geo_level_name_uc",
        ),
        schema="webapp",
    )
    op.create_table(
        "module_questionnaire",
        sa.Column("survey_uid", sa.Integer(), nullable=False),
        sa.Column(
            "target_assignment_criteria", postgresql.ARRAY(sa.String()), nullable=True
        ),
        sa.Column(
            "supervisor_assignment_criteria",
            postgresql.ARRAY(sa.String()),
            nullable=True,
        ),
        sa.Column("supervisor_hierarchy_exists", sa.Boolean(), nullable=True),
        sa.Column("reassignment_required", sa.Boolean(), nullable=True),
        sa.Column(
            "assignment_process",
            sa.String(),
            sa.CheckConstraint(
                "assignment_process IN ('Manual','Random')",
                name="ck_module_questionnaire_assignment_process",
            ),
            nullable=True,
        ),
        sa.Column(
            "supervisor_surveyor_relation",
            sa.String(),
            sa.CheckConstraint(
                "supervisor_surveyor_relation IN ('1:1', '1:many', 'many:1', 'many:many')",
                name="ck_module_questionnaire_supervisor_surveyor_relation",
            ),
            nullable=True,
        ),
        sa.Column("language_location_mapping", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["survey_uid"],
            ["webapp.surveys.survey_uid"],
            name=op.f("fk_module_questionnaire_survey_uid_surveys"),
        ),
        sa.PrimaryKeyConstraint("survey_uid", name=op.f("pk_module_questionnaire")),
        schema="webapp",
    )
    op.create_table(
        "module_status",
        sa.Column("survey_uid", sa.Integer(), nullable=False),
        sa.Column("module_id", sa.Integer(), nullable=False),
        sa.Column(
            "config_status",
            sa.String(),
            sa.CheckConstraint(
                "config_status IN ('Done','In Progress','Not Started', 'Error')",
                name="ck_module_status_config_status",
            ),
            server_default="Not Started",
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["module_id"],
            ["webapp.modules.module_id"],
            name=op.f("fk_module_status_module_id_modules"),
        ),
        sa.ForeignKeyConstraint(
            ["survey_uid"],
            ["webapp.surveys.survey_uid"],
            name=op.f("fk_module_status_survey_uid_surveys"),
        ),
        sa.PrimaryKeyConstraint(
            "survey_uid", "module_id", name=op.f("pk_module_status")
        ),
        schema="webapp",
    )
    op.create_table(
        "parent_forms",
        sa.Column("form_uid", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("survey_uid", sa.Integer(), nullable=False),
        sa.Column("scto_form_id", sa.String(), nullable=False),
        sa.Column("form_name", sa.String(), nullable=False),
        sa.Column("tz_name", sa.String(), nullable=True),
        sa.Column("scto_server_name", sa.String(), nullable=True),
        sa.Column("encryption_key_shared", sa.Boolean(), nullable=True),
        sa.Column("server_access_role_granted", sa.Boolean(), nullable=True),
        sa.Column("server_access_allowed", sa.Boolean(), nullable=True),
        sa.Column("last_ingested_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["survey_uid"],
            ["webapp.surveys.survey_uid"],
            name=op.f("fk_parent_forms_survey_uid_surveys"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("form_uid", name=op.f("pk_parent_forms")),
        sa.UniqueConstraint(
            "survey_uid", "form_name", name="_parent_forms_survey_uid_form_name_uc"
        ),
        sa.UniqueConstraint(
            "survey_uid",
            "scto_form_id",
            name="_parent_forms_survey_uid_scto_form_id_uc",
        ),
        schema="webapp",
    )
    op.create_table(
        "roles",
        sa.Column("role_uid", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("survey_uid", sa.Integer(), nullable=True),
        sa.Column("role_name", sa.String(), nullable=False),
        sa.Column("reporting_role_uid", sa.Integer(), nullable=True),
        sa.Column("user_uid", sa.Integer(), nullable=True),
        sa.Column("to_delete", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["reporting_role_uid"],
            ["webapp.roles.role_uid"],
            name=op.f("fk_roles_reporting_role_uid_roles"),
        ),
        sa.ForeignKeyConstraint(
            ["survey_uid"],
            ["webapp.surveys.survey_uid"],
            name=op.f("fk_roles_survey_uid_surveys"),
        ),
        sa.PrimaryKeyConstraint("role_uid", name=op.f("pk_roles")),
        sa.UniqueConstraint(
            "survey_uid",
            "role_name",
            deferrable="True",
            name="_survey_uid_role_name_uc",
        ),
        schema="webapp",
    )
    op.create_table(
        "locations",
        sa.Column("location_uid", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("survey_uid", sa.Integer(), nullable=False),
        sa.Column("location_id", sa.String(), nullable=False),
        sa.Column("location_name", sa.String(), nullable=False),
        sa.Column("geo_level_uid", sa.Integer(), nullable=False),
        sa.Column("parent_location_uid", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["geo_level_uid"],
            ["webapp.geo_levels.geo_level_uid"],
            name=op.f("fk_locations_geo_level_uid_geo_levels"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["parent_location_uid"],
            ["webapp.locations.location_uid"],
            name=op.f("fk_locations_parent_location_uid_locations"),
        ),
        sa.ForeignKeyConstraint(
            ["survey_uid"],
            ["webapp.surveys.survey_uid"],
            name=op.f("fk_locations_survey_uid_surveys"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("location_uid", name=op.f("pk_locations")),
        sa.UniqueConstraint(
            "survey_uid",
            "geo_level_uid",
            "location_id",
            name="_survey_uid_geo_level_uid_location_id_uc",
        ),
        schema="webapp",
    )
    with op.batch_alter_table("locations", schema="webapp") as batch_op:
        batch_op.create_index(
            "ix_locations_survey_uid_geo_level_uid",
            ["survey_uid", "geo_level_uid"],
            unique=False,
        )

    op.create_table(
        "scto_form_choice_lists",
        sa.Column("list_uid", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("form_uid", sa.Integer(), nullable=False),
        sa.Column("list_name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["form_uid"],
            ["webapp.parent_forms.form_uid"],
            name=op.f("fk_scto_form_choice_lists_form_uid_parent_forms"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("list_uid", name=op.f("pk_scto_form_choice_lists")),
        sa.UniqueConstraint(
            "form_uid", "list_name", name=op.f("uq_scto_form_choice_lists_form_uid")
        ),
        schema="webapp",
    )
    op.create_table(
        "scto_form_settings",
        sa.Column("form_uid", sa.Integer(), nullable=False),
        sa.Column("form_title", sa.String(), nullable=True),
        sa.Column("version", sa.String(), nullable=False),
        sa.Column("public_key", sa.String(), nullable=True),
        sa.Column("submission_url", sa.String(), nullable=True),
        sa.Column("default_language", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["form_uid"],
            ["webapp.parent_forms.form_uid"],
            name=op.f("fk_scto_form_settings_form_uid_parent_forms"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("form_uid", name=op.f("pk_scto_form_settings")),
        schema="webapp",
    )
    op.create_table(
        "scto_question_mapping",
        sa.Column("form_uid", sa.Integer(), nullable=False),
        sa.Column("survey_status", sa.String(), nullable=False),
        sa.Column("revisit_section", sa.String(), nullable=False),
        sa.Column("target_id", sa.String(), nullable=False),
        sa.Column("enumerator_id", sa.String(), nullable=False),
        sa.Column("locations", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.ForeignKeyConstraint(
            ["form_uid"],
            ["webapp.parent_forms.form_uid"],
            name=op.f("fk_scto_question_mapping_form_uid_parent_forms"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("form_uid", name=op.f("pk_scto_question_mapping")),
        schema="webapp",
    )
    op.create_table(
        "scto_form_choice_labels",
        sa.Column("list_uid", sa.Integer(), nullable=False),
        sa.Column("choice_value", sa.String(), nullable=False),
        sa.Column("language", sa.String(), nullable=False),
        sa.Column("label", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["list_uid"],
            ["webapp.scto_form_choice_lists.list_uid"],
            name=op.f("fk_scto_form_choice_labels_list_uid_scto_form_choice_lists"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "list_uid",
            "choice_value",
            "language",
            name=op.f("pk_scto_form_choice_labels"),
        ),
        schema="webapp",
    )
    op.create_table(
        "scto_form_questions",
        sa.Column("question_uid", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("form_uid", sa.Integer(), nullable=False),
        sa.Column("question_name", sa.String(), nullable=False),
        sa.Column("question_type", sa.String(), nullable=False),
        sa.Column("list_uid", sa.Integer(), nullable=True),
        sa.Column("is_repeat_group", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["form_uid"],
            ["webapp.parent_forms.form_uid"],
            name=op.f("fk_scto_form_questions_form_uid_parent_forms"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["list_uid"],
            ["webapp.scto_form_choice_lists.list_uid"],
            name=op.f("fk_scto_form_questions_list_uid_scto_form_choice_lists"),
        ),
        sa.PrimaryKeyConstraint("question_uid", name=op.f("pk_scto_form_questions")),
        sa.UniqueConstraint(
            "form_uid",
            "question_name",
            "question_type",
            name=op.f("uq_scto_form_questions_form_uid"),
        ),
        schema="webapp",
    )
    op.create_table(
        "scto_form_question_labels",
        sa.Column("question_uid", sa.Integer(), nullable=False),
        sa.Column("language", sa.String(), nullable=False),
        sa.Column("label", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["question_uid"],
            ["webapp.scto_form_questions.question_uid"],
            name=op.f("fk_scto_form_question_labels_question_uid_scto_form_questions"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "question_uid", "language", name=op.f("pk_scto_form_question_labels")
        ),
        schema="webapp",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("scto_form_question_labels", schema="webapp")
    op.drop_table("scto_form_questions", schema="webapp")
    op.drop_table("scto_form_choice_labels", schema="webapp")
    op.drop_table("scto_question_mapping", schema="webapp")
    op.drop_table("scto_form_settings", schema="webapp")
    op.drop_table("scto_form_choice_lists", schema="webapp")
    with op.batch_alter_table("locations", schema="webapp") as batch_op:
        batch_op.drop_index("ix_locations_survey_uid_geo_level_uid")

    op.drop_table("locations", schema="webapp")
    op.drop_table("roles", schema="webapp")
    op.drop_table("parent_forms", schema="webapp")
    op.drop_table("module_status", schema="webapp")
    op.drop_table("module_questionnaire", schema="webapp")
    op.drop_table("geo_levels", schema="webapp")
    op.drop_table("surveys", schema="webapp")
    op.drop_table("reset_password_tokens", schema="webapp")
    op.drop_table("users", schema="webapp")
    op.drop_table("modules", schema="webapp")
    # ### end Alembic commands ###