"""
Add Email Schedule Filters model to DB
Alter config_type to config_name in Email Configs

Revision ID: 4c32850b5077
Revises: b26f412cf185
Create Date: 2024-07-25 12:32:53.701769

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "4c32850b5077"
down_revision = "b26f412cf185"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "email_schedule_filters",
        sa.Column("email_schedule_uid", sa.Integer(), nullable=False),
        sa.Column("filter_group_id", sa.Integer(), nullable=False),
        sa.Column("filter_variable", sa.String(length=255), nullable=False),
        sa.Column(
            "filter_operator",
            sa.String(length=16),
            sa.CheckConstraint(
                "filter_operator IN ('Equals', 'Not Equals', 'Contains')",
                name="ck_email_schedule_filters_operator",
            ),
            nullable=False,
        ),
        sa.Column("filter_value", sa.Text(), nullable=False),
        sa.Column(
            "filter_concatenator",
            sa.String(length=4),
            sa.CheckConstraint(
                "filter_operator IN ('AND', 'OR', NULL)",
                name="ck_email_schedule_filters_concatenator",
            ),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["email_schedule_uid"],
            ["webapp.email_schedules.email_schedule_uid"],
            name=op.f("fk_email_schedule_filters_email_schedule_uid_email_schedules"),
        ),
        sa.PrimaryKeyConstraint(
            "email_schedule_uid",
            "filter_group_id",
            "filter_variable",
            "filter_operator",
            "filter_value",
            name=op.f("pk_email_schedule_filters"),
        ),
        schema="webapp",
    )
    with op.batch_alter_table("email_configs", schema="webapp") as batch_op:
        batch_op.alter_column("config_type", new_column_name="config_name")
        batch_op.drop_constraint(
            "_email_configs_config_type_form_uid_uc", type_="unique"
        )
        batch_op.create_unique_constraint(
            "_email_configs_config_name_form_uid_uc", ["config_name", "form_uid"]
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("email_configs", schema="webapp") as batch_op:
        batch_op.alter_column("config_type", new_column_name="config_name")
        batch_op.drop_constraint(
            "_email_configs_config_name_form_uid_uc", type_="unique"
        )
        batch_op.create_unique_constraint(
            "_email_configs_config_type_form_uid_uc", ["config_type", "form_uid"]
        )

    op.drop_table("email_schedule_filters", schema="webapp")
    # ### end Alembic commands ###
