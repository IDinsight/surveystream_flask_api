"""
Add email delivery report tables

Revision ID: ce482510bdd1
Revises: 24b0ab4789b4
Create Date: 2024-09-24 04:49:00.774309

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "ce482510bdd1"
down_revision = "24b0ab4789b4"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "email_delivery_reports",
        sa.Column(
            "email_delivery_report_uid",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("email_schedule_uid", sa.Integer(), nullable=True),
        sa.Column("manual_email_trigger_uid", sa.Integer(), nullable=True),
        sa.Column("slot_date", sa.Date(), nullable=False),
        sa.Column("slot_time", sa.TIME(), nullable=False),
        sa.Column("delivery_time", sa.DateTime(), nullable=False),
        sa.Column(
            "slot_type",
            sa.String(length=100),
            sa.CheckConstraint(
                "slot_type IN ('schedule','trigger')",
                name="ck_email_delivery_reports_slot_type",
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["email_schedule_uid"],
            ["webapp.email_schedules.email_schedule_uid"],
            name=op.f("fk_email_delivery_reports_email_schedule_uid_email_schedules"),
        ),
        sa.ForeignKeyConstraint(
            ["manual_email_trigger_uid"],
            ["webapp.manual_email_triggers.manual_email_trigger_uid"],
            name=op.f(
                "fk_email_delivery_reports_manual_email_trigger_uid_manual_email_triggers"
            ),
        ),
        sa.PrimaryKeyConstraint(
            "email_delivery_report_uid", name=op.f("pk_email_delivery_reports")
        ),
        sa.UniqueConstraint(
            "manual_email_trigger_uid",
            "email_schedule_uid",
            "slot_type",
            "slot_date",
            "slot_time",
            name="email_delivery_reports_uc",
        ),
        schema="webapp",
    )
    op.create_table(
        "email_enumerator_delivery_status",
        sa.Column("email_delivery_report_uid", sa.Integer(), nullable=False),
        sa.Column("enumerator_uid", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.String(length=100),
            sa.CheckConstraint(
                "status IN ('sent','failed')",
                name="ck_email_enumerator_delivery_status_status",
            ),
            nullable=False,
        ),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["email_delivery_report_uid"],
            ["webapp.email_delivery_reports.email_delivery_report_uid"],
            name=op.f(
                "fk_email_enumerator_delivery_status_email_delivery_report_uid_email_delivery_reports"
            ),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["enumerator_uid"],
            ["webapp.enumerators.enumerator_uid"],
            name=op.f("fk_email_enumerator_delivery_status_enumerator_uid_enumerators"),
        ),
        sa.PrimaryKeyConstraint(
            "email_delivery_report_uid",
            "enumerator_uid",
            name=op.f("pk_email_enumerator_delivery_status"),
        ),
        schema="webapp",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("email_enumerator_delivery_status", schema="webapp")
    op.drop_table("email_delivery_reports", schema="webapp")
    # ### end Alembic commands ###
