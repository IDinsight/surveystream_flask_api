"""
Add Target config and Target scto question model to store target source configurations

Revision ID: 9f4edc77675a
Revises: 48b3877a09e6
Create Date: 2024-10-23 13:05:53.012686

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "9f4edc77675a"
down_revision = "48b3877a09e6"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "target_config",
        sa.Column("form_uid", sa.Integer(), nullable=False),
        sa.Column(
            "target_source",
            sa.String(length=8),
            sa.CheckConstraint(
                "target_source IN ('csv','scto')",
                name="ck_target_config_target_source",
            ),
            server_default="csv",
            nullable=False,
        ),
        sa.Column(
            "scto_input_type",
            sa.String(length=8),
            sa.CheckConstraint(
                "scto_input_type IN ('dataset','form')",
                name="ck_target_config_scto_input_type",
            ),
            nullable=True,
        ),
        sa.Column("scto_input_id", sa.String(length=256), nullable=True),
        sa.Column(
            "scto_encryption_flag", sa.Boolean(), server_default="false", nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["form_uid"],
            ["webapp.forms.form_uid"],
            name=op.f("fk_target_config_form_uid_forms"),
        ),
        sa.PrimaryKeyConstraint("form_uid", name=op.f("pk_target_config")),
        schema="webapp",
    )
    op.create_table(
        "target_scto_question",
        sa.Column("question_uid", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("form_uid", sa.Integer(), nullable=False),
        sa.Column("question_name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["form_uid"],
            ["webapp.forms.form_uid"],
            name=op.f("fk_target_scto_question_form_uid_forms"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("question_uid", name=op.f("pk_target_scto_question")),
        schema="webapp",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("target_scto_question", schema="webapp")
    op.drop_table("target_config", schema="webapp")
    # ### end Alembic commands ###
