""" Add user mapping tables, remove languages column from users and add a separate table for languages

Revision ID: cd4aaf081e89
Revises: 6d467e611238
Create Date: 2024-08-08 10:26:35.565432

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cd4aaf081e89'
down_revision = '6d467e611238'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('language_user_mapping',
    sa.Column('survey_uid', sa.Integer(), nullable=False),
    sa.Column('user_uid', sa.Integer(), nullable=False),
    sa.Column('language', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['survey_uid'], ['webapp.surveys.survey_uid'], name=op.f('fk_language_user_mapping_survey_uid_surveys')),
    sa.ForeignKeyConstraint(['user_uid'], ['webapp.users.user_uid'], name=op.f('fk_language_user_mapping_user_uid_users')),
    sa.PrimaryKeyConstraint('survey_uid', 'user_uid', 'language', name=op.f('pk_language_user_mapping')),
    schema='webapp'
    )
    op.create_table('user_mapping_config',
    sa.Column('config_uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('form_uid', sa.Integer(), nullable=False),
    sa.Column('mapping_type', sa.String(), nullable=True),
    sa.Column('mapping_values', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('mapped_to', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['form_uid'], ['webapp.forms.form_uid'], name=op.f('fk_user_mapping_config_form_uid_forms'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('config_uid', name=op.f('pk_user_mapping_config')),
    schema='webapp'
    )
    op.create_table('user_surveyor_mapping',
    sa.Column('form_uid', sa.Integer(), nullable=False),
    sa.Column('enumerator_uid', sa.Integer(), nullable=False),
    sa.Column('user_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['enumerator_uid'], ['webapp.enumerators.enumerator_uid'], name=op.f('fk_user_surveyor_mapping_enumerator_uid_enumerators'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['form_uid'], ['webapp.forms.form_uid'], name=op.f('fk_user_surveyor_mapping_form_uid_forms'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_uid'], ['webapp.users.user_uid'], name=op.f('fk_user_surveyor_mapping_user_uid_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('form_uid', 'enumerator_uid', name=op.f('pk_user_surveyor_mapping')),
    schema='webapp'
    )
    op.create_table('user_target_mapping',
    sa.Column('target_uid', sa.Integer(), nullable=False),
    sa.Column('user_uid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['target_uid'], ['webapp.targets.target_uid'], name=op.f('fk_user_target_mapping_target_uid_targets'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_uid'], ['webapp.users.user_uid'], name=op.f('fk_user_target_mapping_user_uid_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('target_uid', name=op.f('pk_user_target_mapping')),
    schema='webapp'
    )
    with op.batch_alter_table('users', schema='webapp') as batch_op:
        batch_op.drop_column('languages')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema='webapp') as batch_op:
        batch_op.add_column(sa.Column('languages', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))

    op.drop_table('user_target_mapping', schema='webapp')
    op.drop_table('user_surveyor_mapping', schema='webapp')
    op.drop_table('user_mapping_config', schema='webapp')
    op.drop_table('language_user_mapping', schema='webapp')
    # ### end Alembic commands ###
