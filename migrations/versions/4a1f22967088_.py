"""
Add default permissions to the permissions table,
these are the permissions recognized by the system and will be used to validate access

Revision ID: 4a1f22967088
Revises: d1d10486ab0a
Create Date: 2023-12-14 09:57:35.780151

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "4a1f22967088"
down_revision = "d1d10486ab0a"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("permissions", schema="webapp") as batch_op:
        batch_op.add_column(sa.Column("active", sa.Boolean(), nullable=False))

    default_permissions = [
        ("ADMIN", "Admin permission"),
        ("READ Survey Locations", "Read Survey Locations permission"),
        ("WRITE Survey Locations", "Write Survey Locations permission"),
        ("READ Enumerators", "Read Enumerators permission"),
        ("WRITE Enumerators", "Write Enumerators permission"),
        ("READ Targets", "Read Targets permission"),
        ("WRITE Targets", "Write Targets permission"),
        ("READ Assignments", "Read Assignments permission"),
        ("WRITE Assignments", "Write Assignments permission"),
        ("READ Audio Audits", "Read Audio Audits permission"),
        ("WRITE Audio Audits", "Write Audio Audits permission"),
        ("READ Photo Audits", "Read Photo Audits permission"),
        ("WRITE Photo Audits", "Write Photo Audits permission"),
        ("READ Productivity", "Read Productivity permission"),
        ("WRITE Productivity", "Write Productivity permission"),
        ("READ Data Quality", "Read Data Quality permission"),
        ("WRITE Data Quality", "Write Data Quality permission"),
        ("READ Emails", "Read Emails permission"),
        ("WRITE Emails", "Write Emails permission"),
        # Add more permissions as needed
    ]

    # Insert default permissions
    for name, description in default_permissions:
        op.execute(
            f"INSERT INTO webapp.permissions (name, description, active) VALUES ('{name}', '{description}', true)"
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("permissions", schema="webapp") as batch_op:
        batch_op.drop_column("active")

    # Remove all default permissions
    op.execute("DELETE FROM webapp.permissions WHERE active IS NOT NULL")

    # ### end Alembic commands ###
