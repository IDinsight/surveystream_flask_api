"""empty message

Revision ID: 93d7402aceca
Revises: cd4aaf081e89
Create Date: 2024-08-22 13:04:07.077816

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '93d7402aceca'
down_revision = 'cd4aaf081e89'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('email_template_tables',
    sa.Column('email_template_table_uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email_template_uid', sa.Integer(), nullable=False),
    sa.Column('table_name', sa.String(length=255), nullable=False),
    sa.Column('column_mapping', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('sort_list', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('variable_name', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['email_template_uid'], ['webapp.email_templates.email_template_uid'], name=op.f('fk_email_template_tables_email_template_uid_email_templates')),
    sa.PrimaryKeyConstraint('email_template_table_uid', name=op.f('pk_email_template_tables')),
    sa.UniqueConstraint('email_template_uid', 'table_name', 'variable_name', name='email_template_table_uc'),
    schema='webapp'
    )
    op.create_table('email_table_filters',
    sa.Column('email_template_table_uid', sa.Integer(), nullable=False),
    sa.Column('filter_group_id', sa.Integer(), nullable=False),
    sa.Column('filter_variable', sa.String(length=255), nullable=False),
    sa.Column('filter_operator', sa.String(length=16), nullable=False),
    sa.Column('filter_value', sa.Text(), nullable=False),
    sa.Column('filter_concatenator', sa.String(length=4), nullable=True),
    sa.ForeignKeyConstraint(['email_template_table_uid'], ['webapp.email_template_tables.email_template_table_uid'], name=op.f('fk_email_table_filters_email_template_table_uid_email_template_tables')),
    sa.PrimaryKeyConstraint('email_template_table_uid', 'filter_group_id', 'filter_variable', 'filter_operator', 'filter_value', name=op.f('pk_email_table_filters')),
    schema='webapp'
    )
    with op.batch_alter_table('email_schedule_filters', schema='webapp') as batch_op:
        batch_op.add_column(sa.Column('table_name', sa.String(length=255), nullable=False))

    with op.batch_alter_table('email_template_variables', schema='webapp') as batch_op:
        batch_op.drop_column('table_column_mapping')
        batch_op.drop_column('variable_type')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('email_template_variables', schema='webapp') as batch_op:
        batch_op.add_column(sa.Column('variable_type', sa.VARCHAR(length=8), server_default=sa.text("'string'::character varying"), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('table_column_mapping', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))

    with op.batch_alter_table('email_schedule_filters', schema='webapp') as batch_op:
        batch_op.drop_column('table_name')

    op.drop_table('email_table_filters', schema='webapp')
    op.drop_table('email_template_tables', schema='webapp')
    # ### end Alembic commands ###
