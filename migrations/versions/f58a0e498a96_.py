"""empty message

Revision ID: f58a0e498a96
Revises: 4ba0f2701c55
Create Date: 2024-09-10 06:53:13.842950

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "f58a0e498a96"
down_revision = "4ba0f2701c55"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("email_template_tables", schema="webapp") as batch_op:
        batch_op.alter_column(
            "column_mapping",
            existing_type=postgresql.JSONB(astext_type=sa.Text()),
            type_=postgresql.JSON(astext_type=sa.Text()),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "sort_list",
            existing_type=postgresql.JSONB(astext_type=sa.Text()),
            type_=postgresql.JSON(astext_type=sa.Text()),
            existing_nullable=True,
        )

    with op.batch_alter_table("email_template_variables", schema="webapp") as batch_op:
        batch_op.drop_constraint(
            constraint_name="pk_email_template_variables", type_="primary"
        )
        batch_op.add_column(
            sa.Column(
                "email_template_variable_uid",
                sa.Integer(),
                autoincrement=True,
                primary_key=True,
            )
        )
        batch_op.create_unique_constraint(
            "email_template_variable_uc",
            ["email_template_uid", "variable_name", "variable_expression"],
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("email_template_variables", schema="webapp") as batch_op:
        batch_op.drop_constraint("email_template_variable_uc", type_="unique")
        batch_op.drop_column("email_template_variable_uid")

    with op.batch_alter_table("email_template_tables", schema="webapp") as batch_op:
        batch_op.alter_column(
            "sort_list",
            existing_type=postgresql.JSON(astext_type=sa.Text()),
            type_=postgresql.JSONB(astext_type=sa.Text()),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "column_mapping",
            existing_type=postgresql.JSON(astext_type=sa.Text()),
            type_=postgresql.JSONB(astext_type=sa.Text()),
            existing_nullable=False,
        )

    # ### end Alembic commands ###
