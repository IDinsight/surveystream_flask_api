"""Add enumerators endpoint

Revision ID: 4ce98b420b89
Revises: d5b758a41d9f
Create Date: 2023-08-10 03:08:12.386763

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "4ce98b420b89"
down_revision = "d5b758a41d9f"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "enumerators",
        sa.Column("enumerator_uid", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("enumerator_id", sa.String(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("middle_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("mobile_primary", sa.String(), nullable=False),
        sa.Column("language", sa.String(), nullable=True),
        sa.Column("home_address", sa.String(), nullable=True),
        sa.Column("gender", sa.String(), nullable=False),
        sa.Column(
            "custom_fields", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("form_uid", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["form_uid"],
            ["webapp.parent_forms.form_uid"],
            name=op.f("fk_enumerators_form_uid_parent_forms"),
        ),
        sa.PrimaryKeyConstraint("enumerator_uid", name=op.f("pk_enumerators")),
        sa.UniqueConstraint(
            "form_uid", "enumerator_id", name="_enumerators_form_uid_enumerator_id_uc"
        ),
    )
    op.create_table(
        "location_monitor_mapping",
        sa.Column("form_uid", sa.Integer(), nullable=False),
        sa.Column("enumerator_uid", sa.Integer(), nullable=False),
        sa.Column("location_uid", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["enumerator_uid"],
            ["enumerators.enumerator_uid"],
            name=op.f("fk_location_monitor_mapping_enumerator_uid_enumerators"),
        ),
        sa.ForeignKeyConstraint(
            ["form_uid"],
            ["webapp.parent_forms.form_uid"],
            name=op.f("fk_location_monitor_mapping_form_uid_parent_forms"),
        ),
        sa.ForeignKeyConstraint(
            ["location_uid"],
            ["webapp.locations.location_uid"],
            name=op.f("fk_location_monitor_mapping_location_uid_locations"),
        ),
        sa.PrimaryKeyConstraint(
            "form_uid",
            "enumerator_uid",
            "location_uid",
            name=op.f("pk_location_monitor_mapping"),
        ),
    )
    op.create_table(
        "location_surveyor_mapping",
        sa.Column("form_uid", sa.Integer(), nullable=False),
        sa.Column("enumerator_uid", sa.Integer(), nullable=False),
        sa.Column("location_uid", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["enumerator_uid"],
            ["enumerators.enumerator_uid"],
            name=op.f("fk_location_surveyor_mapping_enumerator_uid_enumerators"),
        ),
        sa.ForeignKeyConstraint(
            ["form_uid"],
            ["webapp.parent_forms.form_uid"],
            name=op.f("fk_location_surveyor_mapping_form_uid_parent_forms"),
        ),
        sa.ForeignKeyConstraint(
            ["location_uid"],
            ["webapp.locations.location_uid"],
            name=op.f("fk_location_surveyor_mapping_location_uid_locations"),
        ),
        sa.PrimaryKeyConstraint(
            "form_uid",
            "enumerator_uid",
            "location_uid",
            name=op.f("pk_location_surveyor_mapping"),
        ),
    )
    op.create_table(
        "monitor_forms",
        sa.Column("enumerator_uid", sa.Integer(), nullable=False),
        sa.Column("form_uid", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.String(),
            sa.CheckConstraint(
                "status IN ('Active', 'Temp. Inactive', 'Dropout')",
                name="ck_monitor_forms_status",
            ),
            server_default="Active",
            nullable=False,
        ),
        sa.Column("user_uid", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["enumerator_uid"],
            ["enumerators.enumerator_uid"],
            name=op.f("fk_monitor_forms_enumerator_uid_enumerators"),
        ),
        sa.ForeignKeyConstraint(
            ["form_uid"],
            ["webapp.parent_forms.form_uid"],
            name=op.f("fk_monitor_forms_form_uid_parent_forms"),
        ),
        sa.PrimaryKeyConstraint(
            "form_uid", "enumerator_uid", name=op.f("pk_monitor_forms")
        ),
    )
    op.create_table(
        "surveyor_forms",
        sa.Column("enumerator_uid", sa.Integer(), nullable=False),
        sa.Column("form_uid", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.String(),
            sa.CheckConstraint(
                "status IN ('Active', 'Temp. Inactive', 'Dropout')",
                name="ck_surveyor_forms_status",
            ),
            server_default="Active",
            nullable=False,
        ),
        sa.Column("user_uid", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["enumerator_uid"],
            ["enumerators.enumerator_uid"],
            name=op.f("fk_surveyor_forms_enumerator_uid_enumerators"),
        ),
        sa.ForeignKeyConstraint(
            ["form_uid"],
            ["webapp.parent_forms.form_uid"],
            name=op.f("fk_surveyor_forms_form_uid_parent_forms"),
        ),
        sa.PrimaryKeyConstraint(
            "form_uid", "enumerator_uid", name=op.f("pk_surveyor_forms")
        ),
    )
    with op.batch_alter_table("surveys", schema="webapp") as batch_op:
        batch_op.add_column(
            sa.Column("prime_geo_level_uid", sa.Integer(), nullable=True)
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("surveys", schema="webapp") as batch_op:
        batch_op.drop_column("prime_geo_level_uid")

    op.drop_table("surveyor_forms")
    op.drop_table("monitor_forms")
    op.drop_table("location_surveyor_mapping")
    op.drop_table("location_monitor_mapping")
    op.drop_table("enumerators")
    # ### end Alembic commands ###
